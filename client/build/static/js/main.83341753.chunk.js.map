{"version":3,"sources":["components/Console/Console.module.css","components/UI/CSS/Window.module.css","components/UI/CSS/RotaryCtrl.module.css","components/Login/Login.module.css","components/UI/CSS/NavBar.module.css","components/UI/CSS/Settings.module.css","components/assembly/Stream.module.css","services/SocketContext.js","App.js","components/UI/experimentUI/NavBar.js","services/AppContext.js","components/Console/Console.js","components/Chat/Chat.js","components/Login/Login.js","services/PopUp.module.css","components/windows/InfoWindowContent.module.css","components/UI/experimentUI/Window.js","components/Chat/ViewCamStream.js","components/assembly/ViewCam.js","components/UI/templates/Switch.js","components/UI/CtrlUnits/LaserCtrl.js","components/assembly/LaserCtrl.js","components/UI/templates/SliderCtrl.js","components/UI/templates/SelectItem.js","components/UI/templates/Select.js","components/UI/CtrlUnits/HeaterCtrl.js","components/assembly/Heater.js","components/UI/CtrlUnits/RotaryCtrl.js","components/assembly/media/km100_outline.png","components/assembly/KM100.js","components/assembly/media/linear_outline.png","components/assembly/SM1ZP.js","components/UI/templates/LeftRightCtrl.js","components/UI/templates/UpDownCtrl.js","components/UI/CtrlUnits/Settings.js","components/assembly/ESPCamStream.js","components/UI/CtrlUnits/BeamSplitterCtrl.js","components/assembly/BeamSplitter.js","components/experiment/MichelsonInterferometer/MichelsonInterferometer.js","components/media/images/xrtl_team.png","components/windows/InfoWindowContent.js","components/windows/InfoWindow.js","components/UI/experimentUI/ExperimentUILayer.js","components/UI/experimentUI/DescriptiveTag.js","components/experiment/MichelsonInterferometer/MI_110422.js","components/UI/experimentUI/VirtualLayer.js","index.js","services/PopUpContext.js","components/UI/CSS/HeaterCtrl.module.css","components/Chat/CSS/Chat.module.css"],"names":["module","exports","manager","Manager","autoConnect","socket","SocketContext","createContext","jwt","require","useSocketContext","useContext","SocketContextProvider","children","useState","connected","setConnected","username","setUsername","URL","setURL","fontColor","setFontColor","appCtx","useAppContext","useEffect","on","e","addLog","setNewURL","newURL","disconnect","Provider","value","toggleConnection","close","payload","sub","component","iat","Date","now","exp","token","sign","auth","connect","setNewFont","newFont","App","process","title","NavBar","socketCtx","connectionStatusColor","autoRotateColor","autoRotate","showTagsColor","showTags","cameraStatusColor","showWebcam","showBeamColor","showBeam","showInfoWindowColor","showInfoWindow","id","className","styles","navbar","navMenu","onClick","toggleLogin","size","color","toggleShowVirtualLayer","toggleShowBeam","toggleAutoRotate","toggleShowTags","toggleShowWebcam","toggleShowInfoWindow","memo","isEqual","AppContext","React","AppContextProvider","setAutoRotate","showVirtualLayer","setShowVirtualLayer","Set","selectedComps","setSelectedComps","busyComps","setBusyComps","logs","setLogs","setShowTags","showLogin","setShowLogin","setShowInfoWindow","setShowBeam","toggleSelectedComp","compId","has","prev","filter","x","add","log","addBusyComp","removeBusyComp","Console","props","showConsole","setShowConsole","animation","setAnimation","consoleContainer","consoleMain","map","index","consoleHandler","closeConsole","openConsole","Chat","message","setMessage","showChat","setShowChat","chat","setChat","tempChat","useRef","current","chatContainer","chatMain","style","userId","msgForm","onSubmit","event","preventDefault","emit","type","name","placeholder","onChange","target","required","chatHandler","closeChat","openChat","Login","col","setfontColor","connection","setConnection","createFilterOptions","theme","createTheme","palette","mode","primary","light","main","dark","contrastText","spacing","handleLogin","String","error","popupWindow","popupInner","fontSize","container","columnSpacing","md","item","xs","autoFocus","variant","label","onKeyPress","key","marginLeft","width","helperText","Math","floor","random","document","getElementById","sx","m","freeSolo","renderInput","params","newValue","inputValue","filterOptions","options","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","endIcon","height","marginTop","Window","handle","window","top","left","windowHeader","display","cursor","float","header","onReset","onClose","windowContent","background","undefined","footer","windowFooter","onInfo","windowInfo","ViewCam","peerConnection","tempSwitch","setAttribute","peer","console","setRemoteDescription","data","then","createAnswer","sdp","setLocalDescription","localDescription","ontrack","srcObject","streams","onicecandidate","candidate","addIceCandidate","RTCIceCandidate","catch","autoPlay","playsInline","Cam","setFooter","lastChange","setLastChange","alertType","setAlertType","alert","setAlert","mounted","setMounted","popupCtx","usePopUpContext","tempWebcam","tempWebcam2","RTCPeerConnection","iceServers","urls","componentId","command","difH","difMin","timeNow","difSec","getHours","getMinutes","getSeconds","getDay","getMonth","toggleShowPopUp","ViewCamStream","newStatus","newFooter","time","SwiitchCtrl","switchValue","setSwitchValue","tempSlider","status","control","Box","FormGroup","Stack","direction","alignItems","Typography","start","Switch","checked","controlId","icon","inputProps","disabled","online","end","LaserCtrl","switchStatus","setSwitchStatus","onlineStatus","setOnlineStatus","ThemeProvider","vertical-align","handleChangeFooter","SliderCtrl","sliderPos","setSliderPos","marks","parseInt","min","max","handleSettingChanges","text","gutterBottom","mb","Slider","aria-label","defaultValue","valueLabelDisplay","step","onChangeCommitted","SelectItem","selectValue","setSelectValue","Select","MenuItem","SelectCtrl","FormControl","fullWidth","InputLabel","HeaterCtrl","setting","setSettings","temp","setTemp","settingCtrl","hiddenSetting","Temp","IconButton","Canvas1","Heater","gridTemplateColumns","mt","paddingLeft","Button","startIcon","Canvas2","RotaryCtrl","enteredRotation","setEnteredRotation","rotation","setRotation","tempRotaryCtrl","button1","button2","absolute","bottom","linear","busy","rotCW_Handler","Number","val","rotaryCtrl","CtrlLeft","CtrlRight","KM100","KM100_Background","rotationTop","rotationBottom","SM1ZP","SM1ZP_bg","LeftRightCtrl","handleCtrl","negativ","UpDownCtrl","Settings","UpDown","LeftRight","ESPCamStream","uint8Arr","Uint8Array","binary","i","length","fromCharCode","base64String","btoa","img","Image","onload","canvas","getContext","drawImage","this","src","Canvas","BeamSplitterCtrl","mx","BeamSplitter","MichelsonInterferometer","zero","innerHeight","innerWidth","halfWidth","topHigh","topHighMiddle","topMiddle","leftLeft","leftMiddle","leftRight","leftMiddleRight","leftCam","componentList","selected","InfoWindowContent","mainWrapper","backgroundImage","bgTeam","href","InfoWindow","ExperimentUILayer","connCtrl","Fragment","toggleSelect","DescriptiveTag","Html","position","zIndexRange","description","Model","group","useGLTF","nodes","materials","ref","dispose","args","scale","thickness","roughness","transmission","clearcoat","clearcoatRoughness","ior","envMapIntensity","attenuationColor","attenuationDistance","PI","onPointerDown","stopPropagation","castShadow","receiveShadow","geometry","SideMirrorMesh","material","BlackParts","transparent","opacity","SideMirrorMesh_1","ShinyParts","SideMirrorMesh_2","Mirror","TranslateMirrorMesh","TranslateMirrorMesh_1","TranslateMirrorMesh_2","PlaneMesh","PlaneMesh_1","BaseMesh","BaseMesh_1","LaserMesh","LaserMesh_1","SD5","LaserBeam","Laser","preload","VirtualLayer","colorManagement","softShadows","camera","fov","fallback","Environment","files","OrbitControls","MI_110422","ReactDOM","render","PopUpContext","PopUpContextProvider","showPopUp","setShowPopUp","setText","setType","errmsg","newText","newType","open","autoHideDuration","reason","popUp","severity"],"mappings":"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","file":"static/js/main.83341753.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"consoleContainer\":\"Console_consoleContainer__1dDWk\",\"consoleMain\":\"Console_consoleMain__SxxQK\",\"consoleHandler\":\"Console_consoleHandler__2f7jk\",\"openConsole\":\"Console_openConsole__1E2CK\",\"closeConsole\":\"Console_closeConsole__1Gp8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__eoZ4W\",\"windowHeader\":\"Window_windowHeader__2vHd6\",\"windowFooter\":\"Window_windowFooter__3xtgO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rotaryCtrl\":\"RotaryCtrl_rotaryCtrl__1dFJs\",\"CtrlLeft\":\"RotaryCtrl_CtrlLeft__1Oq_0\",\"CtrlRight\":\"RotaryCtrl_CtrlRight__RbI2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1DZpm\",\"close\":\"Login_close__jc06k\",\"popupWindow\":\"Login_popupWindow__2XsJg\",\"popupInner\":\"Login_popupInner__1U9Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__2NK8m\",\"navMenu\":\"NavBar_navMenu__DRNeT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UpDown\":\"Settings_UpDown__1XZ21\",\"LeftRight\":\"Settings_LeftRight__NUQR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Stream_Canvas__pCA10\",\"Settings\":\"Stream_Settings__2Zsif\"};","import { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { useAppContext } from \"./AppContext\";\r\nimport { Manager } from \"socket.io-client\";\r\n\r\nvar manager = new Manager(\"\", { autoConnect: false });\r\nvar socket = manager.socket(\"/\");\r\nvar SocketContext = createContext();\r\nvar jwt = require('jsonwebtoken');\r\n\r\nexport function useSocketContext() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketContextProvider({ children }) {\r\n  const [connected, setConnected] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [URL, setURL] = useState('');\r\n  const [fontColor, setFontColor] = useState('white');\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    socket.on('connect', (e) => {\r\n      setConnected(true)\r\n      appCtx.addLog(\"Server : Client connected to \" + URL)\r\n    });\r\n\r\n    socket.on('disconnect', (e) => {\r\n      setConnected(false)\r\n      appCtx.addLog(\"Server : Client disconnect.\")\r\n    })\r\n/*     socket.on('status', payload => {\r\n      if (payload.status.busy) { appCtx.addBusyComp(payload.componentId) } else {\r\n        appCtx.removeBusyComp(payload.componentId)\r\n      }\r\n    }) */\r\n  })\r\n\r\n  const setNewURL = (newURL, username) => {\r\n    socket.disconnect();\r\n    manager = new Manager(newURL, { autoConnect: false });\r\n    socket = manager.socket(\"/\");\r\n    SocketContext = createContext();\r\n    setURL(newURL);\r\n    setUsername(username);\r\n  }\r\n\r\n  const setNewFont = (newFont) => {\r\n    setFontColor(newFont);\r\n  }\r\n\r\n  const toggleConnection = (username) => {\r\n    if (!connected) {\r\n      var payload = {\r\n        sub: username,\r\n        component: 'client',\r\n        iat: Date.now(),\r\n        exp: Date.now() + 3600000,\r\n      }\r\n\r\n      var token = jwt.sign(payload, \"keysecret\");\r\n      socket.auth = { token: token }\r\n      socket.connect();\r\n\r\n      setConnected(true)\r\n      appCtx.addLog(\"Client connected by choice.\")\r\n    } else {\r\n      setConnected(false)\r\n      setUsername(\"\");\r\n      setNewURL(\"\");\r\n      socket.close();\r\n      appCtx.addLog(\"Client disconnected by choice.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket, connected, toggleConnection, setNewURL, setNewFont, username, fontColor }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n","import NavBar from \"./components/UI/experimentUI/NavBar\";\r\nimport Console from \"./components/Console/Console\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport Login from \"./components/Login/Login\";\r\nimport VirtualLayer from \"./components/UI/experimentUI/VirtualLayer\";\r\nimport { SocketContextProvider } from \"./services/SocketContext\";\r\nimport { AppContextProvider } from \"./services/AppContext\";\r\nimport ExperimentUILayer from \"./components/UI/experimentUI/ExperimentUILayer\";\r\nimport {PopUpContextProvider} from \"./services/PopUpContext\"\r\n\r\nconst App = () => {\r\n  process.title = 'XRTLApp';\r\n  return (\r\n    <AppContextProvider>\r\n      <SocketContextProvider>\r\n          <VirtualLayer />\r\n        <PopUpContextProvider>\r\n          <ExperimentUILayer />\r\n          <Console />\r\n          <Chat />\r\n          <NavBar />\r\n          <Login />\r\n        </PopUpContextProvider>\r\n      </SocketContextProvider>\r\n    </AppContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;","\r\nimport { MdOutlineScreenRotation, MdInfoOutline } from \"react-icons/md\"\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext'\r\nimport { GiLaserWarning } from \"react-icons/gi\"\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport { ImConnection } from \"react-icons/im\"\r\nimport { BsCamera } from 'react-icons/bs'\r\nimport styles from \"../CSS/NavBar.module.css\"\r\nimport { BsBox } from \"react-icons/bs\"\r\nimport { FaTags } from \"react-icons/fa\"\r\nimport { memo } from \"react\"\r\nimport {isEqual} from 'lodash';\r\n\r\nconst NavBar = () => {\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    let connectionStatusColor = \"\"\r\n    if (socketCtx.connected) { connectionStatusColor = \"white\" }\r\n    let autoRotateColor = \"\"\r\n    if (appCtx.autoRotate) { autoRotateColor = \"white\" }\r\n    let showTagsColor = \"\"\r\n    if (appCtx.showTags) { showTagsColor = \"white\" }\r\n    let cameraStatusColor = \"\";\r\n    if (appCtx.showWebcam) { cameraStatusColor = \"white\" }\r\n    let showBeamColor = \"\";\r\n    if (appCtx.showBeam) { showBeamColor = \"white\" }\r\n    let showInfoWindowColor = \"\";\r\n    if (appCtx.showInfoWindow) { showInfoWindowColor = \"white\" }\r\n\r\n    return <div id=\"navbar\" className={styles.navbar} >\r\n        <h1>XR TwinLab</h1>\r\n        <div className={styles.navMenu}>\r\n            <ul>\r\n                <Tooltip title=\"Connnection\">\r\n                    <li onClick={() => { (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin(); }}><ImConnection size={29} color={connectionStatusColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"2D model\">\r\n                    <li onClick={appCtx.toggleShowVirtualLayer}><BsBox size={26} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Laser beam\">\r\n                    <li onClick={appCtx.toggleShowBeam}><GiLaserWarning size={29} color={showBeamColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Rotation\">\r\n                    <li onClick={appCtx.toggleAutoRotate}><MdOutlineScreenRotation size={26} color={autoRotateColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Labels\">\r\n                    <li onClick={appCtx.toggleShowTags}><FaTags size={25} color={showTagsColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Webcam\">\r\n                    <li onClick={appCtx.toggleShowWebcam}><BsCamera size={26} color={cameraStatusColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title=\"Information\">\r\n                    <li onClick={appCtx.toggleShowInfoWindow}><MdInfoOutline size={26} color={showInfoWindowColor} /></li>\r\n                </Tooltip>\r\n\r\n            </ul>\r\n        </div>\r\n    </div>\r\n}\r\nexport default memo(NavBar, isEqual)","import React, { useState, useContext } from \"react\";\r\n\r\nconst AppContext = React.createContext()\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n\r\nexport function AppContextProvider({ children }) {\r\n  const [autoRotate, setAutoRotate] = useState(false);\r\n  const [showVirtualLayer, setShowVirtualLayer] = useState(true);\r\n  const [selectedComps, setSelectedComps] = useState(new Set());\r\n  const [busyComps, setBusyComps] = useState(new Set());\r\n  const [logs, setLogs] = useState([]);\r\n  const [showTags, setShowTags] = useState(true);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [showBeam, setShowBeam] = useState(false);\r\n\r\n\r\n  const toggleSelectedComp = compId => {\r\n    if (!selectedComps.has(compId)) {\r\n      setSelectedComps(prev => new Set(prev.add(compId)))\r\n    } else {\r\n      setSelectedComps(prev => new Set([...prev].filter(x => x !== compId)))\r\n    }\r\n  };\r\n\r\n  const addBusyComp = compId => {\r\n    if (!busyComps.has(compId)) {\r\n      setBusyComps(prev => new Set(prev.add(compId)))\r\n    }\r\n  };\r\n\r\n  const removeBusyComp = compId => {\r\n    if (busyComps.has(compId)) {\r\n      setBusyComps(prev => new Set([...prev].filter(x => x !== compId)))\r\n    }\r\n  };\r\n\r\n  const toggleAutoRotate = () => {\r\n    setAutoRotate(!autoRotate);\r\n  };\r\n\r\n  const toggleShowVirtualLayer = () => {\r\n    setShowVirtualLayer(!showVirtualLayer);\r\n  };\r\n  const toggleShowTags = () => {\r\n    setShowTags(!showTags)\r\n  }\r\n\r\n  const addLog = (log) => {\r\n    setLogs(prev => [log, ...prev])\r\n  };\r\n\r\n  const toggleShowBeam = () => {\r\n    setShowBeam(!showBeam);\r\n  }\r\n\r\n  const toggleShowInfoWindow = () => {\r\n    setShowInfoWindow(!showInfoWindow);\r\n  }\r\n\r\n  const toggleLogin = () => {\r\n    setShowLogin(!showLogin);\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        autoRotate,\r\n        toggleAutoRotate,\r\n        showVirtualLayer,\r\n        toggleShowVirtualLayer,\r\n        selectedComps,\r\n        toggleSelectedComp,\r\n        logs,\r\n        addLog,\r\n        busyComps,\r\n        addBusyComp,\r\n        removeBusyComp,\r\n        showTags,\r\n        toggleShowTags,\r\n        showBeam,\r\n        toggleShowBeam,\r\n        showLogin,\r\n        setShowLogin,\r\n        showInfoWindow,\r\n        toggleShowInfoWindow,\r\n        toggleLogin\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","import { useState, memo } from \"react\"\r\nimport { RiTerminalBoxFill } from \"react-icons/ri\"\r\nimport styles from \"./Console.module.css\"\r\nimport { useAppContext } from \"../../services/AppContext\"\r\nimport {isEqual} from 'lodash';\r\n\r\nconst Console = (props) => {\r\n  \r\n  const [showConsole, setShowConsole] = useState(false)\r\n  const [animation, setAnimation] = useState(\"\")\r\n  const appCtx = useAppContext();\r\n\r\n  const showConsoleHandler = () => {\r\n    setAnimation(showConsole ? styles.closeConsole : styles.openConsole)\r\n    setShowConsole(!showConsole)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.consoleContainer + \" \" + animation}>\r\n      <div className={styles.consoleMain}>\r\n        {appCtx.logs.map((payload, index) => {\r\n          return (<span key={index}>{payload}<br /></span>)\r\n        })}\r\n      </div>\r\n      <div className={styles.consoleHandler}><span>\r\n        <RiTerminalBoxFill size={35} onClick={showConsoleHandler} />\r\n      </span></div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Console, isEqual);\r\n","import { useEffect, useState, useRef, memo } from \"react\"\r\nimport styles from \"./CSS/Chat.module.css\"\r\nimport { ImBubble } from \"react-icons/im\"\r\nimport { MdSend } from \"react-icons/md\"\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport {isEqual} from 'lodash';\r\n\r\n\r\nconst Chat = (props) => {\r\n  const [message, setMessage] = useState(\"\")\r\n  const [showChat, setShowChat] = useState(false)\r\n  const [animation, setAnimation] = useState(\"\")\r\n  const [chat, setChat] = useState([]);\r\n  const socketCtx = useSocketContext();\r\n  const tempChat = useRef();\r\n\r\n  const ChatEmit = () => {\r\n    socketCtx.socket.on(\"message\", (payload) => {\r\n      setChat([...chat, payload])\r\n    })\r\n  }\r\n\r\n  tempChat.current = ChatEmit;\r\n\r\n  useEffect(() => {\r\n    tempChat.current();\r\n  }, [socketCtx, chat])\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    socketCtx.socket.emit(\"message\", { userId: socketCtx.username, message, color: socketCtx.fontColor });\r\n    setMessage(\"\");\r\n  }\r\n\r\n  const showChatHandler = () => {\r\n    setAnimation(showChat ? styles.closeChat : styles.openChat)\r\n    setShowChat(!showChat)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.chatContainer + \" \" + animation}\r\n    >\r\n      <div className={styles.chatMain}>\r\n        {chat.map((payload, index) => {\r\n          return (\r\n            <b key={index} >\r\n              <span style={{ color: payload.color }}> {payload.userId}:</span> <span >{payload.message}</span>\r\n              <br />\r\n            </b>\r\n          )\r\n        })}\r\n      </div>\r\n      <form className={styles.msgForm} onSubmit={sendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"message\"\r\n          placeholder=\"Type Message here\"\r\n          value={message}\r\n          onChange={(e) => {\r\n            setMessage(e.target.value)\r\n          }}\r\n          required\r\n        />\r\n        <button type=\"submit\"><MdSend size={25} /></button>\r\n      </form>\r\n      <div className={styles.chatHandler + \" \" + animation}>\r\n        <span>\r\n          <ImBubble size={35} onClick={showChatHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Chat, isEqual);\r\n","import { Grid, Autocomplete, Box, TextField, createTheme, ThemeProvider, Button, IconButton } from '@mui/material';\r\nimport HighlightOffOutlinedIcon from '@mui/icons-material/HighlightOffOutlined';\r\nimport FormatColorTextIcon from '@mui/icons-material/FormatColorText';\r\nimport { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport { useSocketContext } from '../../services/SocketContext'\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport React, { useState, memo } from \"react\";\r\nimport styles from \"./Login.module.css\"\r\nimport {isEqual} from 'lodash';\r\n\r\nconst Login = (props) => {\r\n    var col = ['IndianRed', 'FireBrick', 'MediumVioletRed', 'HotPink', 'Coral', 'DarkOrange', 'Yellow',\r\n        'Khaki', 'Plum', 'DarkOrchid', 'ForestGreen', 'DarkOliveGreen', 'LightGreen', 'Teal', 'Aqua', 'Blue', 'LightSkyBlue']\r\n    const connectionOption = [{ title: 'http://localhost:7000' }, { title: 'http://192.168.1.42:7000' }, { title: 'http://10.232.37.40:7000' }]\r\n\r\n    const [fontColor, setfontColor] = useState(\"white\");\r\n    const [connection, setConnection] = useState(null);\r\n    const [username, setUsername] = useState(\"\");\r\n    const filter = createFilterOptions();\r\n\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#fff',\r\n            },\r\n        },\r\n        spacing: 2,\r\n    })\r\n\r\n    const handleLogin = () => {\r\n        if (username !== \"\") {\r\n            try {\r\n                socketCtx.setNewURL(String(connection.title), String(username));\r\n                socketCtx.toggleConnection(String(username));\r\n                appCtx.setShowLogin(false);\r\n            }\r\n            catch (error) { }\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    const autoCompleteHandle = (event, newValue) => {\r\n        if (typeof newValue === 'string') {\r\n            setConnection({ title: newValue, });\r\n        } else if (newValue && newValue.inputValue) {\r\n            setConnection({ title: newValue.inputValue, });\r\n        } else {\r\n            setConnection(newValue);\r\n        }\r\n    }\r\n\r\n    const filterOption = (options, params) => {\r\n        const filtered = filter(options, params);\r\n        const { inputValue } = params;\r\n        const isExisting = options.some((option) => inputValue === option.title);\r\n        if (inputValue !== '' && !isExisting) {\r\n            filtered.push({ inputValue, title: `Add \"${inputValue}\"`, });\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    const getLabel = (option) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n        }\r\n        if (option.inputValue) {\r\n            return option.inputValue;\r\n        }\r\n        return option.title;\r\n    }\r\n\r\n    if (appCtx.showLogin) {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <div className={styles.popupWindow}>\r\n                </div>\r\n                <div className={styles.popupInner} >\r\n                    <h3 title=\"settings\">Settings</h3>\r\n                    <div className={styles.close}>\r\n                        <IconButton onClick={(e) => {\r\n                            appCtx.setShowLogin(false);\r\n\r\n                        }} >\r\n                            <HighlightOffOutlinedIcon fontSize=\"large\" />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Grid container columnSpacing={{ md: 95 }}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                autoFocus\r\n                                variant=\"outlined\"\r\n                                label=\"Username \"\r\n                                value={username}\r\n                                onChange={handleChange}\r\n                                onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                                style={{ marginLeft: 17, width: 250 }}\r\n                                error={username === \"\"}\r\n                                helperText={username === \"\" ? 'Please enter your username!' : ' '}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <IconButton onClick={(e) => {\r\n                                col = col[Math.floor(Math.random() * 16)]\r\n                                document.getElementById(\"colorIcon\").style.color = col\r\n                                setfontColor(col);\r\n                                socketCtx.setNewFont(col);\r\n                            }} >\r\n                                <FormatColorTextIcon id=\"colorIcon\" color={fontColor} fontSize=\"large\" />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{ m: 8, width: 250 }} >\r\n                        <Autocomplete\r\n                            value={connection}\r\n                            freeSolo\r\n                            renderInput={(params) => (\r\n                                <TextField {...params} label=\"Choose server address \" />)}\r\n                            onChange={autoCompleteHandle}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            filterOptions={filterOption}\r\n                            selectOnFocus\r\n                            clearOnBlur\r\n                            handleHomeEndKeys\r\n                            options={connectionOption}\r\n                            getOptionLabel={getLabel}\r\n                            renderOption={(props, option) => <li {...props}>{option.title}</li>}\r\n                        />\r\n                    </Box>\r\n\r\n                    <Button size=\"small\" type=\"submit\" variant=\"contained\"\r\n                        onClick={handleLogin}\r\n                        endIcon={<SendIcon />}\r\n                        style={{ width: 90, height: 30, marginTop: -3, marginLeft: 270 }}\r\n                    >Login</Button>\r\n\r\n                </div>\r\n            </ThemeProvider>\r\n        );\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default memo(Login, isEqual);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popUp\":\"PopUp_popUp__IolRq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"InfoWindowContent_mainWrapper__345Fv\"};","import { IoReloadOutline, IoInformationCircleOutline } from \"react-icons/io5\"\r\nimport { CgCloseO } from \"react-icons/cg\"\r\nimport styles from \"../CSS/Window.module.css\"\r\nimport Draggable from \"react-draggable\"\r\nimport { memo } from \"react\"\r\nimport {isEqual} from 'lodash';\r\n\r\nconst Window = (props) => {\r\n  return (\r\n    <Draggable handle=\".draggableHandler\">\r\n      <div\r\n        className={styles.window}\r\n        style={{ top: props.top + \"px\", left: props.left + \"px\" }}\r\n      >\r\n        <div className={styles.windowHeader}>\r\n          <span\r\n            className=\"draggableHandler\" //FIXME draggable doesnt seem to work with inline JSX classes. \r\n            style={{\r\n              display: 'block',\r\n              width: \"calc(100% - 50px)\",\r\n              cursor: \"move\",\r\n              float: \"left\"\r\n            }}\r\n          >\r\n            {props.header}\r\n          </span>\r\n          <span onClick={props.onReset} > <IoReloadOutline size={20} />        </span>\r\n          <span onClick={props.onClose}><CgCloseO size={20} /></span>\r\n        </div>\r\n        <div\r\n          className={styles.windowContent}\r\n          style={{\r\n            height: props.height,\r\n            width: props.width,\r\n            background: \"url(\" + props.background + \")\",\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n        {props.footer !== undefined && (\r\n          <div className={styles.windowFooter}>\r\n            <span onClick={props.onInfo}> <IoInformationCircleOutline size={25} /></span>\r\n            <label>{props.footer}</label>\r\n          </div>\r\n        )}\r\n        <div className={styles.windowInfo}>\r\n\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\nexport default memo(Window, isEqual);\r\n","import { useSocketContext } from '../../services/SocketContext'\r\nimport { useRef, useEffect } from 'react';\r\n\r\n\r\nconst ViewCam = (props) => {\r\n    const socketCtx = useSocketContext();\r\n    const tempSwitch = useRef();\r\n    var peerConnection\r\n\r\n\r\n\r\n    socketCtx.socket.emit('viewer', props.component)\r\n\r\n\r\n    const view = () => {\r\n        document.getElementById('video').setAttribute('style', 'display: true')\r\n        socketCtx.socket.emit('viewer', props.component)\r\n\r\n        socketCtx.socket.on('offer', (payload) => {\r\n            peerConnection = props.peer;\r\n            console.log(peerConnection)\r\n            peerConnection\r\n                .setRemoteDescription(payload.data)\r\n                .then(() => peerConnection.createAnswer())\r\n                .then((sdp) => peerConnection.setLocalDescription(sdp))\r\n                .then(() => socketCtx.socket.emit('answer', { id: payload.id, data: peerConnection.localDescription }))\r\n\r\n            peerConnection.ontrack = (event) => {\r\n                document.getElementById('video').srcObject = event.streams[0];\r\n            }\r\n\r\n            peerConnection.onicecandidate = (event) => {\r\n                if (event.candidate) {\r\n                    socketCtx.socket.emit('candidate', { id: payload.id, data: event.candidate })\r\n                }\r\n            }\r\n        })\r\n\r\n        socketCtx.socket.on('candidate', (payload) => {\r\n            peerConnection\r\n                .addIceCandidate(new RTCIceCandidate(payload.data))\r\n                .catch(e => console.error(e))\r\n        })\r\n    }\r\n\r\n    tempSwitch.current = view\r\n\r\n    useEffect(() => {\r\n        tempSwitch.current();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <video className=\"video\" id='video' autoPlay playsInline width=\"640px\" height=\"480px\" ></video>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewCam;","import { useState, useEffect, useRef } from \"react\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\"\r\nimport { useSocketContext } from \"../../services/SocketContext\"\r\nimport  ViewCamStream from \"../Chat/ViewCamStream\";\r\n\r\n\r\nconst Cam = (props) => {\r\n    const [footer, setFooter] = useState(props.footer);\r\n    const [lastChange, setLastChange] = useState(['', '', '']);\r\n    const [alertType, setAlertType] = useState('info');\r\n    var [alert, setAlert] = useState(false);\r\n    var [mounted, setMounted] = useState(false);\r\n\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n    const popupCtx = usePopUpContext();\r\n    const tempWebcam = useRef();\r\n    const tempWebcam2 = useRef();\r\n\r\n    const config = { iceServers: [{ urls: [\"stun:stun.stunprotocol.org\"] }] }\r\n    var peerConnection = new RTCPeerConnection(config);\r\n\r\n    const handleCloseWindow = () => {\r\n        appCtx.toggleSelectedComp(props.id)\r\n        peerConnection.close();\r\n        socketCtx.socket.emit('watcher disconnect')\r\n        //peerConnection = new RTCPeerConnection(config);\r\n\r\n    };\r\n\r\n    const handleReset = () => {\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            componentId: props.id,\r\n            command: \"reset\"\r\n        })\r\n    }\r\n\r\n    const handleInfo = () => {\r\n        var timeNow = new Date();\r\n        let difH, difMin, difSec = 0;\r\n        alert = '';\r\n\r\n        timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n        if (lastChange[0] === '') {\r\n            alert = 'No last change detected!'\r\n        } else if (timeNow[0] > lastChange[0]) {\r\n            difH = timeNow[0] - lastChange[0];\r\n            alert = 'Last change is more than ' + difH + ' h ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n            difSec = timeNow[2] - lastChange[2]\r\n            alert = 'Last change is ' + difSec + ' s ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n            difMin = timeNow[1] - lastChange[1]\r\n            alert = 'Last change is more than ' + difMin + ' min ago!'\r\n        } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n            alert = 'Last change is more than 24 h ago!'\r\n        } else {\r\n            alert = 'No last change detected!'\r\n        }\r\n\r\n        setAlert(alert);\r\n        setAlertType('info');\r\n        popupCtx.toggleShowPopUp(alert, alertType);\r\n    }\r\n\r\n    const handleChangeFooter = (newFooter) => {\r\n        if (!mounted) {\r\n            mounted = true\r\n            setMounted(true)\r\n            var time = new Date();\r\n            setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n            setFooter(newFooter);\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n            setMounted(false);\r\n        }\r\n    };\r\n\r\n    const webcamEmitPic = () => {\r\n        socketCtx.socket.on(\"data\", function (payload) {\r\n            console.log(\"Data payload\", payload)\r\n        });\r\n    }\r\n\r\n    const webcamStartStreaming = () => {\r\n        socketCtx.socket.emit(\"join stream room\", { id: props.id, userId: socketCtx.username });\r\n    }\r\n\r\n    tempWebcam.current = webcamEmitPic;\r\n    tempWebcam2.current = webcamStartStreaming;\r\n\r\n    useEffect(() => {\r\n        tempWebcam.current();\r\n    }, [socketCtx.socket]);\r\n\r\n    useEffect(() => {\r\n        tempWebcam2.current();\r\n    }, []);\r\n\r\n    return (\r\n        <Window\r\n            header={props.title + \" (\" + props.id + \")\"}\r\n            top={props.top}\r\n            left={props.left}\r\n            height=\"480px\"\r\n            width=\"620px\"\r\n            onClose={handleCloseWindow}\r\n            onReset={handleReset}\r\n            onInfo={handleInfo}\r\n            footer={footer}\r\n        >\r\n            <ViewCamStream\r\n                peer={peerConnection}\r\n                component={props.id}\r\n                newStatus={handleChangeFooter}\r\n                footer={footer}\r\n            />\r\n\r\n        </Window>\r\n    )\r\n}\r\n\r\nexport default Cam;","import { Switch, Box, Typography, FormGroup, Stack } from '@mui/material';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nconst SwiitchCtrl = (props) => {\r\n    const [switchValue, setSwitchValue] = useState(false);\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n    const tempSlider = useRef();\r\n\r\n    const sliderEmit = () => {\r\n        socketCtx.socket.on(\"status\", payload => {\r\n            if (payload.component === props.component) {\r\n                setSwitchValue(payload.status[props.control]);\r\n            }\r\n        })\r\n    }\r\n    tempSlider.current = sliderEmit;\r\n\r\n    useEffect(() => {\r\n        tempSlider.current();\r\n    }, [socketCtx.socket])\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSwitchValue(newValue);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            componentId: props.component,\r\n            command: {\r\n                controlId: props.command,\r\n                [props.option]: newValue,\r\n            }\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            componentId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set switch on \" + props.component + \" to \" + switchValue)\r\n\r\n        try {\r\n            props.icon.style.color = (switchValue === true) ? 'grey' : 'white';\r\n        } catch (error) { }\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: 250, m: 2 }}>\r\n            <FormGroup>\r\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                    <Typography>{props.start}</Typography>\r\n                    <Switch checked={switchValue}\r\n                        onChange={handleSettingChanges}\r\n                        inputProps={{ 'aria-label': 'controlled' }}\r\n                        disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true} />\r\n                    <Typography>{props.end}</Typography>\r\n                </Stack>\r\n            </FormGroup>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SwiitchCtrl;\r\n","import { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { GiLaserWarning } from \"react-icons/gi\"\r\nimport { Box } from '@mui/material';\r\nimport Switch from '../templates/Switch';\r\n\r\nconst LaserCtrl = (props) => {\r\n  const [switchStatus, setSwitchStatus] = useState(false);\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n  const tempSwitch = useRef();\r\n  const appCtx = useAppContext();\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: 'dark',\r\n      primary: {\r\n        light: '#01bd7d',\r\n        main: '#01bd7d',\r\n        dark: '#01bd7d',\r\n        contrastText: '#fff',\r\n      },\r\n    }\r\n  })\r\n\r\n  const switchFunction = () => {\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      componentId: props.component,\r\n      command: \"getStatus\"\r\n    })\r\n\r\n    socketCtx.socket.on(\"status\", payload => {\r\n      if (payload.componentId === props.component) {\r\n        setSwitchStatus(payload.status['laser'])\r\n      }\r\n    })\r\n\r\n    socketCtx.socket.on('footer', payload => {\r\n      if (payload.componentId === props.component) {\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    })\r\n\r\n    socketCtx.socket.emit('getFooter', props.component)\r\n\r\n    socketCtx.socket.on('getFooter', payload => {\r\n      if (payload.componentId === props.component) {\r\n        setOnlineStatus(!payload.online)\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    })\r\n\r\n    appCtx.addLog(\"User set position on \" + props.component + \" to \" + switchStatus)\r\n  }\r\n\r\n  tempSwitch.current = switchFunction\r\n  useEffect(() => {\r\n    tempSwitch.current();\r\n  }, [socketCtx.socket])\r\n\r\n  return (\r\n    <div className=\"switchOnOff\">\r\n      <ThemeProvider theme={theme} >\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n          <Switch component={props.component} command=\"switch\" start='Off' end='On' checked={switchStatus} icon={document.getElementById(\"icon\")} online={onlineStatus} option = \"val\"/>\r\n          <GiLaserWarning id=\"icon\" size={100} vertical-align=\"middle\" color=\"grey\" />\r\n        </Box>\r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}\r\nexport default LaserCtrl\r\n","import { useState } from \"react\";\r\nimport Window from \"../UI/experimentUI/Window\"\r\nimport SwitchOnOff from \"../UI/CtrlUnits/LaserCtrl\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { useSocketContext } from \"../../services/SocketContext\"\r\nimport { usePopUpContext } from \"../../services/PopUpContext\"\r\n\r\nconst LaserCtrl = (props) => {\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n  var [mounted, setMounted] = useState(false);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    if (!mounted) {\r\n      mounted = true\r\n      setMounted(true)\r\n      var time = new Date();\r\n      setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      setFooter(newFooter);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n      setMounted(false);\r\n    };\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      componentId: props.id,\r\n      command: \"reset\"\r\n    })\r\n\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  return (\r\n    <Window\r\n      header={props.title + \" (\" + props.id + \")\"}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"200px\"\r\n      width=\"300px\"\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      newStatus={handleChangeFooter}\r\n      footer={footer}\r\n    >\r\n      <SwitchOnOff\r\n        component={props.id}\r\n        top=\"0\"\r\n        left=\"0\"\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n      />\r\n    </Window>\r\n  )\r\n}\r\nexport default LaserCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { Box, Stack, Typography, Slider } from \"@mui/material\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nconst SliderCtrl = (props) => {\r\n  const [sliderPos, setSliderPos] = useState(props.sliderPos);\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const tempSlider = useRef();\r\n\r\n  const marks = [\r\n    { value: parseInt(props.min), label: props.min, },\r\n    { value: 0, label: '0', },\r\n    { value: parseInt(props.max), label: props.max, },\r\n  ]\r\n\r\n  const sliderEmit = () => {\r\n    socketCtx.socket.on(\"status\", payload => {\r\n      if (payload.component === props.component) {\r\n        setSliderPos(payload.status[props.control]);\r\n      }\r\n    })\r\n  }\r\n  tempSlider.current = sliderEmit;\r\n\r\n  useEffect(() => {\r\n    tempSlider.current();\r\n  }, [socketCtx.socket])\r\n\r\n  const handleSettingChanges = (event, newValue) => {\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      componentId: props.component,\r\n      command: {\r\n        controlId: props.command,\r\n        [props.option]: newValue\r\n      }\r\n    })\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: \"Last change by: \" + socketCtx.username,\r\n      componentId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User set position on \" + props.component + \" to \" + sliderPos)\r\n  }\r\n  if (props.text) {\r\n    return (\r\n      <Box sx={{ width: 250, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n            defaultValue={0}\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={sliderPos}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={props.text}\r\n            disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  } else {\r\n    return (\r\n      <Box sx={{ width: 250, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n            defaultValue={0}\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={sliderPos}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={marks}\r\n            disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SliderCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { MenuItem, Select } from '@mui/material';\r\nimport { useState } from \"react\";\r\n\r\nconst SelectItem = (props) => {\r\n    const [selectValue, setSelectValue] = useState('');\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSelectValue(newValue.props.value);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            componentId: props.component,\r\n            command: {\r\n                controlId: props.command,\r\n                [props.option]: newValue.props.value\r\n            }\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            componentId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set switch on \" + props.component + \" to \" + selectValue)\r\n    }\r\n\r\n    if (props.title === 'Average time (ms)') {\r\n        return (\r\n            <Select\r\n                value={selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={100}>100</MenuItem>\r\n                <MenuItem value={500}>500</MenuItem>\r\n                <MenuItem value={1000}>1000</MenuItem>\r\n                <MenuItem value={2000}>2000</MenuItem>\r\n\r\n            </Select>\r\n        )\r\n    } else if (props.title === 'Update time (s)') {\r\n        return (\r\n            <Select\r\n                value={selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={1000}>100</MenuItem>\r\n                <MenuItem value={5000}>500</MenuItem>\r\n                <MenuItem value={10000}>1000</MenuItem>\r\n            </Select>\r\n        )\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default SelectItem;","\r\nimport { FormControl, InputLabel, Box } from '@mui/material';\r\nimport SelectItem from './SelectItem'\r\n\r\n\r\nconst SelectCtrl = (props) => {\r\n    return (\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n            <FormControl fullWidth>\r\n                <InputLabel >{props.title}</InputLabel>\r\n                <SelectItem title={props.title} component={props.component} online={props.online} command={props.command} option={props.option} />\r\n            </FormControl>\r\n        </Box>\r\n    )\r\n}\r\nexport default SelectCtrl;","import { useState, useEffect, useRef } from \"react\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport DeviceThermostatOutlinedIcon from '@mui/icons-material/DeviceThermostatOutlined';\r\nimport MicrowaveOutlinedIcon from '@mui/icons-material/MicrowaveOutlined';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport Slider from '../templates/SliderCtrl'\r\nimport Switch from '../templates/Switch'\r\nimport Select from '../templates/Select'\r\nimport { Box, createTheme, ThemeProvider, Button, IconButton, Typography } from '@mui/material';\r\nimport styles from \"../CSS/HeaterCtrl.module.css\";\r\n\r\nconst HeaterCtrl = (props) => {\r\n    const [onlineStatus, setOnlineStatus] = useState(false);\r\n    const [setting, setSettings] = useState(true);\r\n    var [mounted, setMounted] = useState(false);\r\n    const [temp, setTemp] = useState('-°C')\r\n    const socketCtx = useSocketContext();\r\n    const settingCtrl = useRef();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#01bd7d',\r\n            },\r\n        }\r\n    })\r\n\r\n    const hiddenSetting = () => {\r\n        setSettings(!setting);\r\n    }\r\n    const heaterEmit = () => {\r\n        if (!mounted) {\r\n            mounted = true\r\n            setMounted(true)\r\n\r\n            socketCtx.socket.emit(\"command\", {\r\n                userId: socketCtx.username,\r\n                componentId: props.component,\r\n                command: \"getStatus\"\r\n            })\r\n            socketCtx.socket.on('footer', payload => {\r\n                if (payload.componentId === props.component) {\r\n                    props.newStatus(String(payload.status))\r\n                }\r\n            })\r\n\r\n            socketCtx.socket.emit('getFooter', props.component)\r\n\r\n            socketCtx.socket.on('getFooter', payload => {\r\n                if (payload.componentId === props.component) {\r\n                    setOnlineStatus(true)//(payload.online)\r\n                    props.newStatus(String(payload.status))\r\n                }\r\n            });\r\n\r\n            socketCtx.socket.on(\"data\", (payload) => {\r\n                console.log(\"hier \")\r\n                if (payload.componentId === props.component) {\r\n                    setTemp(payload.data.data);\r\n                }\r\n            });\r\n            \r\n            socketCtx.socket.on(\"status\", payload => {\r\n                if (payload.componentId === props.component) {\r\n                    console.log(\"Status of settings:   \", payload)\r\n                }\r\n            });\r\n\r\n\r\n            mounted = false;\r\n            setMounted(false);\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n            setMounted(false);\r\n        }\r\n    }\r\n    settingCtrl.current = heaterEmit;\r\n\r\n    useEffect(() => {\r\n        settingCtrl.current()\r\n    }, [socketCtx.socket]);\r\n\r\n    if (setting) {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <div className={styles.Temp}>\r\n                    <Typography variant=\"h2\">{temp}</Typography>\r\n                    <IconButton onClick={hiddenSetting}  >\r\n                        <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                    </IconButton>\r\n                </div>\r\n                <div className={styles.Canvas1}>\r\n                    <canvas id=\"Gauge\" />\r\n                </div>\r\n                <div className={styles.Heater} >\r\n                    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', mt: -2 }}>\r\n                        <div style={{ paddingLeft: 10 }}>\r\n                            <Button sx={{ fontSize: 17 }} startIcon={<MicrowaveOutlinedIcon />}>Heater settings </Button>\r\n                            <Slider title=\"Power\" component={props.component} command=\"output\" min={0} max={255} online={onlineStatus} option='power' />\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n                <div className={styles.Switch} >\r\n                    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)' }}>\r\n                        <Switch component={props.component} command=\"output\" start='Off' end='On' online={onlineStatus} option=\"stream\" />\r\n                    </Box>\r\n                </div>\r\n            </ThemeProvider>\r\n        )\r\n    } else {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <div className={styles.Temp}>\r\n                    <Typography variant=\"h2\">{temp}</Typography>\r\n                    <IconButton onClick={hiddenSetting}  >\r\n                        <SettingsOutlinedIcon sx={{ fontSize: 35 }} />\r\n                    </IconButton>\r\n                </div>\r\n                <div className={styles.Canvas2}>\r\n                    <canvas id=\"Heater\" />\r\n                </div>\r\n                <div className={styles.Canvas1}>\r\n                    <canvas id=\"Gauge\" />\r\n                </div>\r\n                <div className={styles.Heater} >\r\n                    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', mt: -2 }}>\r\n                        <div style={{ paddingLeft: 10 }}>\r\n                            <Button sx={{ fontSize: 17 }} startIcon={<MicrowaveOutlinedIcon />}>Heater settings </Button>\r\n                            <Slider title=\"Power\" component={props.component} command=\"output\" min={0} max={255} online={onlineStatus} option='power' />\r\n                        </div>\r\n                        <div style={{ paddingLeft: 20 }}>\r\n                            <Button sx={{ fontSize: 17 }} startIcon={<DeviceThermostatOutlinedIcon />}>Gauge settings </Button>\r\n                            <Select title=\"Average time (ms)\" component={props.component} online={onlineStatus} command=\"thermistor\" option=\"averageTime\" />\r\n                            <Select title=\"Update time (s)\" component={props.component} online={onlineStatus} command=\"thermistor\" option=\"updateTime\" />\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n                <div className={styles.Switch} >\r\n                    <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)' }}>\r\n                        <Switch component={props.component} command=\"output\" start='Off' end='On' online={onlineStatus} option=\"stream\" />\r\n                        <Switch component={props.component} command=\"thermistor\" start='Off' end='On' online={onlineStatus} option=\"val\" />\r\n                    </Box>\r\n                </div>\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaterCtrl;","import { useState, useEffect, useRef } from \"react\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport HeaterCtrl from \"../UI/CtrlUnits/HeaterCtrl\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\"\r\nimport { useSocketContext } from \"../../services/SocketContext\"\r\n\r\n\r\nconst Heater = (props) => {\r\n    const [footer, setFooter] = useState(props.footer);\r\n    const [lastChange, setLastChange] = useState(['', '', '']);\r\n    const [alertType, setAlertType] = useState('info');\r\n    var [alert, setAlert] = useState(false);\r\n    var [mounted, setMounted] = useState(false);\r\n\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n    const popupCtx = usePopUpContext();\r\n    const tempWebcam = useRef();\r\n    const tempWebcam2 = useRef();\r\n    \r\n    const handleCloseWindow = () => {\r\n        appCtx.toggleSelectedComp(props.id)\r\n        socketCtx.socket.emit(\"leave stream room\", { id: props.id, userId: socketCtx.username });\r\n    };\r\n\r\n    const handleReset = () => {\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            componentId: props.id,\r\n            command: \"reset\"\r\n        })\r\n    }\r\n\r\n    const handleInfo = () => {\r\n        var timeNow = new Date();\r\n        let difH, difMin, difSec = 0;\r\n        alert = '';\r\n\r\n        timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n        if (lastChange[0] === '') {\r\n            alert = 'No last change detected!'\r\n        } else if (timeNow[0] > lastChange[0]) {\r\n            difH = timeNow[0] - lastChange[0];\r\n            alert = 'Last change is more than ' + difH + ' h ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n            difSec = timeNow[2] - lastChange[2]\r\n            alert = 'Last change is ' + difSec + ' s ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n            difMin = timeNow[1] - lastChange[1]\r\n            alert = 'Last change is more than ' + difMin + ' min ago!'\r\n        } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n            alert = 'Last change is more than 24 h ago!'\r\n        } else {\r\n            alert = 'No last change detected!'\r\n        }\r\n\r\n        setAlert(alert);\r\n        setAlertType('info');\r\n        popupCtx.toggleShowPopUp(alert, alertType);\r\n    }\r\n\r\n    const handleChangeFooter = (newFooter) => {\r\n        if (!mounted) {\r\n            mounted = true\r\n            setMounted(true)\r\n            var time = new Date();\r\n            setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n            setFooter(newFooter);\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n            setMounted(false);\r\n        }\r\n    };\r\n\r\n    const webcamEmitPic = () => {\r\n        socketCtx.socket.on(\"data\", function (payload) {\r\n            console.log(\"Data payload\", payload)\r\n        });\r\n    }\r\n\r\n    const webcamStartStreaming = () => {\r\n        socketCtx.socket.emit(\"join stream room\", { id: props.id, userId: socketCtx.username });\r\n    }\r\n\r\n    tempWebcam.current = webcamEmitPic;\r\n    tempWebcam2.current = webcamStartStreaming;\r\n\r\n    useEffect(() => {\r\n        tempWebcam.current();\r\n    }, [socketCtx.socket]);\r\n\r\n    useEffect(() => {\r\n        tempWebcam2.current();\r\n    }, []);\r\n\r\n    return (\r\n        <Window\r\n            header={props.title + \" (\" + props.id + \")\"}\r\n            top={props.top}\r\n            left={props.left}\r\n            height=\"340px\"\r\n            width=\"623px\"\r\n            onClose={handleCloseWindow}\r\n            onReset={handleReset}\r\n            onInfo={handleInfo}\r\n            footer={footer}\r\n        >\r\n            <HeaterCtrl\r\n                component={props.id}\r\n                newStatus={handleChangeFooter}\r\n                footer={footer}\r\n            />\r\n\r\n        </Window>\r\n    )\r\n}\r\n\r\nexport default Heater;","import { MdOutlineRotateRight, MdOutlineRotateLeft } from \"react-icons/md\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\"\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport styles from \"../CSS/RotaryCtrl.module.css\";\r\n\r\nconst RotaryCtrl = (props) => {\r\n  const [enteredRotation, setEnteredRotation] = useState(0);\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [rotation, setRotation] = useState(0);\r\n  var [mounted, setMounted] = useState(false);\r\n  var direction;\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const tempRotaryCtrl = useRef();\r\n\r\n  const button1 = props.component + props.control + \"1\"\r\n  const button2 = props.component + props.control + \"2\"\r\n\r\n\r\n  const rotaryCtrlEmit = () => {\r\n    if (!mounted) {\r\n      mounted = true;\r\n      setMounted(true);\r\n\r\n      if (props.control !== 'bottom') {\r\n        socketCtx.socket.emit(\"command\", {\r\n          userId: socketCtx.username,\r\n          componentId: props.component,\r\n          command: \"getStatus\"\r\n        });\r\n\r\n        socketCtx.socket.emit('getFooter', props.component);\r\n\r\n        socketCtx.socket.on('getFooter', payload => {\r\n          if (payload.componentId === props.component) {\r\n            setOnlineStatus(payload.online)\r\n            props.newStatus(String(payload.status))\r\n          }\r\n        });\r\n\r\n        socketCtx.socket.on('footer', payload => {\r\n          if (payload.componentId === props.component) {\r\n            if (props.control !== 'bottom') {\r\n              props.newStatus(String(payload.status))\r\n            }\r\n          }\r\n        });\r\n      }\r\n      socketCtx.socket.on(\"status\", payload => {\r\n        if (payload.componentId === props.component) {\r\n          if (props.control === \"top\") {\r\n            setRotation(payload.status.top.absolute)\r\n          } else if (props.control === \"bottom\") {\r\n            setRotation(payload.status.bottom.absolute)\r\n          } else {\r\n            setRotation(payload.status.linear.absolute)\r\n          }\r\n          if (!payload.status.busy) {\r\n            document.getElementById(button1).disabled = false;\r\n            document.getElementById(button2).disabled = false;\r\n          }\r\n        }\r\n\r\n      });\r\n\r\n      mounted = false;\r\n      setMounted(false);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n      setMounted(false);\r\n    }\r\n  }\r\n  tempRotaryCtrl.current = rotaryCtrlEmit;\r\n\r\n  useEffect(() => {\r\n    tempRotaryCtrl.current();\r\n  }, [socketCtx.socket]);\r\n\r\n  const rotCW_Handler = name => (event) => {\r\n    event.preventDefault();\r\n    direction = 0;\r\n\r\n    if (name === \"left\") {\r\n      direction = -1 * Number(enteredRotation);\r\n    } else if (name === \"right\") {\r\n      direction = Number(enteredRotation);\r\n    }\r\n    if (direction !== 0) {\r\n      document.getElementById(button1).disabled = true;\r\n      document.getElementById(button2).disabled = true;\r\n\r\n      socketCtx.socket.emit(\"command\", {\r\n        userId: socketCtx.username,\r\n        componentId: props.component,\r\n        command: {\r\n          controlId: props.control,\r\n          val: direction\r\n        }\r\n      });\r\n\r\n      socketCtx.socket.emit(\"footer\", {\r\n        status: \"Last change by: \" + socketCtx.username,\r\n        componentId: props.component\r\n      });\r\n    }\r\n    appCtx.addLog(\"User initiated CW rotation on \" + props.component + \" / \" + props.control + \" by \" + enteredRotation + \" steps.\");\r\n  };\r\n\r\n  const changeRotationHandler = (event) => {\r\n    setEnteredRotation(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={styles.rotaryCtrl} style={{ top: props.top + \"px\", left: props.left + \"px\" }}>\r\n      <div className={styles.rotaryCtrl}>\r\n        <span>{Number(rotation)}</span>\r\n        <input\r\n          type=\"number\"\r\n          min=\"0\"\r\n          max=\"100\"\r\n          value={enteredRotation}\r\n          onChange={changeRotationHandler}\r\n        />\r\n      </div>\r\n      <button id={button1} onClick={rotCW_Handler(\"left\")} className={styles.CtrlLeft} disabled={(socketCtx.connected && onlineStatus) ? false : true}  >\r\n        <MdOutlineRotateLeft size={28} />\r\n      </button>\r\n      <button id={button2} onClick={rotCW_Handler(\"right\")} className={styles.CtrlRight} disabled={(socketCtx.connected && onlineStatus) ? false : true}>\r\n        <MdOutlineRotateRight size={28} />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default RotaryCtrl;","export default __webpack_public_path__ + \"static/media/km100_outline.5cffd463.png\";","import { useState } from \"react\";\r\nimport RotaryCtrl from \"../UI/CtrlUnits/RotaryCtrl\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport KM100_Background from \"./media/km100_outline.png\"\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\"\r\nimport { useSocketContext } from \"../../services/SocketContext\"\r\n\r\nconst KM100 = (props) => {\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n  var [mounted, setMounted] = useState(false);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n  \r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      componentId: props.id,\r\n      command: \"reset\"\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    if (!mounted) {\r\n      mounted = true\r\n      setMounted(true)\r\n      var time = new Date();\r\n      setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      setFooter(newFooter);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n      setMounted(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Window\r\n      header={props.title + \" (\" + props.id + \")\"}\r\n      footer={footer}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"240px\"\r\n      width=\"250px\"\r\n      background={KM100_Background}\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.id}\r\n        control=\"top\"\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n        top=\"20\"\r\n        left=\"160\"\r\n      />\r\n      <RotaryCtrl\r\n        rotation={props.rotationBottom}\r\n        component={props.id}\r\n        control=\"bottom\"\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n        top=\"50\"\r\n        left=\"160\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default KM100;\r\n","export default __webpack_public_path__ + \"static/media/linear_outline.7ac97702.png\";","import { useState } from \"react\";\r\nimport RotaryCtrl from \"../UI/CtrlUnits/RotaryCtrl\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport SM1ZP_bg from \"./media/linear_outline.png\";\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\"\r\n\r\nconst SM1ZP = (props) => {\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n  var [mounted, setMounted] = useState(false);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    if (!mounted) {\r\n      mounted = true\r\n      setMounted(true)\r\n      var time = new Date();\r\n      setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      setFooter(newFooter);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n      setMounted(false);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      componentId: props.id,\r\n      command: \"reset\"\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n\r\n  }\r\n\r\n  return (\r\n    <Window\r\n      header={props.title + \" (\" + props.id + \")\"}\r\n      top={props.top}\r\n      left={props.left}\r\n      width=\"250px\"\r\n      height=\"235px\"\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      background={SM1ZP_bg}\r\n      newStatus={handleChangeFooter}\r\n      footer={footer}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.id}\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n        control=\"linear\"\r\n        top=\"35\"\r\n        left=\"160\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default SM1ZP;\r\n","import Right from '@mui/icons-material/ArrowCircleRightOutlined';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport Left from '@mui/icons-material/ArrowCircleLeftOutlined';\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst LeftRightCtrl = (props) => {\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleCtrl = (direction, negativ) => (event) => {\r\n        event.preventDefault();\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            componentId: props.component,\r\n            command: {\r\n                controlId: direction,\r\n                val: negativ ? 15 : -15\r\n            }\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            componentId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User changed the position on \" + props.component)\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <IconButton onClick={handleCtrl(\"virtualPan\", false)} disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true}  >\r\n                <Left />\r\n            </IconButton>\r\n            <IconButton onClick={handleCtrl(\"virtualPan\", true)} disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true}  >\r\n                <Right />\r\n            </IconButton>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LeftRightCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport {Stack, IconButton } from '@mui/material';\r\nimport Up from '@mui/icons-material/ArrowCircleUpOutlined';\r\nimport Down from '@mui/icons-material/ArrowCircleDownOutlined';\r\n\r\nconst UpDownCtrl = (props) => {\r\n  const socketCtx = useSocketContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCtrl = (direction, negativ) => (event) => {\r\n    event.preventDefault();\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      componentId: props.component,\r\n      command: {\r\n        controlId: direction,\r\n        val: negativ ? 15 : -15\r\n      }\r\n    })\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: \"Last change by: \" + socketCtx.username,\r\n      componentId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User changed the position on \" + props.component)\r\n  }\r\n\r\n  return (\r\n    <Stack >\r\n      <IconButton onClick={handleCtrl(\"virtualTilt\", true)} disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true} >\r\n        <Up />\r\n      </IconButton>\r\n      <IconButton onClick={handleCtrl(\"virtualTilt\", false)} disabled={(socketCtx.connected && !appCtx.busyComps.has(props.component) && props.online) ? false : true}  >\r\n        <Down />\r\n      </IconButton>\r\n    </Stack>\r\n  )\r\n}\r\nexport default UpDownCtrl;","import { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport LeftRightCtrl from \"../templates/LeftRightCtrl\";\r\nimport styles from \"../CSS/Settings.module.css\"\r\nimport UpDownCtrl from \"../templates/UpDownCtrl\"\r\nimport Box from '@mui/material/Box';\r\nimport Slider from \"../templates/SliderCtrl\";\r\nimport Switch from \"../templates/Switch\"\r\nimport Select from \"../templates/Select\";\r\n\r\nconst Settings = (props) => {\r\n    const [onlineStatus, setOnlineStatus] = useState(true);\r\n    var [mounted, setMounted] = useState(false);\r\n    const socketCtx = useSocketContext();\r\n    const settingCtrl = useRef();\r\n\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#01bd7d',\r\n            },\r\n        }\r\n    })\r\n\r\n    const settingEmit = () => {\r\n        if (!mounted) {\r\n            mounted = true\r\n            setMounted(true)\r\n\r\n            socketCtx.socket.emit(\"command\", {\r\n                userId: socketCtx.username,\r\n                componentId: props.component,\r\n                command: \"getStatus\"\r\n            })\r\n\r\n            socketCtx.socket.emit('getFooter', props.component)\r\n\r\n            socketCtx.socket.on('getFooter', payload => {\r\n                if (payload.componentId === props.component) {\r\n                    setOnlineStatus(true)\r\n                    props.newStatus(String(payload.status))\r\n                }\r\n            });\r\n\r\n            socketCtx.socket.on(\"status\", payload => {\r\n                if (payload.componentId === props.component) {\r\n                    console.log(\"Status of settings:   \", payload)\r\n                }\r\n            });\r\n\r\n            socketCtx.socket.on('footer', payload => {\r\n                if (payload.componentId === props.component) {\r\n                    props.newStatus(String(payload.status))\r\n                }\r\n            })\r\n            mounted = false;\r\n            setMounted(false);\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n            setMounted(false);\r\n        }\r\n    }\r\n    settingCtrl.current = settingEmit;\r\n\r\n    useEffect(() => {\r\n        settingCtrl.current()\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.UpDown}>\r\n                <UpDownCtrl component={props.component} online={onlineStatus} />\r\n            </div>\r\n            <div className={styles.LeftRight}>\r\n                <LeftRightCtrl component={props.component} online={onlineStatus} />\r\n            </div>\r\n            <Box sx={{ m: 2, width: 250 }} > <h1>Settings</h1> </Box>\r\n            <Select title=\"Resolution\" component={props.component} online={onlineStatus} command=\"frame size\" />\r\n            <Switch component={props.component} command=\"gray\" start='Color' end='Grey' online={true} option=\"val\" />\r\n            <Slider title=\"Contrast\" component={props.component} command=\"contrast\" min={-2} max={2} online={onlineStatus} option=\"val\" />\r\n            <Slider title=\"Brightness\" component={props.component} command=\"brightness\" min={-2} max={2} online={onlineStatus} option=\"val\" />\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default Settings\r\n","import Window from \"../UI/experimentUI/Window\";\r\nimport Settings from \"../UI/CtrlUnits/Settings\";\r\nimport styles from \"./Stream.module.css\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\"\r\n\r\nconst ESPCamStream = (props) => {\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n  var [mounted, setMounted] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const appCtx = useAppContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const tempWebcam = useRef();\r\n  const tempWebcam2 = useRef();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id);\r\n    socketCtx.socket.emit(\"leave stream room\", { id: props.id, userId: socketCtx.username });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      componentId: props.id,\r\n      command: \"reset\"\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    if (!mounted) {\r\n      mounted = true\r\n      setMounted(true)\r\n      var time = new Date();\r\n      setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n      setFooter(newFooter);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n      setMounted(false);\r\n    }\r\n  };\r\n\r\n  const webcamEmitPic = () => {\r\n    socketCtx.socket.on(\"data\", function (payload) {\r\n      var uint8Arr = new Uint8Array(payload.data.data);\r\n      var binary = \"\";\r\n      for (var i = 0; i < uint8Arr.length; i++) {\r\n        binary += String.fromCharCode(uint8Arr[i]);\r\n      }\r\n      var base64String = window.btoa(binary);\r\n\r\n      var img = new Image();\r\n      img.onload = function () {\r\n        var canvas = document.getElementById(\"ScreenCanvas\");\r\n        if (canvas != null) {\r\n          var ctx = canvas.getContext(\"2d\");\r\n          var x1 = 0,\r\n            y1 = 0,\r\n            x2 = 300,\r\n            y2 = 200;\r\n          ctx.drawImage(this, x1, y1, x2, y2);\r\n        }\r\n      };\r\n      img.src = \"data:image/jpg;base64,\" + base64String;\r\n    });\r\n  }\r\n\r\n  const webcamStartStreaming = () => {\r\n    socketCtx.socket.emit(\"join stream room\", { id: props.id, userId: socketCtx.username });\r\n  }\r\n\r\n  tempWebcam.current = webcamEmitPic;\r\n  tempWebcam2.current = webcamStartStreaming;\r\n\r\n  useEffect(() => {\r\n    tempWebcam.current();\r\n  }, [socketCtx.socket]);\r\n\r\n  useEffect(() => {\r\n    tempWebcam2.current();\r\n  }, []);\r\n\r\n  return (\r\n    <Window\r\n      header={props.title + \" (\" + props.id + \")\"}\r\n      top={props.top}\r\n      left={props.left}\r\n      width=\"1000px\"\r\n      height=\"430px\"\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      footer={footer}\r\n      newStatus={handleChangeFooter}\r\n    >\r\n      <div className={styles.Canvas}>\r\n        <canvas id=\"ScreenCanvas\" />\r\n      </div>\r\n      <div className={styles.Settings}>\r\n        <Settings component={props.id} footer={footer} newStatus={handleChangeFooter} />\r\n      </div>\r\n\r\n    </Window>\r\n  );\r\n};\r\nexport default ESPCamStream;\r\n","import { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport Box from '@mui/material/Box';\r\nimport Slider from \"../templates/SliderCtrl\";\r\n\r\n\r\nconst BeamSplitterCtrl = (props) => {\r\n    const marks = [{ value: 0, label: 'None', }, { value: 1, label: 'Glas', }, { value: 2, label: 'Laser', },];\r\n    const [onlineStatus, setOnlineStatus] = useState(true);\r\n    var [mounted, setMounted] = useState(false);\r\n    const socketCtx = useSocketContext();\r\n    const settingCtrl = useRef();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#01bd7d',\r\n            },\r\n        }\r\n    })\r\n\r\n    const settingEmit = () => {\r\n        if (!mounted) {\r\n            mounted = true\r\n            setMounted(true)\r\n\r\n            socketCtx.socket.emit(\"command\", {\r\n                userId: socketCtx.username,\r\n                componentId: props.component,\r\n                command: \"getStatus\"\r\n            })\r\n\r\n            socketCtx.socket.emit('getFooter', props.component)\r\n\r\n            socketCtx.socket.on('getFooter', payload => {\r\n                if (payload.componentId === props.component) {\r\n                    setOnlineStatus(props.online)\r\n                    props.newStatus(String(payload.status))\r\n                }\r\n            });\r\n\r\n            socketCtx.socket.on(\"status\", payload => {\r\n                if (payload.componentId === props.component) {\r\n                    console.log(\"Status of settings:   \", payload)\r\n                }\r\n            });\r\n\r\n            socketCtx.socket.on('footer', payload => {\r\n                if (payload.componentId === props.component) {\r\n                    props.newStatus(String(payload.status))\r\n                }\r\n            })\r\n            mounted = false;\r\n            setMounted(false);\r\n        }\r\n        return () => {\r\n            mounted = false;\r\n            setMounted(false);\r\n        }\r\n    }\r\n    settingCtrl.current = settingEmit;\r\n\r\n    useEffect(() => {\r\n        settingCtrl.current()\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box sx={{ mx: 1 }}>\r\n                <Slider title=\"Glas option\" component={props.component} min={0} max={2} command=\"glas\" text={marks} online={onlineStatus} option=\"pos\" />\r\n            </Box>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default BeamSplitterCtrl\r\n","import { useState } from \"react\";\r\nimport BeamSplitterCtrl from \"../UI/CtrlUnits/BeamSplitterCtrl\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\"\r\nimport { useSocketContext } from \"../../services/SocketContext\"\r\n\r\nconst BeamSplitter = (props) => {\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n  var [mounted, setMounted] = useState(false);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n  \r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      componentId: props.id,\r\n      command: \"reset\"\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    if (!mounted) {\r\n      mounted = true\r\n      setMounted(true)\r\n      var time = new Date();\r\n      setFooter(newFooter);\r\n      setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n      setMounted(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Window\r\n      header={props.title + \" (\" + props.id + \")\"}\r\n      footer={footer}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"140px\"\r\n      width=\"320px\"\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n    >\r\n      <BeamSplitterCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.id}\r\n        control=\"top\"\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n        top=\"20\"\r\n        left=\"160\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default BeamSplitter;\r\n","import ViewCamStream1 from \"../../assembly/ViewCam\";\r\nimport LaserCtrl from \"../../assembly/LaserCtrl\";\r\nimport Heater from \"../../assembly/Heater\";\r\nimport KM100 from \"../../assembly/KM100\";\r\nimport SM1ZP from \"../../assembly/SM1ZP\";\r\nimport ESPCam from \"../../assembly/ESPCamStream\";\r\nimport BeamSplitter from \"../../assembly/BeamSplitter\"\r\n\r\nconst MichelsonInterferometer = (props) => {\r\n  let footer = \"Initializing...\"\r\n  var zero = \"0\"\r\n\r\n  var height = window.innerHeight;\r\n  var width = window.innerWidth;\r\n  var halfWidth = width / 2;\r\n  var topHigh = String(height - (height / 3 * 2.7))\r\n  var topHighMiddle = String(height - (height / 1.4))\r\n  var topMiddle = String(height - (height / 2.15))\r\n  var leftLeft = String(width - (halfWidth * 1.9))\r\n  var leftMiddle = String(width - (halfWidth * 1.8))\r\n  var leftRight = String(width - (halfWidth * 0.47))\r\n  var leftMiddleRight = String(width - (halfWidth * 0.4))\r\n  var leftCam = String(width - (halfWidth * 1.485))\r\n\r\n  var componentList = ['Michelson_KM100', 'Michelson_linear', 'Michelson_laser', 'Michelson_LaserPower', 'Michelson_cam', 'Michelson_heater', 'Cam_1', 'Michelson_beamSplitter']\r\n  return (\r\n    <div>\r\n      {/* KM100 */}\r\n      {props.selected.has(componentList[0]) && (\r\n        <KM100\r\n          title=\"Mirror\"\r\n          id={componentList[0]}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftLeft}\r\n        />\r\n      )}\r\n      {/* Linear stage */}\r\n      {props.selected.has(componentList[1]) && (\r\n        <SM1ZP\r\n          title=\"Mirror Stage\"\r\n          id={componentList[1]}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Laser ctrl */}\r\n      {props.selected.has(componentList[2]) && (\r\n        <KM100\r\n          title=\"Laser\"\r\n          id={componentList[2]}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={leftMiddleRight}\r\n        />\r\n      )}\r\n      {/* Laser power */}\r\n      {props.selected.has(componentList[3]) && (\r\n        <LaserCtrl\r\n          title=\"Power Supply\"\r\n          id={componentList[3]}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Cam1 */}\r\n      {props.selected.has(componentList[4]) && (\r\n        <ESPCam\r\n          title=\"Screen\"\r\n          id={componentList[4]}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n      {/* Heater */}\r\n      {props.selected.has(componentList[5]) && (\r\n        <Heater\r\n          title=\"Heater\"\r\n          id={componentList[5]}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n\r\n      {/* Cam 1 */}\r\n      {props.selected.has(componentList[6]) && (\r\n        <ViewCamStream1\r\n          title=\"Cam_1\"\r\n          id={componentList[6]}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n\r\n\r\n      {/* Glas */}\r\n      {props.selected.has(componentList[7]) && (\r\n        <BeamSplitter\r\n          title=\"Glas\"\r\n          id={componentList[7]}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={halfWidth}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MichelsonInterferometer;","export default __webpack_public_path__ + \"static/media/xrtl_team.519a843e.png\";","import styles from \"./InfoWindowContent.module.css\"\nimport bgTeam from \"../media/images/xrtl_team.png\"\n\nconst InfoWindowContent = (props) => {\n\n  return(\n    <div className={styles.mainWrapper}\n      style={{backgroundImage: \"url(\\\"\"+bgTeam+\"\\\")\"}}\n    > \n      Remote labs are a trendsetting way of teaching, communicating, and experiencing science as well as enabling collaborative work. Unfortunately, the implementation of remote access involves a cost-intensive development or at least requires a certain technical skillset. To establish remote labs across disciplines, especially outside the field of IT and engineering, the technical access threshold must be low enough to support a self-contained implementation by researchers, assistants, and technical staff. Hereby, we are developing the open-source toolbox XR Twin Lab for the research field of Photonics. XR Twin Lab (XRTL) provides a modular way of building a web-based application to control optical experimental setups with the integration of VR and AR endpoints.\n      <p>\n        This Project is currently developed within the DAAD-funded project \"digiPhoton\" and BMBF-funded project \"Lichtwerkstatt\" at the Abbe School of Photonics / Institute of Applied Physics / Friedrich Schiller University in Jena. Feel free to follow our <a href=\"https://github.com/Lichtwerkstatt/XRTL_SPA\">Git Repo</a> or <a href=\"mailto:team@lichtwerkstatt-jena.de\">Contact us.</a>\n      </p>\n      <p>\n        Best! Clara, Falko, Jari and Johannes\n      </p>\n      \n    </div>\n  )\n\n}\n\nexport default InfoWindowContent;","import { useAppContext } from \"../../services/AppContext\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport InfoWindowContent from \"./InfoWindowContent\";\r\n\r\nconst InfoWindow = (props) => {\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleShowInfoWindow();\r\n  };\r\n\r\n  return (\r\n    <Window\r\n      header=\"About XR TwinLab\"\r\n      top=\"250\"\r\n      left=\"200\"\r\n      \r\n      width=\"600px\"\r\n      onClose={handleCloseWindow}\r\n    >\r\n      <InfoWindowContent />\r\n    </Window>\r\n  );\r\n};\r\nexport default InfoWindow;\r\n","import MichelsonInterferometer from \"../../experiment/MichelsonInterferometer/MichelsonInterferometer\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../../services/PopUpContext\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport InfoWindow from \"../../windows/InfoWindow\";\r\nimport { memo } from \"react\"\r\nimport {isEqual} from 'lodash';\r\n\r\nconst ExperimentUILayer = () => {\r\n  var [connection, setConnection] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n  const connCtrl = useRef();\r\n\r\n  const ConnectionSuccess = () => {\r\n    socketCtx.socket.on('Auth', () => {\r\n      popupCtx.toggleShowPopUp('Connection successful!', 'success');\r\n      setConnection(true);\r\n    });\r\n\r\n    if (!connection) {\r\n      popupCtx.toggleShowPopUp('No server connection!', 'error');\r\n      setConnection('');\r\n    }\r\n  }\r\n \r\n  connCtrl.current = ConnectionSuccess;\r\n\r\n  useEffect(() => {\r\n    connCtrl.current();\r\n  }, [socketCtx.socket]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {appCtx.showInfoWindow && <InfoWindow />}\r\n      <MichelsonInterferometer\r\n        toggleSelect={appCtx.toggleSelectedComp}\r\n        selected={appCtx.selectedComps}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default memo(ExperimentUILayer, isEqual);\r\n","import { Html } from \"@react-three/drei\";\r\nimport { memo } from \"react\"\r\nimport {isEqual} from 'lodash';\r\n\r\nconst DescriptiveTag = (props) => {\r\n  const wrapperStyle = {\r\n    color: \"white\",\r\n    width: \"200px\",\r\n    height: \"30px\",\r\n  };\r\n  return <Html position={props.position} style={wrapperStyle} zIndexRange={[0, 10]} >\r\n\r\n    <div\r\n      style={{\r\n        height: \"150px\",\r\n        width: \"0px\",\r\n        \"borderLeft\": \"2px solid white\",\r\n        float: \"left\",\r\n      }}\r\n    ></div>\r\n    \r\n    <div style={{ \"marginLeft\": \"12px\" }}>\r\n      <span>\r\n        <b>{props.title}</b>\r\n      </span>\r\n      <br />\r\n      {props.description}\r\n      <br />\r\n      {props.status}\r\n    </div>\r\n  </Html>\r\n\r\n};\r\n\r\nexport default memo(DescriptiveTag, isEqual);\r\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, memo } from \"react\";\r\nimport { useGLTF, Box, Cylinder } from \"@react-three/drei\";\r\nimport DescriptiveTag from \"../../UI/experimentUI/DescriptiveTag\";\r\nimport {isEqual} from 'lodash';\r\n\r\nfunction Model({ ...props }) {\r\n  const group = useRef();\r\n  const { nodes, materials } = useGLTF(\"/model/MI_110422.glb\");\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group name=\"Scene\">\r\n        <group name=\"Optical elements\">\r\n          {/* BeamSplitter and Lens*/}\r\n          <Box\r\n            position={[-0.55, 0.66, -0.1]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.25, 0.25, 0.25]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          <Cylinder\r\n            position={[0.7, 0.67, -0.13]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, 0, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n        </group>\r\n        <group\r\n          name=\"Mirror1\"\r\n          position={[-0.53, 0.67, 0.94]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"Michelson_KM100\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Reference Mirror\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"SideMirrorMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"Michelson_KM100\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"SideMirrorMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n          <mesh\r\n            name=\"SideMirrorMesh_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"TranslateMirror\"\r\n          position={[-1.71, 0.67, -0.12]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"Michelson_linear\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Transtlate Mirror\" description=\"Linear Stage\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"Michelson_linear\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n          <mesh\r\n            name=\"TranslateMirrorMesh_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"Schirm\"\r\n          position={[-0.37, 0.86, -1.22]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"Michelson_cam\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.5, 0]} title=\"Screen\" description=\"Screen with Interference Pattern\" />}\r\n          <mesh\r\n            name=\"PlaneMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh.geometry}\r\n          >\r\n            {props.selected.has(\"Michelson_cam\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#eeeeee\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"PlaneMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh_1.geometry}\r\n            material={materials.BlackParts}\r\n          />\r\n        </group>\r\n        <group name=\"Base\">\r\n          {props.showTags && <DescriptiveTag position={[-0.5, 2, -0.1]} title=\"Beam Splitter\" description=\"50/50 Beam Splitter\" />}\r\n          {props.showTags && <DescriptiveTag position={[0.6, 2, -0.1]} title=\"Lens\" description=\"Lens for Beam Widening\" />}\r\n          <mesh\r\n            name=\"BaseMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.BaseMesh.geometry}\r\n            material={materials.BlackParts}\r\n          />\r\n          <mesh\r\n            name=\"BaseMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.BaseMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"Laser\"\r\n          position={[1.56, 0.67, 0.14]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"Michelson_laser\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.2, -0.2]} title=\"Laser Alignment\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"LaserMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"Michelson_laser\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"LaserMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        <mesh\r\n          name=\"SD5\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.SD5.geometry}\r\n          material={materials.BlackParts}\r\n          position={[1.61, 0.25, -0.9]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"Michelson_LaserPower\")\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Power Supply\" description=\"5V Laser Power Supply\" />}\r\n          {props.selected.has(\"Michelson_LaserPower\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        {props.showBeam &&\r\n          <mesh\r\n            name=\"LaserBeam\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserBeam.geometry}\r\n            material={materials.Laser}\r\n            position={[-0.3, 0.66, -0.15]}\r\n          />}\r\n      </group>\r\n\r\n{/*       <group\r\n        name=\"Cam_1\"\r\n        position={[1.56, 0.67, 0.14]}\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"Cam_1\");\r\n        }} >\r\n        <Box\r\n          position={[-3.5, 0.1, -2]}\r\n          args={[1, 1, 1]}\r\n          scale={[0.25, 0.25, 0.25]}\r\n        >\r\n          <meshPhysicalMaterial\r\n            thickness={1}\r\n            roughness={0.1}\r\n            transmission={1}\r\n            clearcoat={0.5}\r\n            clearcoatRoughness={0}\r\n            ior={1.1}\r\n            envMapIntensity={25}\r\n            color={\"#ffffff\"}\r\n            attenuationColor={\"#00ffff\"}\r\n            attenuationDistance={5}\r\n          />\r\n        </Box>\r\n      </group>\r\n\r\n      <group\r\n        name=\"Heater\"\r\n        position={[3.56, 0.47, 0.14]}\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"Michelson_heater\");\r\n        }} >\r\n        <Box\r\n          position={[-4.7, 0.1, -0.3]}\r\n          args={[1, 1, 1]}\r\n          scale={[0.25, 0.25, 0.25]}\r\n        >\r\n          <meshPhysicalMaterial\r\n            thickness={1}\r\n            roughness={0.1}\r\n            transmission={1}\r\n            clearcoat={0.5}\r\n            clearcoatRoughness={0}\r\n            ior={1.1}\r\n            envMapIntensity={25}\r\n            color={\"#ffffff\"}\r\n            attenuationColor={\"#00ffff\"}\r\n            attenuationDistance={5}\r\n          />\r\n        </Box>\r\n      </group>\r\n      <group\r\n        name=\"Glas\"\r\n        position={[3.56, 0.47, 0.14]}\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"Michelson_beamSplitter\");\r\n        }} >\r\n        <Box\r\n          position={[-3.3, 0.1, -0.3]}\r\n          args={[1, 1, 1]}\r\n          scale={[0.25, 0.25, 0.25]}\r\n        >\r\n          <meshPhysicalMaterial\r\n            thickness={1}\r\n            roughness={0.1}\r\n            transmission={1}\r\n            clearcoat={0.5}\r\n            clearcoatRoughness={0}\r\n            ior={1.1}\r\n            envMapIntensity={25}\r\n            color={\"#ffffff\"}\r\n            attenuationColor={\"#00ffff\"}\r\n            attenuationDistance={5}\r\n          />\r\n        </Box>\r\n      </group> */}\r\n  </group >\r\n  );\r\n}\r\n\r\nuseGLTF.preload(\"/model/MI_110422.glb\");\r\nexport default memo(Model, isEqual);\r\n","import MI_110422 from \"../../experiment/MichelsonInterferometer/MI_110422\";\r\nimport { OrbitControls, Environment } from \"@react-three/drei\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Suspense } from \"react\";\r\n\r\nconst VirtualLayer = () => {\r\n  const appCtx = useAppContext();\r\n\r\n  if (appCtx.showVirtualLayer) {\r\n    return (\r\n      <Canvas\r\n        style={{\r\n          position: \"absolute\",\r\n          background: \"linear-gradient(Teal, Black)\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        }}\r\n        colorManagement\r\n        softShadows\r\n        camera={{ position: [0, 3, 5], fov: 40 }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          {/* <Stats showPanel={0}  /> */}\r\n          <Environment files=\"../hdri/autoshop.hdr\" />\r\n          <OrbitControls autoRotate={appCtx.autoRotate} />\r\n          <MI_110422\r\n            toggleSelect={appCtx.toggleSelectedComp}\r\n            selected={appCtx.selectedComps}\r\n            showTags={appCtx.showTags}\r\n            showBeam={appCtx.showBeam}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default VirtualLayer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\"\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);","import { useSocketContext } from \"./SocketContext\";\r\nimport { useState, useContext, createContext } from \"react\";\r\nimport { Alert, Snackbar } from '@mui/material';\r\nimport styles from \"./PopUp.module.css\";\r\n\r\nconst PopUpContext = createContext();\r\n\r\nexport function usePopUpContext() {\r\n    return useContext(PopUpContext);\r\n}\r\n\r\nexport function PopUpContextProvider({ children }) {\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [type, setType] = useState('info')\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    socketCtx.socket.on('error', error => {\r\n        setShowPopUp(true);\r\n        setText(error.errmsg);\r\n        setType('error');\r\n    })\r\n\r\n    const toggleShowPopUp = (newText, newType) => {\r\n        setText(newText);\r\n        setType(newType);\r\n        setShowPopUp(!showPopUp);\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setShowPopUp(false);\r\n    };\r\n\r\n    return (\r\n        <PopUpContext.Provider\r\n            value={{\r\n                showPopUp,\r\n                toggleShowPopUp\r\n            }}\r\n        >\r\n            <Snackbar open={showPopUp} autoHideDuration={2000} onClose={handleClose} >\r\n                <div className={styles.popUp}>\r\n                    <Alert variant=\"filled\" severity={type} onClose={() => { setShowPopUp(false) }}>{text}</Alert>\r\n                </div>\r\n            </Snackbar>\r\n            {children}\r\n        </PopUpContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Temp\":\"HeaterCtrl_Temp__8Du_1\",\"Heater\":\"HeaterCtrl_Heater__fmsIn\",\"Switch\":\"HeaterCtrl_Switch__3cXgO\",\"Canvas1\":\"HeaterCtrl_Canvas1__HF34-\",\"Canvas2\":\"HeaterCtrl_Canvas2__ZQFSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__26qIN\",\"chatMain\":\"Chat_chatMain__1zSUi\",\"msgForm\":\"Chat_msgForm__3zrhr\",\"chatHandler\":\"Chat_chatHandler__2wAbt\",\"openChat\":\"Chat_openChat__3kAnz\",\"closeChat\":\"Chat_closeChat__a-LQe\",\"buttonBlink\":\"Chat_buttonBlink__juA-h\"};"],"sourceRoot":""}