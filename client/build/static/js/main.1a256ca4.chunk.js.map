{"version":3,"sources":["components/Chat/Chat.module.css","components/Console/Console.module.css","components/UI/Window.module.css","components/UI/RotaryCtrl.module.css","components/UI/NavBar.module.css","components/Chat/Webcam.module.css","services/AppContext.js","services/SocketContext.js","components/UI/NavBar.js","components/Console/Console.js","components/Chat/Chat.js","components/UI/DescriptiveTag.js","components/experiment/digilab4You/DL4Y_export1.js","components/experiment/MichelsonInterferometer/MI_1312.js","components/UI/VirtualLayer.js","components/UI/Window.js","components/UI/SliderCtrl.js","components/assembly/ID15.js","components/UI/RotaryCtrl.js","components/assembly/media/km100_outline.png","components/assembly/KM100.js","components/assembly/Stream.js","components/experiment/digilab4You/DigiLabs4YouDemo.js","components/UI/ExperimentUILayer.js","components/Chat/Webcam.js","App.js","index.js"],"names":["module","exports","AppContext","React","createContext","useAppContext","useContext","AppContextProvider","children","autoRotate","setAutoRotate","useState","showVirtualLayer","setShowVirtualLayer","showWebcam","setShowWebcam","selectedComps","setSelectedComps","Set","busyComps","setBusyComps","logs","setLogs","showTags","setShowTags","Provider","value","toggleAutoRotate","toggleShowVirtualLayer","toggleSelectedComp","compId","has","prev","filter","x","add","addLog","log","addBusyComp","removeBusyComp","toggleShowTags","toggleShowWebcam","Manager","require","URL","socket","autoConnect","SocketContext","useSocketContext","SocketContextProvider","connected","setConnected","appCtx","useEffect","on","e","payload","status","busy","componentId","toggleConnection","console","close","connect","NavBar","socketCtx","connectionStatusColor","autoRotateColor","showTagsColor","cameraStatusColor","id","className","styles","navbar","navMenu","onClick","size","color","Console","props","showConsole","setShowConsole","animation","setAnimation","consoleContainer","consoleMain","map","index","consoleHandler","closeConsole","openConsole","Chat","message","setMessage","showChat","setShowChat","chat","setChat","chatContainer","chatMain","userName","msgForm","onSubmit","event","preventDefault","emit","type","name","placeholder","onChange","target","required","chatHandler","closeChat","openChat","DescriptiveTag","Html","position","style","width","height","zIndexRange","float","title","description","Model","group","useRef","nodes","materials","useGLTF","ref","dispose","onPointerDown","stopPropagation","toggleSelect","geometry","SideMirrorMesh","material","selected","transparent","opacity","SideMirrorMesh_1","SideMirrorMesh_2","Mirror","PlaneMesh","WhiteParts","PlaneMesh_1","LaserMesh","LaserMesh_1","ID15Mesh","ID15Mesh_1","Base","preload","VirtualLayer","background","colorManagement","softShadows","camera","fov","fallback","Environment","preset","OrbitControls","Window","handle","window","top","left","windowHeader","display","cursor","header","windowHeaderIcon","onClose","windowContent","undefined","footer","windowFooter","SliderCtrl","sliderPos","setSliderPos","component","control","sliderCtrl","min","max","onMouseUp","userId","command","ID15","RotaryCtrl","rotation","setRotation","enteredRotation","setEnteredRotation","rotaryCtrl","controlId","steps","CtrlLeft","disabled","CtrlRight","KM100","setFooter","handleChangeFooter","newFooter","KM100_Background","rotationTop","newStatus","rotationBottom","Stream","data","uint8Arr","Uint8Array","buffer","binary","i","length","String","fromCharCode","base64String","btoa","img","Image","onload","document","getElementById","getContext","drawImage","this","src","DigiLabs4YouDemo","ExperimentUILayer","Peer","roomID","Video","peer","stream","current","srcObject","playsInline","autoPlay","Webcam","peers","setPeers","userVideo","peersRef","videoConstraints","innerHeight","innerWidth","navigator","mediaDevices","getUserMedia","video","audio","then","users","forEach","userID","userToSignal","callerID","initiator","trickle","signal","createPeer","push","peerID","incomingSignal","addPeer","find","p","webcamDiv","videoSt","muted","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.1a256ca4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__3x3id\",\"chatMain\":\"Chat_chatMain__3lU48\",\"msgForm\":\"Chat_msgForm__2chd7\",\"chatHandler\":\"Chat_chatHandler__2biyA\",\"openChat\":\"Chat_openChat__3JExo\",\"closeChat\":\"Chat_closeChat__o5avG\",\"buttonBlink\":\"Chat_buttonBlink__3_8g7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"consoleContainer\":\"Console_consoleContainer__3jsOc\",\"consoleMain\":\"Console_consoleMain__Ul5-P\",\"consoleHandler\":\"Console_consoleHandler__3EZu5\",\"openConsole\":\"Console_openConsole__2hPdY\",\"closeConsole\":\"Console_closeConsole__S0_B3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__2yRZ4\",\"windowHeader\":\"Window_windowHeader__2nws7\",\"windowHeaderIcon\":\"Window_windowHeaderIcon__2zOvE\",\"windowFooter\":\"Window_windowFooter__2MzCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rotaryCtrl\":\"RotaryCtrl_rotaryCtrl__1GrAd\",\"CtrlLeft\":\"RotaryCtrl_CtrlLeft__1muK7\",\"CtrlRight\":\"RotaryCtrl_CtrlRight__tS41h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__3MCb5\",\"navMenu\":\"NavBar_navMenu__240TL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"webcamDiv\":\"Webcam_webcamDiv__2jPVK\"};","import React, { useState, useContext } from \"react\";\n\nconst AppContext = React.createContext()\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}\n\nexport function AppContextProvider({ children }) {\n  const [autoRotate, setAutoRotate] = useState(true);\n  const [showVirtualLayer, setShowVirtualLayer] = useState(true);\n  const [showWebcam, setShowWebcam] = useState(false);\n  const [selectedComps, setSelectedComps] = useState(new Set())\n  const [busyComps, setBusyComps] = useState(new Set())\n  const [logs, setLogs] = useState([])\n  const [showTags, setShowTags] = useState(true)\n\n  const toggleSelectedComp = compId => {\n    if (!selectedComps.has(compId)) {\n      setSelectedComps(prev => new Set(prev.add(compId)))\n    } else {\n      setSelectedComps(prev => new Set([...prev].filter(x => x !== compId)))\n    }\n  };\n\n  const addBusyComp = compId => {\n    if (!busyComps.has(compId)) {\n      setBusyComps(prev => new Set(prev.add(compId)))\n    }\n  };\n\n  const removeBusyComp = compId => {\n    if (busyComps.has(compId)) {\n      setBusyComps(prev => new Set([...prev].filter(x => x !== compId)))\n    }\n  };\n\n  const toggleAutoRotate = () => {\n    setAutoRotate(!autoRotate);\n  };\n\n  const toggleShowVirtualLayer = () => {\n    setShowVirtualLayer(!showVirtualLayer);\n  };\n  const toggleShowTags = () => {\n    setShowTags(!showTags)\n  }\n\n  const addLog = (log) => {\n    setLogs(prev => [log, ...prev])\n  };\n\n  const toggleShowWebcam = () => {\n    setShowWebcam(!showWebcam);\n  };\n\n  return (\n    <AppContext.Provider\n      value={{\n        autoRotate,\n        toggleAutoRotate,\n        showVirtualLayer,\n        toggleShowVirtualLayer,\n        selectedComps,\n        toggleSelectedComp,\n        logs,\n        addLog,\n        busyComps,\n        addBusyComp,\n        removeBusyComp,\n        showTags,\n        toggleShowTags,\n        showWebcam,\n        toggleShowWebcam,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { useAppContext } from \"./AppContext\";\n\nconst { Manager } = require(\"socket.io-client\")\n\n\nconst URL = \"http://192.168.1.42:7000\"   //192.168.4.1:7000   Raspberry Pi ID oder wlan 192.168.1.?\n\nconst manager = new Manager(URL, { autoConnect: false })\nconst socket = manager.socket(\"/\")\n\nconst SocketContext = React.createContext();\n\nexport function useSocketContext() {\n  return useContext(SocketContext);\n}\n\nexport function SocketContextProvider({ children }) {\n  const [connected, setConnected] = useState(false);\n\n  const appCtx = useAppContext()\n  \n  useEffect(() => {\n    socket.on('connect', (e) => {\n      setConnected(true)\n      appCtx.addLog(\"Server : Client connected to \" + URL)\n    })\n    socket.on('disconnect', (e) => {\n      setConnected(false)\n      appCtx.addLog(\"Server : Client disconnect.\")\n    })\n    socket.on('status', payload => {\n      if (payload.status.busy) { appCtx.addBusyComp(payload.componentId) } else {\n        appCtx.removeBusyComp(payload.componentId)\n      }\n    })\n  })\n\n  const toggleConnection = () => {\n    console.log(connected)\n    if (!connected) {\n      console.log(socket.connect());\n      setConnected(true)\n      appCtx.addLog(\"Client connected to \" + URL + \" by choice.\")\n    } else {\n      console.log(socket.close())\n      setConnected(false)\n      appCtx.addLog(\"Client disconnected by choice.\")\n    }\n  }\n\n  return (\n    <SocketContext.Provider value={{ socket, connected, toggleConnection }}>\n      {children}\n    </SocketContext.Provider>\n  );\n}\n","\nimport styles from \"./NavBar.module.css\"\nimport { GiLaserWarning } from \"react-icons/gi\"\nimport { ImConnection } from \"react-icons/im\"\nimport { BsBox } from \"react-icons/bs\"\nimport {FaTags} from \"react-icons/fa\"\nimport { MdOutlineScreenRotation } from \"react-icons/md\"\nimport { useSocketContext } from '../../services/SocketContext'\nimport { useAppContext } from '../../services/AppContext'\nimport { BsCamera } from 'react-icons/bs'\nconst NavBar = () => {\n\n    const appCtx = useAppContext();\n    const socketCtx = useSocketContext();\n\n\n    let connectionStatusColor = \"\"\n    if (socketCtx.connected) {connectionStatusColor=\"white\"}\n    let autoRotateColor = \"\"\n    if (appCtx.autoRotate) {autoRotateColor=\"white\"}\n    let showTagsColor = \"\"\n    if (appCtx.showTags) {showTagsColor = \"white\"}\n    let cameraStatusColor = \"\";\n    if (appCtx.showWebcam) { cameraStatusColor = \"white\" }\n\n    return <div id=\"navbar\" className={styles.navbar} >\n        <h1>XR Remote Lab</h1>\n        <div className={styles.navMenu}>\n            <ul>\n                <li onClick={socketCtx.toggleConnection}><ImConnection size={29}\n                    color={connectionStatusColor} /></li>\n                <li onClick={appCtx.toggleShowVirtualLayer}><BsBox size={26} /></li>\n                <li><GiLaserWarning size={29} /></li>\n\n                <li onClick={appCtx.toggleAutoRotate}><MdOutlineScreenRotation size={26} color={autoRotateColor}/></li>\n                <li onClick={appCtx.toggleShowTags}><FaTags size={25} color={showTagsColor} /></li>\n\n                <li onClick={appCtx.toggleShowWebcam}><BsCamera size={26}\n                    color={cameraStatusColor} /></li>\n\n            </ul>\n        </div>\n    </div>\n}\nexport default NavBar","import { useState} from \"react\"\n// import { socket } from \"../../services/SocketContext\"\nimport { RiTerminalBoxFill } from \"react-icons/ri\"\nimport styles from \"./Console.module.css\"\nimport { useAppContext } from \"../../services/AppContext\"\n\nconst Console = (props) => {\n   const [showConsole, setShowConsole] = useState(false)\n  const [animation, setAnimation] = useState(\"\")\n  const appCtx = useAppContext();\n\n  const showConsoleHandler = () => {\n    setAnimation(showConsole ? styles.closeConsole : styles.openConsole)\n    setShowConsole(!showConsole)\n  }\n\n  return (\n    <div className={styles.consoleContainer + \" \" + animation}>\n      <div className={styles.consoleMain}>\n        {appCtx.logs.map((payload, index) => {\n          return (<span key={index}>:{payload}<br /></span>)\n        })}\n      </div>\n      <div className={styles.consoleHandler}><span>\n        <RiTerminalBoxFill size={35} onClick={showConsoleHandler} />\n      </span></div>\n    </div>\n  )\n}\n\nexport default Console\n","import { useEffect, useState } from \"react\"\nimport styles from \"./Chat.module.css\"\nimport { ImBubble } from \"react-icons/im\"\nimport { MdSend } from \"react-icons/md\"\nimport { useSocketContext } from \"../../services/SocketContext\"\n\nconst Chat = (props) => {\n  const [message, setMessage] = useState(\"\")\n  const [showChat, setShowChat] = useState(false)\n  const [animation, setAnimation] = useState(\"\")\n  const [chat, setChat] = useState([])\n\n  const socketCtx = useSocketContext();\n\n\n  useEffect(() => {\n    socketCtx.socket.on(\"message\", (payload) => {\n      setChat([...chat, payload])\n    })\n   }, [socketCtx, chat])\n\n  const sendMessage = (event) => {\n    event.preventDefault()\n    console.log(message)\n    socketCtx.socket.emit(\"message\", { userName: \"user\", message })\n    setMessage(\"\")\n  }\n\n  const showChatHandler = () => {\n    setAnimation(showChat ? styles.closeChat : styles.openChat)\n    setShowChat(!showChat)\n  }\n\n\n  return (\n    <div\n      className={styles.chatContainer + \" \" + animation}\n    >\n      <div className={styles.chatMain}>\n        {chat.map((payload, index) => {\n          return (\n            <b key={index}>\n              {payload.userName}: <span>{payload.message}</span>\n              <br />\n            </b>\n          )\n        })}\n      </div>\n      <form className={styles.msgForm} onSubmit={sendMessage}>\n        <input\n          type=\"text\"\n          name=\"message\"\n          placeholder=\"Type Message here\"\n          value={message}\n          onChange={(e) => {\n            setMessage(e.target.value)\n          }}\n          required\n        />\n        <button type=\"submit\"><MdSend size={25} /></button>\n      </form>\n      <div className={styles.chatHandler + \" \" + animation}>\n        <span>\n          <ImBubble size={35} onClick={showChatHandler} />\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default Chat\n","import { Html } from \"@react-three/drei\";\n\nconst DescriptiveTag = (props) => {\n  const wrapperStyle = {\n    color: \"white\",\n    width: \"200px\",\n    height: \"30px\",\n  };\n  return <Html position={props.position} style={wrapperStyle} zIndexRange={[0, 10]} >\n\n    <div\n      style={{\n        height: \"150px\",\n        width: \"0px\",\n        \"border-left\": \"2px solid white\",\n        float: \"left\",\n      }}\n    ></div>\n    <div style={{ \"margin-left\": \"12px\" }}>\n      <span>\n        <b>{props.title}</b>\n      </span>\n      <br />\n      {props.description}\n      <br />\n      {props.status}\n    </div>\n  </Html>\n\n};\n\nexport default DescriptiveTag;\n","import React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport DescriptiveTag from \"../../UI/DescriptiveTag\"\n\nexport default function Model({ ...props }) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/model/DL4Y_export1.glb')\n  return (\n    <group ref={group} {...props} dispose={null}>\n\n      {/* Mirror  */}\n      <group position={[-0.89, 0.67, 0.8]}\n        onPointerDown={(e) => {\n          e.stopPropagation();\n          props.toggleSelect(\"KM100_2\");\n        }}\n      >\n        {props.showTags && <DescriptiveTag position={[0, 1, 0]} title=\"Reference Mirror\" description=\"KM100 Double Rotary Control\" />}\n        <mesh geometry={nodes.SideMirrorMesh.geometry} material={nodes.SideMirrorMesh.material}>\n        {props.selected.has(\"KM100_2\") ? (\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\n          ) : (\n            <meshBasicMaterial color=\"#222222\" opacity={1.0} />\n          )}\n          </mesh>\n        <mesh geometry={nodes.SideMirrorMesh_1.geometry} material={nodes.SideMirrorMesh_1.material} />\n        <mesh geometry={nodes.SideMirrorMesh_2.geometry} material={materials.Mirror} />\n      </group>\n\n      {/* Screen */}\n      <group position={[-0.89, 0.86, -1.12]}\n        onPointerDown={(e) => {\n          e.stopPropagation();\n          props.toggleSelect(\"screen\");\n        }}\n      >\n        {props.showTags && <DescriptiveTag position={[0, 1.4, 0]} title=\"Screen\" description=\"\" />}\n        <mesh geometry={nodes.PlaneMesh.geometry} material={materials.WhiteParts}>\n        {props.selected.has(\"screen\") ? (\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\n          ) : (\n            <meshBasicMaterial color=\"#eeeeee\" opacity={1.0} />\n          )}\n          </mesh>\n        <mesh geometry={nodes.PlaneMesh_1.geometry} material={nodes.PlaneMesh_1.material} />\n      </group>\n\n      {/* Laser */}\n      <group position={[1.25, 0.67, 0.88]}\n        onPointerDown={(e) => {\n          e.stopPropagation();\n          props.toggleSelect(\"Laser\");\n        }}      \n      >\n        {props.showTags && <DescriptiveTag position={[0, 1, 0]} title=\"Laser\" description=\"green Laserpointer\" />}\n        <mesh geometry={nodes.LaserMesh.geometry}  material={nodes.LaserMesh.material} >\n        {props.selected.has(\"Laser\") ? (\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\n          ) : (\n            <meshBasicMaterial color=\"#222222\" opacity={1.0} />\n          )}\n          </mesh>\n        <mesh geometry={nodes.LaserMesh_1.geometry} material={nodes.LaserMesh_1.material} />\n      </group>\n\n      {/* Iris */}\n      <group position={[-0.92, 0.49, -0.14]}\n         onPointerDown={(e) => {\n          e.stopPropagation();\n          props.toggleSelect(\"iris\");\n        }}      \n      >\n        {props.showTags && <DescriptiveTag position={[0, 1.4, 0]} title=\"Iris\" description=\"Controllable 15mm Iris Diaphragm\" />}\n        <mesh geometry={nodes.ID15Mesh.geometry} material={nodes.ID15Mesh.material}>\n        {props.selected.has(\"iris\") ? (\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\n          ) : (\n            <meshBasicMaterial color=\"#222222\" opacity={1.0} />\n          )}\n          </mesh>\n        <mesh geometry={nodes.ID15Mesh_1.geometry} material={nodes.ID15Mesh_1.material} />\n      </group>\n\n      {/* Baseplate */}\n      <mesh geometry={nodes.Base.geometry} material={nodes.Base.material} />\n      \n    </group>\n\n        \n  )\n}\n\nuseGLTF.preload('/model/DL4Y_export1.glb')\n","import React, { useRef } from \"react\";\nimport { useGLTF, Html } from \"@react-three/drei\";\nimport { Box } from \"@react-three/drei\";\nimport DescriptiveTag from \"../../UI/DescriptiveTag\"\n\nexport default function Model({ ...props }) {\n  const group = useRef();\n  const { nodes, materials } = useGLTF(\"/model/MI_1312.glb\");\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <Box\n        position={[-0.65, 0.66, 0.15]}\n        args={[1, 1, 1]}\n        scale={[0.25, 0.25, 0.25]}\n      >\n        <meshPhysicalMaterial\n          thickness={1}\n          roughness={0.1}\n          transmission={1}\n          clearcoat={0.5}\n          clearcoatRoughness={0}\n          ior={1.1}\n          envMapIntensity={25}\n          color={\"#ffffff\"}\n          attenuationColor={\"#00ffff\"}\n          attenuationDistance={5}\n        />\n      </Box>\n      <group\n        position={[-0.64, 0.67, 1.06]}\n        rotation={[Math.PI, 0, Math.PI]}\n        onPointerDown={(e) => {\n          e.stopPropagation();\n          props.toggleSelect(\"KM100_1\");\n        }}\n      >\n\n        {props.showTags && <DescriptiveTag position={[0, 1, 0]} title=\"Reference Mirror\" description=\"KM100 Double Rotary Control\" />}\n        <mesh\n          geometry={nodes.SideMirrorMesh.geometry}\n          material={nodes.SideMirrorMesh.material}\n        >\n          {props.selected.has(\"KM100_1\") ? (\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\n          ) : (\n            <meshBasicMaterial color=\"#222222\" opacity={1.0} />\n          )}\n        </mesh>\n        <mesh\n          geometry={nodes.SideMirrorMesh_1.geometry}\n          material={nodes.SideMirrorMesh_1.material}\n        />\n        <mesh\n          geometry={nodes.SideMirrorMesh_2.geometry}\n          material={nodes.SideMirrorMesh_2.material}\n        />\n      </group>\n      <group\n        position={[-1.96, 0.67, 0.13]}\n        rotation={[0, Math.PI / 2, 0]}\n        onPointerDown={(e) => {\n          e.stopPropagation();\n          props.toggleSelect(\"SM1ZP_1\");\n        }}\n      >\n        {props.showTags && <DescriptiveTag position={[0, 1, 0]} title=\"Translate Mirror\" description=\"KM100 Single Rotary Control\" />}\n\n        <mesh\n          geometry={nodes.TranslateMirrorMesh.geometry}\n          material={nodes.TranslateMirrorMesh.material}\n        >\n          {props.selected.has(\"SM1ZP_1\") ? (\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\n          ) : (\n            <meshBasicMaterial color=\"#222222\" opacity={1.0} />\n          )}\n        </mesh>\n        <mesh\n          geometry={nodes.TranslateMirrorMesh_1.geometry}\n          material={nodes.TranslateMirrorMesh_1.material}\n        />\n        <mesh\n          geometry={nodes.TranslateMirrorMesh_2.geometry}\n          material={nodes.TranslateMirrorMesh_2.material}\n        />\n      </group>\n      <group\n        position={[-0.62, 0.86, -1.22]}\n        onPointerDown={(e) => {\n          e.stopPropagation();\n          props.toggleSelect(\"EDU-VS1_1\");\n        }}\n      >\n        {props.showTags && <DescriptiveTag position={[0, 1, 0]} title=\"Screen\" />}\n\n        <mesh\n          geometry={nodes.PlaneMesh.geometry}\n          material={materials.WhiteParts}\n        >\n          {props.selected.has(\"EDU-VS1_1\") ? (\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\n          ) : (\n            <meshBasicMaterial color=\"#eeeeee\" opacity={1.0} />\n          )}\n        </mesh>\n        <mesh\n          geometry={nodes.PlaneMesh_1.geometry}\n          material={nodes.PlaneMesh_1.material}\n        />\n      </group>\n      <group position={[-0.64, 0.67, 0.14]}>\n        <mesh\n          geometry={nodes.BaseMesh.geometry}\n          material={nodes.BaseMesh.material}\n        />\n        <mesh\n          geometry={nodes.BaseMesh_1.geometry}\n          material={nodes.BaseMesh_1.material}\n        />\n      </group>\n      <group\n        position={[1.56, 0.67, 0.14]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n        onPointerDown={(e) => {\n          console.log(\"Clicked on laser\")\n          e.stopPropagation()\n          props.toggleSelect(\"KM100_2\")\n        }}\n      >\n        {props.showTags && <DescriptiveTag position={[0, 0, -1]} title=\"Laser Alignment\" />}\n\n        <mesh\n          geometry={nodes.LaserMesh.geometry}\n          material={nodes.LaserMesh.material}\n        >{props.selected.has(\"KM100_2\") ? (\n          <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\n        ) : (\n          <meshBasicMaterial color=\"#222222\" opacity={1.0} />\n        )}</mesh>\n        <mesh\n          geometry={nodes.LaserMesh_1.geometry}\n          material={nodes.LaserMesh_1.material}\n        />\n      </group>\n      <mesh\n        geometry={nodes.SD5.geometry}\n        material={nodes.SD5.material}\n        position={[1.61, 0.25, -0.9]}\n        onPointerDown={(e) => {\n          console.log(\"Clicked on LaserPower\")\n          e.stopPropagation()\n          props.toggleSelect(\"LaserPower\")\n        }}\n      >\n        {props.selected.has(\"LaserPower\") ? (\n          <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\n        ) : (\n          <meshBasicMaterial color=\"#222222\" opacity={1.0} />\n        )}\n      </mesh>\n    </group>\n  );\n}\n\nuseGLTF.preload(\"/model/MI_1312.glb\");\n","import { Suspense } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls, Environment, Stats } from \"@react-three/drei\";\nimport MI_1312 from \"../experiment/MichelsonInterferometer/MI_1312\";\nimport DigiLab4You from \"../experiment/digilab4You/DL4Y_export1\";\nimport { useAppContext } from \"../../services/AppContext\";\n\nconst VirtualLayer = () => {\n  const appCtx = useAppContext();\n\n  if (appCtx.showVirtualLayer) {\n    return (\n      <Canvas\n        style={{\n          position: \"absolute\",\n          background: \"linear-gradient(Teal, Black)\",\n          width: \"100%\",\n          height: \"100%\",\n        }}\n        colorManagement\n        softShadows\n        camera={{ position: [0, 3, 5], fov: 40 }}\n      >\n        <Suspense fallback={null}>\n          {/* <Stats showPanel={0}  /> */}\n          <Environment preset=\"warehouse\" />\n          <OrbitControls autoRotate={appCtx.autoRotate} />\n          <DigiLab4You\n            toggleSelect={appCtx.toggleSelectedComp}\n            selected={appCtx.selectedComps}\n            showTags={appCtx.showTags}\n          />\n        </Suspense>\n      </Canvas>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default VirtualLayer;\n","import Draggable from \"react-draggable\"\nimport styles from \"./Window.module.css\"\nimport {CgCloseO} from \"react-icons/cg\"\n\nconst Window = (props) => {\n\n   return (\n    <Draggable handle=\".draggableHandler\">\n      <div\n        className={styles.window}\n        style={{ top: props.top + \"px\", left: props.left + \"px\" }}\n      >\n        <div className={styles.windowHeader}>\n          <span\n            className=\"draggableHandler\" //FIXME draggable doesnt seem to work with inline JSX classes. \n            style={{\n              display: 'block',\n              width: \"calc(100% - 50px)\",\n              cursor: \"move\",\n              float: \"left\"\n            }}\n          >\n            {props.header}\n          </span>\n          <div className={styles.windowHeaderIcon} onClick={props.onClose}><CgCloseO size={20}/></div>\n        </div>\n        <div\n          className={styles.windowContent}\n          style={{\n            height: props.height,\n            width: props.width,\n            background: \"url(\" + props.background + \")\",\n          }}\n        >\n          {props.children}\n        </div>\n        {props.footer !== undefined && (\n          <div className={styles.windowFooter}>{props.footer}</div>\n        )}\n      </div>\n    </Draggable>\n  )\n}\n\nexport default Window\n","import { useState, useEffect } from \"react\";\nimport styles from \"./SliderCtrl.module.css\"\nimport { useAppContext } from \"../../services/AppContext\";\nimport { useSocketContext } from \"../../services/SocketContext\";\n\nconst SliderCtrl = (props) => {\n  const [sliderPos, setSliderPos] = useState(props.sliderPos);\n\n  const appCtx = useAppContext();\n  const socketCtx = useSocketContext();\n\n  useEffect(() => {\n    socketCtx.socket.on(\"status\", payload => {\n      if (payload.component === props.component) {\n        setSliderPos(payload.status[props.control]);\n      }\n    })\n  }, [socketCtx.socket])\n\n  const sliderHandler = (event) => {\n    event.preventDefault();\n    setSliderPos(event.target.value);\n  }\n\n  const sliderCtrl = (event) => {\n    event.preventDefault();\n    setSliderPos(event.target.value);\n    console.log(\"Sending Command \"+event.target.value);\n    socketCtx.socket.emit(\"command\", {\n      userId: \"user123\",\n      componentId: props.component,\n      command: {\n        position: sliderPos\n      }\n    })\n    appCtx.addLog(\"User set position on \"+props.component+\" to \"+sliderPos)\n  }\n\n  return(\n    <form className={styles.sliderCtrl} style={{top: props.top+\"px\", left: props.left+\"px\"}}>\n      <div className={styles.sliderCtrl}>\n      <span>{sliderPos}</span>\n        <input type=\"range\" min=\"0\" max=\"100\" value={sliderPos} className={styles.sliderCtrl} onChange={sliderHandler} onMouseUp={sliderCtrl} />\n      </div>\n    </form>\n  )\n\n}\n\nexport default SliderCtrl;","import { useState } from \"react\";\nimport Window from \"../UI/Window\";\n\nimport { useAppContext } from \"../../services/AppContext\";\nimport SliderCtrl from \"../UI/SliderCtrl\";\n\nconst ID15 = (props) => {\n  const appCtx = useAppContext();\n\n  const handleCloseWindow = () => {\n    appCtx.toggleSelectedComp(props.id)\n  }\n\n  return (\n    <Window\n      header={props.title + \" (\"+props.id+\")\"}\n      top={props.top}\n      left={props.left}\n      height=\"240px\"\n      width=\"250px\"\n      onClose={handleCloseWindow}\n    >\n      <SliderCtrl\n        sliderPos={props.sliderPos}\n        component={props.id}\n        top=\"50\"\n        left=\"50\"\n      />\n    </Window>\n  )\n}\n\nexport default ID15;","import { useState, useEffect } from \"react\";\nimport styles from \"./RotaryCtrl.module.css\";\nimport { MdOutlineRotateRight, MdOutlineRotateLeft } from \"react-icons/md\";\nimport { useAppContext } from \"../../services/AppContext\";\nimport { useSocketContext } from \"../../services/SocketContext\"\n\nconst RotaryCtrl = (props) => {\n  const [rotation, setRotation] = useState(props.rotation);\n  const [enteredRotation, setEnteredRotation] = useState(0);\n\n  const appCtx = useAppContext()\n  const socketCtx = useSocketContext()\n\n  useEffect(() => {\n\n    /* STATUS UPDATE HANDLIN */\n    socketCtx.socket.on(\"status\", payload => {\n      if (payload.componentId === props.component) {\n        setRotation(payload.status[props.control]);\n      }\n    }); //TODO: Update Footer of UI Window with Status\n  }, [socketCtx.socket]);\n\n  const changeRotationHandler = (event) => {\n    setEnteredRotation(event.target.value);\n  };\n\n  //TODO: Combine Rotation Handliner into one.\n\n  const rotCW_Handler = (event) => {\n    event.preventDefault();\n    socketCtx.socket.emit(\"command\", {\n      userId: \"user123\",\n      componentId: props.component,\n      controlId: props.control,\n      command: {\n        steps: enteredRotation\n      }\n\n    })\n    appCtx.addLog(\"User initiated CW rotation on \" + props.component + \" / \" + props.control + \" by \" + enteredRotation + \" steps.\")\n  };\n\n  const rotCCW_Handler = (event) => {\n    event.preventDefault();\n    socketCtx.socket.emit(\"command\", {\n      userId: \"user123\",\n      componentId: props.component,\n      controlId: props.control,\n      command: {\n        steps: -1 * enteredRotation\n      }\n\n    })\n    appCtx.addLog(\"User initiated CCW rotation on \" + props.component + \" / \" + props.control + \" by \" + enteredRotation + \" steps.\")\n  };\n\n  return (\n    <form className={styles.rotaryCtrl} style={{ top: props.top + \"px\", left: props.left + \"px\" }}>\n      <div className={styles.rotaryCtrl}>\n        <span>{rotation}</span>\n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"100\"\n          value={enteredRotation}\n          onChange={changeRotationHandler}\n        />\n      </div>\n      <button onClick={rotCCW_Handler} className={styles.CtrlLeft} disabled={appCtx.busyComps.has(props.component)} >\n        <MdOutlineRotateLeft size={28} />\n      </button>\n      <button onClick={rotCW_Handler} className={styles.CtrlRight} disabled={appCtx.busyComps.has(props.component)}>\n        <MdOutlineRotateRight size={28} />\n      </button>\n\n    </form>\n  );\n};\n\nexport default RotaryCtrl;\n","export default __webpack_public_path__ + \"static/media/km100_outline.5cffd463.png\";","import { useState } from \"react\";\nimport RotaryCtrl from \"../UI/RotaryCtrl\";\nimport Window from \"../UI/Window\";\nimport KM100_Background from \"./media/km100_outline.png\"\n\nimport { useAppContext } from \"../../services/AppContext\";\n\nconst KM100 = (props) => {\n  const [footer, setFooter] = useState(props.footer);\n  const appCtx = useAppContext()\n\n  const handleCloseWindow = () => {\n    appCtx.toggleSelectedComp(props.id)\n  }\n\n  const handleChangeFooter = (newFooter) => {\n    setFooter(newFooter);\n  };\n\n  return (\n    <Window\n      header={props.title + \" (\" + props.id + \")\"}\n      footer={footer}\n      top={props.top}\n      left={props.left}\n      height=\"240px\"\n      width=\"250px\"\n      background={KM100_Background}\n      onClose={handleCloseWindow}\n    >\n      <RotaryCtrl\n        rotation={props.rotationTop}\n        component={props.id}\n        control=\"top\"\n        newStatus={handleChangeFooter}\n        top=\"20\"\n        left=\"160\"\n      />\n      <RotaryCtrl\n        rotation={props.rotationBottom}\n        component={props.id}\n        control=\"bottom\"\n        newStatus={handleChangeFooter}\n        top=\"50\"\n        left=\"160\"\n      />\n    </Window>\n  );\n};\n\nexport default KM100;\n","import Window from \"../UI/Window\";\nimport { useAppContext } from \"../../services/AppContext\";\nimport { useSocketContext } from \"../../services/SocketContext\"\nimport { useEffect } from \"react\";\n\nconst Stream = (props) => {\n  const socketCtx = useSocketContext();\n  const appCtx = useAppContext()\n\n  const handleCloseWindow = () => {\n    appCtx.toggleSelectedComp(props.id)\n  }\n\n  useEffect(() => {\n    socketCtx.socket.on('pic', function (data) {\n      var uint8Arr = new Uint8Array(data.buffer);\n      var binary = '';\n      for (var i = 0; i < uint8Arr.length; i++) {\n        binary += String.fromCharCode(uint8Arr[i]);\n      }\n      var base64String = window.btoa(binary);\n\n      var img = new Image();\n      img.onload = function () {\n        var canvas = document.getElementById('ScreenCanvas');\n        var ctx = canvas.getContext('2d');\n        var x = 0, y = 0;\n        ctx.drawImage(this, x, y);\n      }\n      img.src = 'data:image/jpg;base64,' + base64String;\n    });\n  }, [socketCtx.socket])\n\n  return (\n    <Window\n      header={props.title + \" (\" + props.id + \")\"}\n      top={props.top}\n      left={props.left}\n      width=\"800px\"\n      height=\"600px\"\n      onClose={handleCloseWindow}\n    >\n      <canvas id='ScreenCanvas' width=\"800px\" height=\"600px\" />\n    </Window>\n  );\n};\n\nexport default Stream;","import ID15 from \"../../assembly/ID15\";\nimport KM100 from \"../../assembly/KM100\"\nimport Stream from \"../../assembly/Stream\";\n\nconst DigiLabs4YouDemo = (props) => {\n  return (\n    <div>\n      {props.selected.has(\"KM100_2\") &&(\n        <KM100\n          title=\"Mirror\"\n          id=\"KM100_2\"\n          rotationTop=\"0\"\n          rotationBottom=\"0\"\n          footer=\"Initializing...\"\n          top=\"100\"\n          left=\"100\"\n          />\n      )}\n      {props.selected.has(\"iris\") && (\n        <ID15\n          title=\"Iris\"\n          id=\"iris\"\n          sliderPos=\"0\"\n          top=\"150\"\n          left=\"150\"\n        />\n      )}\n      {props.selected.has(\"screen\") && (\n        <Stream\n          title=\"Camera\"\n          id=\"screen\"\n          top=\"100\"\n          left=\"100\"\n        />\n      )}\n\n    </div>\n  )\n}\n\nexport default DigiLabs4YouDemo;","\nimport { MdSettingsApplications } from \"react-icons/md\";\nimport { useAppContext } from \"../../services/AppContext\";\n//import MichelsonInterferometer from \"../experiment/MichelsonInterferometer/MichelsonInterferometer\";\nimport DigiLabs4YouDemo from \"../experiment/digilab4You/DigiLabs4YouDemo\";\n\nconst ExperimentUILayer = () => {\n\n  const appCtx = useAppContext();\n\n  return (\n    <DigiLabs4YouDemo\n      toggleSelect={appCtx.toggleSelectedComp}\n      selected={appCtx.selectedComps}\n    />\n  );\n};\n\nexport default ExperimentUILayer;\n","import { useSocketContext } from '../../services/SocketContext'\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { useAppContext } from \"../../services/AppContext\";\nimport styles  from \"./Webcam.module.css\";\nvar Peer = require('simple-peer');\nvar roomID = '';\n\nconst Video = (props) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        props.peer.on(\"stream\", stream => {\n            ref.current.srcObject = stream;\n        })\n    }, []);\n\n    return (\n        <video  playsInline autoPlay ref={ref} />\n    );\n}\n\nconst Webcam = () => {\n    const socketCtx = useSocketContext();\n    const appCtx = useAppContext();\n    const [peers, setPeers] = useState([]);\n    const userVideo = useRef();\n    const peersRef = useRef([]);\n\n    \n    useEffect(() => {\n        const videoConstraints = {\n            height: window.innerHeight / 2,\n            width: window.innerWidth / 2\n        };\n        if (appCtx.showWebcam) {\n            navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true }).then(stream => {\n                userVideo.current.srcObject = stream;\n                socketCtx.socket.emit('roomID', (data) => { //Transmission of the roomID\n                    roomID = data;\n                });\n\n                socketCtx.socket.emit('client join room', (roomID)); // new client will be added to the userList\n\n                socketCtx.socket.on('all users', users => {\n                    const peers = [];\n                    users.forEach(userID => {\n                        const peer = createPeer(userID, socketCtx.socket.id, stream);       // creates a peer for each client that is already in the room\n                        peersRef.current.push({\n                            peerID: userID,\n                            peer,\n                        })\n                        peers.push(peer);\n                    })\n                    setPeers(peers);\n                })\n\n                socketCtx.socket.on(\"user joined\", payload => {\n                    const peer = addPeer(payload.signal, payload.callerID, stream); //creates a new peer & adds it to the list for a freshly joining client\n                    peersRef.current.push({\n                        peerID: payload.callerID,\n                        peer,\n                    })\n\n                    setPeers(users => [...users, peer]);\n                });\n\n                socketCtx.socket.on(\"receiving returned signal\", payload => {\n                    const item = peersRef.current.find(p => p.peerID === payload.id);\n                    item.peer.signal(payload.signal);\n                });\n            })\n        }\n        function createPeer(userToSignal, callerID, stream) {       //Erstellen von peer für alle bisher Clienten die sich bisher im Raum schon befinden\n            const peer = new Peer({\n                initiator: true,        //wichtig, damit Stream in die gesendet werden kann\n                trickle: false,\n                stream,     //eigener Stream\n            });\n    \n            peer.on(\"signal\", signal => {       \n                socketCtx.socket.emit(\"sending signal\", ({ userToSignal, callerID, signal }));\n            })\n            return peer;\n        }\n    \n        function addPeer(incomingSignal, callerID, stream) {        //creates peers for all following joining clients\n            const peer = new Peer({\n                initiator: false,\n                trickle: false,\n                stream,\n            });\n    \n            peer.on(\"signal\", signal => {\n                socketCtx.socket.emit(\"returning signal\", { signal, callerID });\n            });\n            peer.signal(incomingSignal);\n            return peer;\n        }\n    }, [appCtx.showWebcam])\n\n    if (appCtx.showWebcam) {\n        return (\n            <div className={styles.webcamDiv}>\n                <video className={styles.videoSt} muted ref={userVideo} autoPlay playsInline />\n                {peers.map((peer, index) => {           //wenn man diese Schleife weglässt, dann wird nur der eigene Stream dargestellt\n                    return (\n                        <Video key={index} peer={peer} />\n                    );\n                })}\n            </div>\n        );\n    }\n    else {\n        return <></>;\n    }\n};\n\nexport default Webcam;","import NavBar from \"./components/UI/NavBar\";\nimport Console from \"./components/Console/Console\";\nimport Chat from \"./components/Chat/Chat\";\nimport VirtualLayer from \"./components/UI/VirtualLayer\";\nimport { SocketContextProvider } from \"./services/SocketContext\";\nimport { AppContextProvider } from \"./services/AppContext\";\nimport ExperimentUILayer from \"./components/UI/ExperimentUILayer\";\nimport Cam from \"./components/Chat/Webcam\";\n\n\nconst App = () => {\n\n  return (\n    <AppContextProvider>\n      <SocketContextProvider>\n         <VirtualLayer />\n        <ExperimentUILayer /> \n        <Chat />\n        <Cam />\n        <Console />\n        <NavBar />\n      </SocketContextProvider>\n    </AppContextProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\"\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}