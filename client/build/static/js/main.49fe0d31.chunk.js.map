{"version":3,"sources":["components/UI/CSS/Window.module.css","components/UI/CSS/RotaryCtrl.module.css","components/Login/Login.module.css","components/UI/CSS/NavBar.module.css","components/UI/CSS/Settings.module.css","components/assembly/Stream.module.css","App.js","components/UI/experimentUI/NavBar.js","components/Console/Console.js","components/Chat/Chat.js","components/Login/Login.js","services/SocketContext.js","services/PopUp.module.css","services/AppContext.js","components/windows/InfoWindowContent.module.css","components/UI/templates/Switch.js","components/UI/CtrlUnits/LaserCtrl.js","components/UI/experimentUI/Window.js","components/assembly/Laser.js","components/UI/templates/LeftRightCtrl.js","components/UI/templates/UpDownCtrl.js","components/UI/templates/SliderCtrl.js","components/UI/templates/SelectItem.js","components/UI/templates/Select.js","components/UI/CtrlUnits/Settings.js","components/assembly/ESPCamStream.js","components/assembly/media/km100_outline.png","components/UI/CtrlUnits/RotaryCtrl.js","components/assembly/KM100.js","components/assembly/media/linear_outline.png","components/assembly/SM1ZP.js","components/experiment/MichelsonInterferometer/MichelsonInterferometer.js","components/media/images/xrtl_team.png","components/windows/InfoWindowContent.js","components/windows/InfoWindow.js","components/Chat/ViewCamStream.js","components/windows/CamWindow.js","components/UI/experimentUI/ExperimentUILayer.js","components/UI/experimentUI/DescriptiveTag.js","components/experiment/MichelsonInterferometer/MI_110422.js","components/UI/experimentUI/VirtualLayer.js","index.js","services/PopUpContext.js","components/Chat/CSS/Chat.module.css","components/Console/Console.module.css"],"names":["module","exports","App","process","title","NavBar","appCtx","useAppContext","socketCtx","useSocketContext","connectionStatusColor","connected","autoRotateColor","autoRotate","showTagsColor","showTags","cameraStatusColor","showCam","showBeamColor","showBeam","showInfoWindowColor","showInfoWindow","id","className","styles","navbar","navMenu","onClick","toggleConnection","toggleLogin","size","color","toggleShowBeam","toggleAutoRotate","toggleShowTags","toggleCam","toggleShowInfoWindow","memo","isEqual","Console","props","useState","showConsole","setShowConsole","animation","setAnimation","consoleContainer","consoleMain","logs","map","payload","index","consoleHandler","closeConsole","openConsole","Chat","showChat","setShowChat","message","setMessage","chat","setChat","useEffect","socket","on","removeAllListeners","chatContainer","chatMain","style","userId","msgForm","onSubmit","event","preventDefault","emit","username","fontColor","type","name","placeholder","value","onChange","e","target","required","chatHandler","closeChat","openChat","Login","connection","setConnection","setUsername","filter","createFilterOptions","theme","createTheme","palette","mode","primary","light","main","dark","contrastText","spacing","handleLogin","setNewURL","String","error","showLogin","popupWindow","popupInner","close","fontSize","container","columnSpacing","md","item","xs","autoFocus","variant","label","onKeyPress","key","marginLeft","width","helperText","sx","m","freeSolo","renderInput","params","newValue","inputValue","filterOptions","options","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","endIcon","height","marginTop","manager","Manager","autoConnect","SocketContext","createContext","jwt","require","useContext","SocketContextProvider","children","setConnected","URL","setURL","setFontColor","Auth","connect","addLog","disconnect","lastClosedComponent","controlId","toogleLastComp","newURL","Provider","sub","component","iat","Date","now","exp","token","sign","auth","setNewFont","newFont","helperEmit","AppContext","React","AppContextProvider","setLastClosedComponent","showVirtualLayer","setShowVirtualLayer","Set","selectedComps","setSelectedComps","setShowInfoWindow","setAutoRotate","setShowLogin","setShowBeam","setShowTags","setShowCam","setLogs","toggleSelectedComp","compId","has","prev","x","add","toggleShowVirtualLayer","log","SwiitchCtrl","switchValue","setSwitchValue","icon","switchStatus","Box","FormGroup","Stack","direction","alignItems","Typography","start","Switch","checked","led","status","inputProps","disabled","online","end","LaserCtrl","switchIsOn","setSwitch","onlineStatus","setOnlineStatus","isOn","footer","newStatus","getFooter","getStatus","ThemeProvider","document","getElementById","vertical-align","Window","handle","window","top","left","windowHeader","display","cursor","float","header","onReset","onClose","windowContent","background","undefined","windowFooter","onInfo","windowInfo","Laser","lastChange","setLastChange","alertType","setAlertType","setFooter","alert","setAlert","popupCtx","usePopUpContext","handleChangeFooter","newFooter","time","getHours","getMinutes","getSeconds","getDay","getMonth","reset","difH","difMin","timeNow","difSec","toggleShowPopUp","LED","LeftRightCtrl","handleCtrl","negativ","IconButton","UpDownCtrl","SliderCtrl","sliderValue","sliderPos","setSliderPos","marks","parseInt","min","max","handleSettingChanges","text","gutterBottom","mb","Slider","aria-label","valueLabelDisplay","step","onChangeCommitted","SelectItem","selectValue","setSelectValue","Select","MenuItem","SelectCtrl","FormControl","fullWidth","InputLabel","command","Settings","setSwitchStatus","contrast","setContrast","exposure","setExposure","gray","brightness","console","UpDown","LeftRight","ESPCamStream","data","uint8Arr","Uint8Array","binary","i","length","fromCharCode","base64String","btoa","img","Image","onload","canvas","getContext","drawImage","this","src","Canvas","RotaryCtrl","enteredRotation","setEnteredRotation","rotation","setRotation","absolute","busy","rotCW_Handler","Number","control","move","rotaryCtrl","CtrlLeft","CtrlRight","KM100","KM100_Background","controlIdBottom","controlIdTop","rotationTop","rotationBottom","SM1ZP","SM1ZP_bg","MichelsonInterferometer","zero","innerHeight","innerWidth","halfWidth","topHigh","topHighMiddle","topMiddle","leftLeft","leftMiddle","leftRight","leftMiddleRight","leftCam","selected","InfoWindowContent","mainWrapper","backgroundImage","bgTeam","href","InfoWindow","ViewCam","peerConnection","offer","peer","setRemoteDescription","then","createAnswer","sdp","setLocalDescription","localDescription","ontrack","srcObject","streams","onicecandidate","candidate","addIceCandidate","RTCIceCandidate","catch","setAttribute","autoPlay","playsInline","RTCPeerConnection","iceServers","urls","ExperimentUILayer","CamWindow","toggleSelect","DescriptiveTag","Html","position","zIndexRange","borderLeft","description","Model","group","useRef","useGLTF","nodes","materials","ref","dispose","args","scale","thickness","roughness","transmission","clearcoat","clearcoatRoughness","ior","envMapIntensity","attenuationColor","attenuationDistance","Math","PI","onPointerDown","stopPropagation","castShadow","receiveShadow","geometry","SideMirrorMesh","material","BlackParts","transparent","opacity","SideMirrorMesh_1","ShinyParts","SideMirrorMesh_2","Mirror","TranslateMirrorMesh","TranslateMirrorMesh_1","TranslateMirrorMesh_2","PlaneMesh","PlaneMesh_1","BaseMesh","BaseMesh_1","LaserMesh","LaserMesh_1","SD5","LaserBeam","preload","VirtualLayer","colorManagement","softShadows","camera","fov","fallback","Environment","files","OrbitControls","MI_110422","ReactDOM","render","PopUpContext","PopUpContextProvider","showPopUp","setShowPopUp","setText","setType","errmsg","newText","newType","open","autoHideDuration","reason","popUp","severity"],"mappings":"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","file":"static/js/main.49fe0d31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__eoZ4W\",\"windowHeader\":\"Window_windowHeader__2vHd6\",\"windowFooter\":\"Window_windowFooter__3xtgO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rotaryCtrl\":\"RotaryCtrl_rotaryCtrl__1dFJs\",\"CtrlLeft\":\"RotaryCtrl_CtrlLeft__1Oq_0\",\"CtrlRight\":\"RotaryCtrl_CtrlRight__RbI2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1DZpm\",\"close\":\"Login_close__jc06k\",\"popupWindow\":\"Login_popupWindow__2XsJg\",\"popupInner\":\"Login_popupInner__1U9Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__2NK8m\",\"navMenu\":\"NavBar_navMenu__DRNeT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UpDown\":\"Settings_UpDown__1XZ21\",\"LeftRight\":\"Settings_LeftRight__NUQR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Stream_Canvas__pCA10\",\"Settings\":\"Stream_Settings__2Zsif\"};","import NavBar from \"./components/UI/experimentUI/NavBar\";\r\nimport Console from \"./components/Console/Console\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport Login from \"./components/Login/Login\";\r\nimport VirtualLayer from \"./components/UI/experimentUI/VirtualLayer\";\r\nimport { SocketContextProvider } from \"./services/SocketContext\";\r\nimport { AppContextProvider } from \"./services/AppContext\";\r\nimport ExperimentUILayer from \"./components/UI/experimentUI/ExperimentUILayer\";\r\nimport {PopUpContextProvider} from \"./services/PopUpContext\"\r\n\r\nconst App = () => {\r\n  process.title = 'XRTLApp';\r\n  return (\r\n    <AppContextProvider>\r\n      <SocketContextProvider>\r\n          <VirtualLayer />\r\n        <PopUpContextProvider>\r\n          <ExperimentUILayer />\r\n          <Console />\r\n          <Chat />\r\n          <NavBar />\r\n          <Login />\r\n        </PopUpContextProvider>\r\n      </SocketContextProvider>\r\n    </AppContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;","\r\nimport { MdOutlineScreenRotation, MdInfoOutline } from 'react-icons/md'\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext'\r\nimport { GiLaserWarning } from 'react-icons/gi'\r\nimport { ImConnection } from 'react-icons/im'\r\nimport styles from '../CSS/NavBar.module.css'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport { BsCamera } from 'react-icons/bs'\r\nimport { FaTags } from 'react-icons/fa'\r\n//import { BsBox } from 'react-icons/bs'\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from 'react'\r\n\r\nconst NavBar = () => {\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    let connectionStatusColor = '';\r\n    if (socketCtx.connected) { connectionStatusColor = 'white' }\r\n    let autoRotateColor = '';\r\n    if (appCtx.autoRotate) { autoRotateColor = 'white' }\r\n    let showTagsColor = '';\r\n    if (appCtx.showTags) { showTagsColor = 'white' }\r\n    let cameraStatusColor = '';\r\n    if (appCtx.showCam) { cameraStatusColor = 'white' }\r\n    let showBeamColor = '';\r\n    if (appCtx.showBeam) { showBeamColor = 'white' }\r\n    let showInfoWindowColor = '';\r\n    if (appCtx.showInfoWindow) { showInfoWindowColor = 'white' }\r\n\r\n    return <div id='navbar' className={styles.navbar} >\r\n        <h1>XR TwinLab</h1>\r\n        <div className={styles.navMenu}>\r\n            <ul>\r\n                <Tooltip title='Connnection'>\r\n                    <li onClick={() => { (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin(); }}><ImConnection size={29} color={connectionStatusColor} /></li>\r\n                </Tooltip>\r\n\r\n           {/*      <Tooltip title='2D model'>\r\n                    <li onClick={appCtx.toggleShowVirtualLayer}><BsBox size={26} /></li>\r\n                </Tooltip> */}\r\n\r\n                <Tooltip title='Laser beam'>\r\n                    <li onClick={appCtx.toggleShowBeam}><GiLaserWarning size={29} color={showBeamColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Rotation'>\r\n                    <li onClick={appCtx.toggleAutoRotate}><MdOutlineScreenRotation size={26} color={autoRotateColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Labels'>\r\n                    <li onClick={appCtx.toggleShowTags}><FaTags size={25} color={showTagsColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Webcam'>\r\n                    <li onClick={appCtx.toggleCam}><BsCamera size={26} color={cameraStatusColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Information'>\r\n                    <li onClick={appCtx.toggleShowInfoWindow}><MdInfoOutline size={26} color={showInfoWindowColor} /></li>\r\n                </Tooltip>\r\n\r\n            </ul>\r\n        </div>\r\n    </div>\r\n}\r\nexport default memo(NavBar, isEqual)","import { useAppContext } from '../../services/AppContext'\r\nimport { RiTerminalBoxFill } from 'react-icons/ri'\r\nimport styles from './Console.module.css'\r\nimport { useState, memo } from 'react'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Console = (props) => {\r\n  const [showConsole, setShowConsole] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const appCtx = useAppContext();\r\n\r\n  const showConsoleHandler = () => {\r\n    setAnimation(showConsole ? styles.closeConsole : styles.openConsole)\r\n    setShowConsole(!showConsole)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.consoleContainer + ' ' + animation}>\r\n      <div className={styles.consoleMain}>\r\n        {appCtx.logs.map((payload, index) => {\r\n          return (<span key={index}>{payload}<br /></span>)\r\n        })}\r\n      </div>\r\n      <div className={styles.consoleHandler}>\r\n        <span>\r\n          <RiTerminalBoxFill size={35} onClick={showConsoleHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Console, isEqual);\r\n","import { useSocketContext } from '../../services/SocketContext';\r\nimport { useEffect, useState, memo } from 'react'\r\nimport styles from './CSS/Chat.module.css'\r\nimport { ImBubble } from 'react-icons/im'\r\nimport { MdSend } from 'react-icons/md'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Chat = () => {\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [chat, setChat] = useState([]);\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const message = (payload) => {\r\n      setChat([...chat, payload]);\r\n    }\r\n\r\n    socketCtx.socket.on('message', message);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('message', message);\r\n    }\r\n  }, [socketCtx, chat])\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    socketCtx.socket.emit('message', { userId: socketCtx.username, message: message, color: socketCtx.fontColor });\r\n    setMessage('');\r\n  }\r\n\r\n  const showChatHandler = () => {\r\n    setAnimation(showChat ? styles.closeChat : styles.openChat);\r\n    setShowChat(!showChat);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.chatContainer + ' ' + animation}\r\n    >\r\n      <div className={styles.chatMain}>\r\n        {chat.map((payload, index) => {\r\n          return (\r\n            <b key={index} >\r\n              <span style={{ color: payload.color }}> {payload.userId}:</span> <span >{payload.message}</span>\r\n              <br />\r\n            </b>\r\n          )\r\n        })}\r\n      </div>\r\n      <form className={styles.msgForm} onSubmit={sendMessage}>\r\n        <input\r\n          type='text'\r\n          name='message'\r\n          placeholder='Type message here...'\r\n          value={message}\r\n          onChange={(e) => {\r\n            setMessage(e.target.value)\r\n          }}\r\n          required\r\n        />\r\n        <button type='submit'><MdSend size={25} /></button>\r\n      </form>\r\n      <div className={styles.chatHandler + ' ' + animation}>\r\n        <span>\r\n          <ImBubble size={35} onClick={showChatHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Chat, isEqual);","import { Grid, Autocomplete, Box, TextField, createTheme, ThemeProvider, Button, IconButton } from '@mui/material';\r\nimport HighlightOffOutlinedIcon from '@mui/icons-material/HighlightOffOutlined';\r\nimport { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport { useSocketContext } from '../../services/SocketContext'\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport React, { useState, memo } from 'react';\r\nimport styles from './Login.module.css'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Login = (props) => {\r\n    const connectionOption = [{ title: 'http://localhost:3000' }, { title: 'http://10.232.37.41:3000' }];\r\n    const [connection, setConnection] = useState(null);\r\n    const [username, setUsername] = useState('');\r\n    const filter = createFilterOptions();\r\n\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#fff',\r\n            },\r\n        },\r\n        spacing: 2,\r\n    })\r\n\r\n    const handleLogin = () => {\r\n        if (username !== '') {\r\n            try {\r\n                socketCtx.setNewURL(String(connection.title), String(username));\r\n                socketCtx.toggleConnection(String(username));\r\n                appCtx.toggleLogin();\r\n            }\r\n            catch (error) { }\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    const autoCompleteHandle = (event, newValue) => {\r\n        if (typeof newValue === 'string') {\r\n            setConnection({ title: newValue, });\r\n        } else if (newValue && newValue.inputValue) {\r\n            setConnection({ title: newValue.inputValue, });\r\n        } else {\r\n            setConnection(newValue);\r\n        }\r\n    }\r\n\r\n    const filterOption = (options, params) => {\r\n        const filtered = filter(options, params);\r\n        const { inputValue } = params;\r\n        const isExisting = options.some((option) => inputValue === option.title);\r\n        if (inputValue !== '' && !isExisting) {\r\n            filtered.push({ inputValue, title: `Add '${inputValue}'`, });\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    const getLabel = (option) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n        }\r\n        if (option.inputValue) {\r\n            return option.inputValue;\r\n        }\r\n        return option.title;\r\n    }\r\n\r\n    if (appCtx.showLogin) {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <div className={styles.popupWindow}>\r\n                </div>\r\n                <div className={styles.popupInner} >\r\n                    <h3 title='settings'>Settings</h3>\r\n                    <div className={styles.close}>\r\n                        <IconButton onClick={(e) => {\r\n                            appCtx.toggleLogin();\r\n                        }} >\r\n                            <HighlightOffOutlinedIcon fontSize='large' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Grid container columnSpacing={{ md: 95 }}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                autoFocus\r\n                                variant='outlined'\r\n                                label='Username '\r\n                                value={username}\r\n                                onChange={handleChange}\r\n                                onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                                style={{ marginLeft: 17, width: 250 }}\r\n                                error={username === ''}\r\n                                helperText={username === '' ? 'Please enter your username!' : ' '}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{ m: 8, width: 250 }} >\r\n                        <Autocomplete\r\n                            value={connection}\r\n                            freeSolo\r\n                            renderInput={(params) => (\r\n                                <TextField {...params} label='Choose server address ' />)}\r\n                            onChange={autoCompleteHandle}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            filterOptions={filterOption}\r\n                            selectOnFocus\r\n                            clearOnBlur\r\n                            handleHomeEndKeys\r\n                            options={connectionOption}\r\n                            getOptionLabel={getLabel}\r\n                            renderOption={(props, option) => <li {...props}>{option.title}</li>}\r\n                        />\r\n                    </Box>\r\n\r\n                    <Button size='small' type='submit' variant='contained'\r\n                        onClick={handleLogin}\r\n                        endIcon={<SendIcon />}\r\n                        style={{ width: 90, height: 30, marginTop: -3, marginLeft: 270 }}\r\n                    >Login</Button>\r\n\r\n                </div>\r\n            </ThemeProvider>\r\n        );\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default memo(Login, isEqual);","import { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { useAppContext } from \"./AppContext\";\r\nimport { Manager } from \"socket.io-client\";\r\n\r\nvar manager = new Manager(\"\", { autoConnect: false });\r\nvar socket = manager.socket(\"/\");\r\nvar SocketContext = createContext();\r\nvar jwt = require('jsonwebtoken');\r\n\r\nexport function useSocketContext() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketContextProvider({ children }) {\r\n  const [connected, setConnected] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [URL, setURL] = useState('');\r\n  const [fontColor, setFontColor] = useState('white');\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const Auth = (color) => {\r\n      setFontColor(color);\r\n      socket.emit('newUserInfo', username)\r\n    }\r\n\r\n    const connect = (e) => {\r\n      setConnected(true)\r\n      appCtx.addLog(\"Server : Client connected to \" + URL)\r\n    }\r\n\r\n    const disconnect = (e) => {\r\n      setConnected(false)\r\n      appCtx.addLog(\"Server : Client disconnect.\")\r\n    }\r\n\r\n    socket.on('connect', connect);\r\n\r\n    socket.on('disconnect', disconnect)\r\n\r\n    socket.on('Auth', Auth);\r\n\r\n    if (appCtx.lastClosedComponent === 'screen') {\r\n      socket.emit(\"leave stream room\", { controlId: 'screen', userId: username });\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    if (appCtx.lastClosedComponent === 'Cam_1') {\r\n      socket.emit('watcher disconnect');\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    return (() => {\r\n      socket.removeAllListeners('Auth', Auth)\r\n      socket.removeAllListeners('connect', connect)\r\n      socket.removeAllListeners('disconnect', disconnect)\r\n    })\r\n  })\r\n\r\n  const helperEmit = (event, payload) => {\r\n    socket.emit(event, payload)\r\n  }\r\n\r\n  const setNewURL = (newURL, username) => {\r\n    socket.disconnect();\r\n    manager = new Manager(newURL, { autoConnect: false });\r\n    socket = manager.socket(\"/\");\r\n    SocketContext = createContext();\r\n    setURL(newURL);\r\n    setUsername(username);\r\n  }\r\n\r\n  const setNewFont = (newFont) => {\r\n    setFontColor(newFont);\r\n  }\r\n\r\n  const toggleConnection = (username) => {\r\n    if (!connected) {\r\n      var payload = {\r\n        sub: username,\r\n        component: 'client',\r\n        iat: Date.now(),\r\n        exp: Date.now() + 1800000,\r\n      }\r\n\r\n      var token = jwt.sign(payload, \"keysecret\");\r\n      socket.auth = { token: token }\r\n      //secure: true, rejectUnauthorized: false}\r\n      socket.connect();\r\n\r\n      setConnected(true)\r\n      appCtx.addLog(\"Client connected by choice.\")\r\n    } else {\r\n      setConnected(false)\r\n      setUsername(\"\");\r\n      setNewURL(\"\");\r\n      socket.close();\r\n      appCtx.addLog(\"Client disconnected by choice.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket, connected, toggleConnection, setNewURL, setNewFont, username, fontColor, helperEmit }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popUp\":\"PopUp_popUp__IolRq\"};","import React, { useState, useContext } from \"react\";\r\n\r\nconst AppContext = React.createContext()\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n\r\nexport function AppContextProvider({ children }) {\r\n  const [lastClosedComponent, setLastClosedComponent] = useState('');\r\n  const [showVirtualLayer, setShowVirtualLayer] = useState(true);\r\n  const [selectedComps, setSelectedComps] = useState(new Set());\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [autoRotate, setAutoRotate] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showBeam, setShowBeam] = useState(false);\r\n  const [showTags, setShowTags] = useState(true);\r\n  const [showCam, setShowCam] = useState(false);\r\n  const [logs, setLogs] = useState([]);\r\n\r\n\r\n  const toggleSelectedComp = compId => {\r\n    if (!selectedComps.has(compId)) {\r\n      setSelectedComps(prev => new Set(prev.add(compId)));\r\n    } else {\r\n      setSelectedComps(prev => new Set([...prev].filter(x => x !== compId)));\r\n      setLastClosedComponent(compId);\r\n    }\r\n  };\r\n\r\n  const toogleLastComp = () => {\r\n    setLastClosedComponent('');\r\n  }\r\n\r\n  const toggleAutoRotate = () => {\r\n    setAutoRotate(!autoRotate);\r\n  };\r\n\r\n  const toggleShowVirtualLayer = () => {\r\n    setShowVirtualLayer(!showVirtualLayer);\r\n  };\r\n\r\n  const toggleShowTags = () => {\r\n    setShowTags(!showTags)\r\n  }\r\n\r\n  const addLog = (log) => {\r\n    setLogs(prev => [log, ...prev])\r\n  };\r\n\r\n  const toggleShowBeam = () => {\r\n    setShowBeam(!showBeam);\r\n  }\r\n\r\n  const toggleShowInfoWindow = () => {\r\n    setShowInfoWindow(!showInfoWindow);\r\n  }\r\n\r\n  const toggleLogin = () => {\r\n    setShowLogin(!showLogin);\r\n  }\r\n\r\n  const toggleCam = () => {\r\n    setShowCam(!showCam);\r\n    toggleSelectedComp('Cam_1')\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        autoRotate,\r\n        toggleAutoRotate,\r\n        showVirtualLayer,\r\n        toggleShowVirtualLayer,\r\n        selectedComps,\r\n        toggleSelectedComp,\r\n        logs,\r\n        addLog,\r\n        showTags,\r\n        toggleShowTags,\r\n        showBeam,\r\n        toggleShowBeam,\r\n        showLogin,\r\n        setShowLogin,\r\n        showInfoWindow,\r\n        toggleShowInfoWindow,\r\n        toggleLogin,\r\n        toggleCam,\r\n        showCam,\r\n        lastClosedComponent,\r\n        toogleLastComp\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"InfoWindowContent_mainWrapper__345Fv\"};","import { Switch, Box, Typography, FormGroup, Stack } from '@mui/material';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SwiitchCtrl = (props) => {\r\n    const [switchValue, setSwitchValue] = useState(false);\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    try {\r\n        props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\r\n    } catch (error) { }\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSwitchValue(newValue);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue,\r\n\r\n        })\r\n\r\n        socketCtx.socket.emit('command', {\r\n            controlId: props.led,\r\n            color: socketCtx.fontColor,\r\n        });\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set switch on \" + props.component + \" to \" + switchValue)\r\n\r\n        try {\r\n            props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\r\n        } catch (error) { }\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: 250, m: 2 }}>\r\n            <FormGroup>\r\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                    <Typography>{props.start}</Typography>\r\n                    <Switch checked={props.switchStatus}\r\n                        onChange={handleSettingChanges}\r\n                        inputProps={{ 'aria-label': 'controlled' }}\r\n                        disabled={(socketCtx.connected && props.online) ? false : true} />\r\n                    <Typography>{props.end}</Typography>\r\n                </Stack>\r\n            </FormGroup>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SwiitchCtrl;\r\n","import { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { GiLaserWarning } from \"react-icons/gi\"\r\nimport { Box } from '@mui/material';\r\nimport Switch from '../templates/Switch';\r\n\r\nconst LaserCtrl = (props) => {\r\n  const [switchIsOn, setSwitch] = useState(false);\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: 'dark',\r\n      primary: {\r\n        light: '#01bd7d',\r\n        main: '#01bd7d',\r\n        dark: '#01bd7d',\r\n        contrastText: '#fff',\r\n      },\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setSwitch(payload.status.isOn)\r\n      }\r\n    }\r\n    const footer = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    const getFooter = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(true)\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    })\r\n\r\n    socketCtx.socket.emit('getFooter', props.component)\r\n\r\n    socketCtx.socket.on(\"status\", status);\r\n\r\n    socketCtx.socket.on('footer', footer)\r\n\r\n    socketCtx.socket.on('getFooter', getFooter);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n      socketCtx.socket.removeAllListeners('footer', footer)\r\n      socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n\r\n  return (\r\n    <div className=\"switchOnOff\">\r\n      <ThemeProvider theme={theme} >\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n          <Switch component={props.component} led={props.led} icon={document.getElementById(\"icon\")} online={onlineStatus} switchStatus={switchIsOn} start='Off' end='On' option=\"switch\" />\r\n          <GiLaserWarning id=\"icon\" size={100} vertical-align=\"middle\" color=\"grey\" />\r\n        </Box>\r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}\r\nexport default LaserCtrl\r\n","import { IoReloadOutline, IoInformationCircleOutline } from 'react-icons/io5'\r\nimport { CgCloseO } from 'react-icons/cg'\r\nimport styles from '../CSS/Window.module.css'\r\nimport Draggable from 'react-draggable'\r\nimport { memo } from 'react'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Window = (props) => {\r\n  return (\r\n    <Draggable handle='.draggableHandler'>\r\n      <div\r\n        className={styles.window}\r\n        style={{ top: props.top + 'px', left: props.left + 'px' }}\r\n      >\r\n        <div className={styles.windowHeader}>\r\n          <span\r\n            className='draggableHandler' //FIXME draggable doesnt seem to work with inline JSX classes. \r\n            style={{\r\n              display: 'block',\r\n              width: 'calc(100% - 50px)',\r\n              cursor: 'move',\r\n              float: 'left'\r\n            }}\r\n          >\r\n            {props.header}\r\n          </span>\r\n          <span onClick={props.onReset} > <IoReloadOutline size={20} />        </span>\r\n          <span onClick={props.onClose}><CgCloseO size={20} /></span>\r\n        </div>\r\n        <div\r\n          className={styles.windowContent}\r\n          style={{\r\n            height: props.height,\r\n            width: props.width,\r\n            background: 'url(' + props.background + ')',\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n        {props.footer !== undefined && (\r\n          <div className={styles.windowFooter}>\r\n            <span onClick={props.onInfo}> <IoInformationCircleOutline size={25} /></span>\r\n            <label>{props.footer}</label>\r\n          </div>\r\n        )}\r\n        <div className={styles.windowInfo}>\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\nexport default memo(Window, isEqual);\r\n","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport LaserCtrl from '../UI/CtrlUnits/LaserCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useState } from 'react';\r\n\r\nconst Laser = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState(props.footer);\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='200px'\r\n      width='300px'\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      newStatus={handleChangeFooter}\r\n      footer={footer}\r\n    >\r\n      <LaserCtrl\r\n        component={props.controlId}\r\n        top='0'\r\n        left='0'\r\n        newStatus={handleChangeFooter}\r\n        led={props.LED}\r\n        footer={footer}\r\n      />\r\n    </Window>\r\n  )\r\n}\r\nexport default Laser;","import Right from '@mui/icons-material/ArrowCircleRightOutlined';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport Left from '@mui/icons-material/ArrowCircleLeftOutlined';\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst LeftRightCtrl = (props) => {\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleCtrl = (direction, negativ) => (event) => {\r\n        event.preventDefault();\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: negativ ? 15 : -15\r\n        })\r\n\r\n        socketCtx.socket.emit('command', {\r\n            controlId: props.led,\r\n            color: socketCtx.fontColor,\r\n        });\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User changed the position on \" + props.component)\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <IconButton onClick={handleCtrl(\"virtualPan\", false)} disabled={(socketCtx.connected && props.online) ? false : true}  >\r\n                <Left />\r\n            </IconButton>\r\n            <IconButton onClick={handleCtrl(\"virtualPan\", true)} disabled={(socketCtx.connected && props.online) ? false : true}  >\r\n                <Right />\r\n            </IconButton>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LeftRightCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { Stack, IconButton } from '@mui/material';\r\nimport Up from '@mui/icons-material/ArrowCircleUpOutlined';\r\nimport Down from '@mui/icons-material/ArrowCircleDownOutlined';\r\n\r\nconst UpDownCtrl = (props) => {\r\n  const socketCtx = useSocketContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCtrl = (direction, negativ) => (event) => {\r\n    event.preventDefault();\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      [props.option]: negativ ? 15 : -15\r\n    })\r\n\r\n    socketCtx.socket.emit('command', {\r\n      controlId: props.led,\r\n      color: socketCtx.fontColor,\r\n    });\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: \"Last change by: \" + socketCtx.username,\r\n      controlId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User changed the position on \" + props.component)\r\n  }\r\n\r\n  return (\r\n    <Stack >\r\n      <IconButton onClick={handleCtrl(\"virtualTilt\", true)} disabled={(socketCtx.connected && props.online) ? false : true} >\r\n        <Up />\r\n      </IconButton>\r\n      <IconButton onClick={handleCtrl(\"virtualTilt\", false)} disabled={(socketCtx.connected && props.online) ? false : true}  >\r\n        <Down />\r\n      </IconButton>\r\n    </Stack>\r\n  )\r\n}\r\nexport default UpDownCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { Box, Stack, Typography, Slider } from \"@mui/material\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SliderCtrl = (props) => {\r\n  const [sliderPos, setSliderPos] = useState(props.sliderValue);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  const marks = [\r\n    { value: parseInt(props.min), label: props.min, },\r\n    { value: 0, label: '0', },\r\n    { value: parseInt(props.max), label: props.max, },\r\n  ]\r\n\r\n  const handleSettingChanges = (event, newValue) => {\r\n    setSliderPos(newValue)\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      [props.option]: newValue\r\n    })\r\n\r\n    socketCtx.socket.emit('command', {\r\n      controlId: props.led,\r\n      color: socketCtx.fontColor,\r\n    });\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: \"Last change by: \" + socketCtx.username,\r\n      controlId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User set position on \" + props.component + \" to \" + sliderPos)\r\n  }\r\n\r\n  if (props.text) {\r\n    return (\r\n      <Box sx={{ width: 250, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={props.text}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  } else {\r\n    return (\r\n      <Box sx={{ width: 250, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={marks}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\nexport default SliderCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { MenuItem, Select } from '@mui/material';\r\nimport { useState } from \"react\";\r\n\r\nconst SelectItem = (props) => {\r\n    const [selectValue, setSelectValue] = useState('');\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSelectValue(newValue.props.value);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue.props.value\r\n        })\r\n\r\n        socketCtx.socket.emit('command', {\r\n            controlId: props.led,\r\n            color: socketCtx.fontColor,\r\n        });\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set selected \" + props.component + \" with \" + selectValue)\r\n    }\r\n    if (props.title === 'Resolution') {\r\n        return (\r\n            <Select\r\n                value={selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={13}>UXGA (1600x1200)</MenuItem>\r\n                <MenuItem value={12}>SXGA (1280x1024)</MenuItem>\r\n                <MenuItem value={10}>XGA (1024x768)</MenuItem>\r\n                <MenuItem value={9}>SVGA (800x600)</MenuItem>\r\n                <MenuItem value={8}>VGA (640x480)</MenuItem>\r\n                <MenuItem value={6}>CIF (400x296)</MenuItem>\r\n                <MenuItem value={5}>QVGA (320x240)</MenuItem>\r\n            </Select>\r\n        )\r\n    }\r\n    else if (props.title === 'Average time (ms)') {\r\n        return (\r\n            <Select\r\n                value={selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={100}>100</MenuItem>\r\n                <MenuItem value={500}>500</MenuItem>\r\n                <MenuItem value={1000}>1000</MenuItem>\r\n                <MenuItem value={2000}>2000</MenuItem>\r\n\r\n            </Select>\r\n        )\r\n    } else if (props.title === 'Update time (s)') {\r\n        return (\r\n            <Select\r\n                value={selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={1000}>1</MenuItem>\r\n                <MenuItem value={5000}>5</MenuItem>\r\n                <MenuItem value={10000}>10</MenuItem>\r\n            </Select>\r\n        )\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default SelectItem;","\r\nimport { FormControl, InputLabel, Box } from '@mui/material';\r\nimport SelectItem from './SelectItem'\r\n\r\nconst SelectCtrl = (props) => {\r\n    return (\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n            <FormControl fullWidth>\r\n                <InputLabel >{props.title}</InputLabel>\r\n                <SelectItem title={props.title} component={props.component} online={props.online} command={props.command} option={props.option} />\r\n            </FormControl>\r\n        </Box>\r\n    )\r\n}\r\nexport default SelectCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport LeftRightCtrl from \"../templates/LeftRightCtrl\";\r\nimport styles from \"../CSS/Settings.module.css\"\r\nimport UpDownCtrl from \"../templates/UpDownCtrl\"\r\nimport Slider from \"../templates/SliderCtrl\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Switch from \"../templates/Switch\"\r\nimport Select from \"../templates/Select\";\r\nimport Box from '@mui/material/Box';\r\n\r\nconst Settings = (props) => {\r\n    const [switchIsOn, setSwitchStatus] = useState(false);\r\n    const [contrast, setContrast] = useState(0);\r\n    const [exposure, setExposure] = useState(0);\r\n   // const [brightness, setBrightness] = useState(0);\r\n    const [onlineStatus, setOnlineStatus] = useState(true);\r\n    const socketCtx = useSocketContext();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#01bd7d',\r\n            },\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setSwitchStatus(payload.status.gray)\r\n                setExposure(payload.status.brightness)\r\n                setContrast(payload.status.contrast)\r\n                console.log(\"Status of settings:   \", payload)\r\n            }\r\n        }\r\n\r\n        const footer = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        const getFooter = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(true)\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on(\"status\", status);\r\n\r\n        socketCtx.socket.on('footer', footer)\r\n\r\n        socketCtx.socket.on('getFooter', getFooter);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('footer', footer)\r\n            socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.UpDown}>\r\n                <UpDownCtrl component={props.component} online={onlineStatus} option='virtualTilt' />\r\n            </div>\r\n            <div className={styles.LeftRight}>\r\n                <LeftRightCtrl component={props.component} online={onlineStatus} option='virtualPan' />\r\n            </div>\r\n            <Box sx={{ m: 2, width: 250 }} > <h1>Settings</h1> </Box>\r\n            <Select title=\"Resolution\" component={props.component} online={onlineStatus} option=\"frameSize\" />\r\n            <Switch component={props.component} switchStatus={switchIsOn} online={onlineStatus} start='Color' end='Gray' option=\"gray\" />\r\n            <Slider title=\"Contrast\" component={props.component} online={onlineStatus} sliderValue={contrast} min={-2} max={2} option=\"contrast\" />\r\n            <Slider title=\"Exposure\" component={props.component} online={onlineStatus} sliderValue={exposure} min={0} max={500} option=\"exposure\" />\r\n            {/* <Slider title=\"Brightness\" component={props.component} online={onlineStatus} sliderValue={brightness} min={-2} max={2} option=\"brightness\" /> */}\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default Settings\r\n","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport Settings from '../UI/CtrlUnits/Settings';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useEffect, useState } from 'react';\r\nimport styles from './Stream.module.css';\r\n\r\nconst ESPCamStream = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState(props.footer);\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.controlId);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = (payload) => {\r\n      var uint8Arr = new Uint8Array(payload.data);\r\n      var binary = '';\r\n      for (var i = 0; i < uint8Arr.length; i++) {\r\n        binary += String.fromCharCode(uint8Arr[i]);\r\n      }\r\n      var base64String = window.btoa(binary);\r\n\r\n      var img = new Image();\r\n      img.onload = function () {\r\n        var canvas = document.getElementById('ScreenCanvas');\r\n        if (canvas != null) {\r\n          var ctx = canvas.getContext('2d');\r\n          var x1 = 0,\r\n            y1 = 0,\r\n            x2 = 300,\r\n            y2 = 200;\r\n          ctx.drawImage(this, x1, y1, x2, y2);\r\n        }\r\n      };\r\n      img.src = 'data:image/jpg;base64,' + base64String;\r\n    }\r\n\r\n    socketCtx.socket.on('data', data);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('data', data)\r\n    }\r\n  }, [socketCtx.socket]);\r\n\r\n  useEffect(() => {\r\n    socketCtx.socket.emit('join stream room', { controlId: props.controlId, userId: socketCtx.username });\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='1000px'\r\n      height='430px'\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      footer={footer}\r\n      newStatus={handleChangeFooter}\r\n    >\r\n      <div className={styles.Canvas}>\r\n        <canvas id='ScreenCanvas' />\r\n      </div>\r\n      <div className={styles.Settings}>\r\n        <Settings\r\n          component={props.controlId}\r\n          led={props.LED}\r\n          footer={footer}\r\n          newStatus={handleChangeFooter} />\r\n      </div>\r\n    </Window>\r\n  );\r\n};\r\nexport default ESPCamStream;\r\n","export default __webpack_public_path__ + \"static/media/km100_outline.5cffd463.png\";","import { MdOutlineRotateRight, MdOutlineRotateLeft } from 'react-icons/md';\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport styles from '../CSS/RotaryCtrl.module.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst RotaryCtrl = (props) => {\r\n  const [enteredRotation, setEnteredRotation] = useState(0);\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [rotation, setRotation] = useState(0);\r\n  var direction;\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setRotation(payload.status.absolute);\r\n        (payload.status.busy) ? setOnlineStatus(false) : setOnlineStatus(true);\r\n      }\r\n    }\r\n\r\n    const footer = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    const getFooter = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(payload.online)\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    });\r\n\r\n    socketCtx.socket.emit('getFooter', props.component);\r\n\r\n    socketCtx.socket.on('getFooter', getFooter);\r\n\r\n    socketCtx.socket.on('footer', footer);\r\n\r\n    socketCtx.socket.on('status', status);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n      socketCtx.socket.removeAllListeners('footer', footer)\r\n      socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  const rotCW_Handler = name => (event) => {\r\n    event.preventDefault();\r\n    direction = 0;\r\n\r\n    (name === 'left') ? direction = -1 * Number(enteredRotation) : direction = Number(enteredRotation);\r\n\r\n    if (direction !== 0) {\r\n      socketCtx.socket.emit('command', {\r\n        userId: socketCtx.username,\r\n        color: socketCtx.fontColor,\r\n        controlId: props.control,\r\n        move: direction\r\n      });\r\n\r\n      socketCtx.socket.emit('command', {\r\n        controlId: props.led,\r\n        color: socketCtx.fontColor,\r\n      });\r\n\r\n      socketCtx.socket.emit('footer', {\r\n        status: 'Last change by: ' + socketCtx.username,\r\n        controlId: props.component\r\n      });\r\n    }\r\n    appCtx.addLog('User initiated CW rotation on ' + props.component + ' by ' + enteredRotation + ' steps.');\r\n  };\r\n\r\n  const changeRotationHandler = (event) => {\r\n    setEnteredRotation(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={styles.rotaryCtrl} style={{ top: props.top + 'px', left: props.left + 'px' }}>\r\n      <div className={styles.rotaryCtrl}>\r\n        <span>{Number(rotation)}</span>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          max='100'\r\n          value={enteredRotation}\r\n          onChange={changeRotationHandler}\r\n        />\r\n      </div>\r\n      <button onClick={rotCW_Handler('left')} className={styles.CtrlLeft} disabled={(socketCtx.connected && onlineStatus) ? false : true}  >\r\n        <MdOutlineRotateLeft size={28} />\r\n      </button>\r\n      <button onClick={rotCW_Handler('right')} className={styles.CtrlRight} disabled={(socketCtx.connected && onlineStatus) ? false : true}>\r\n        <MdOutlineRotateRight size={28} />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default RotaryCtrl;","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport KM100_Background from './media/km100_outline.png'\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useState } from 'react';\r\n\r\nconst KM100 = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState(props.footer);\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n\r\n  //wie handhaben wir das?\r\n  const handleReset = () => {\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlIdBottom,\r\n      reset: true\r\n    })\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlIdTop,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      footer={footer}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      background={KM100_Background}\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlIdTop}\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n        top='20'\r\n        left='160'\r\n      />\r\n      <RotaryCtrl\r\n        rotation={props.rotationBottom}\r\n        component={props.controlIdBottom}\r\n        newStatus={handleChangeFooter}\r\n        led={props.LED}\r\n        footer={footer}\r\n        top='50'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default KM100;","export default __webpack_public_path__ + \"static/media/linear_outline.7ac97702.png\";","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport SM1ZP_bg from './media/linear_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useState } from 'react';\r\n\r\nconst SM1ZP = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState(props.footer);\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.controlId)\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      background={SM1ZP_bg}\r\n      newStatus={handleChangeFooter}\r\n      footer={footer}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.controlId}\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n        control='linear'\r\n        top='35'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default SM1ZP;\r\n","import LaserCtrl from \"../../assembly/Laser\";\r\nimport ESPCam from \"../../assembly/ESPCamStream\";\r\nimport KM100 from \"../../assembly/KM100\";\r\nimport SM1ZP from \"../../assembly/SM1ZP\";\r\n\r\nconst MichelsonInterferometer = (props) => {\r\n  let footer = \"Initializing...\"\r\n  var zero = \"0\"\r\n\r\n  var height = window.innerHeight;\r\n  var width = window.innerWidth;\r\n  var halfWidth = width / 2;\r\n  var topHigh = String(height - (height / 3 * 2.7))\r\n  var topHighMiddle = String(height - (height / 1.4))\r\n  var topMiddle = String(height - (height / 2.15))\r\n  var leftLeft = String(width - (halfWidth * 1.9))\r\n  var leftMiddle = String(width - (halfWidth * 1.8))\r\n  var leftRight = String(width - (halfWidth * 0.47))\r\n  var leftMiddleRight = String(width - (halfWidth * 0.4))\r\n  var leftCam = String(width - (halfWidth * 1.485))\r\n\r\n  return (\r\n    <div>\r\n      {/* KM100 */}\r\n      {props.selected.has('KM100_1') && (\r\n        <KM100\r\n          title=\"Mirror\"\r\n          id={'KM100_1'}\r\n          controlIdTop={'KM100_top_1'}\r\n          controlIdBottom={'KM100_bottom_1'}\r\n          LED={'led_KM100'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftLeft}\r\n        />\r\n      )}\r\n      {/* Linear stage */}\r\n      {props.selected.has('linear_1') && (\r\n        <SM1ZP\r\n          title=\"Mirror Stage\"\r\n          controlId={'linear_1'}\r\n          LED={'led_linear'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Laser ctrl */}\r\n      {props.selected.has('greenlaser_1') && (\r\n        <KM100\r\n          title=\"Laser\"\r\n          id={'greenlaser_1'}\r\n          controlIdTop={'greenlaser_top_1'}\r\n          controlIdBottom={'greenlaser_bottom_1'}\r\n          LED={'led_laser'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={leftMiddleRight}\r\n        />\r\n      )}\r\n      {/* Laser power */}\r\n      {props.selected.has('greenlaserPower_1') && (\r\n        <LaserCtrl\r\n          title=\"Power Supply\"\r\n          id={'greenlaserPower_1'}\r\n          controlId={'greenlaser_1'}\r\n          LED={'led_linear'}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Cam1 */}\r\n      {props.selected.has('screen') && (\r\n        <ESPCam\r\n          title=\"Screen\"\r\n          controlId={'screen'}\r\n          LED={'led_screen'}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default MichelsonInterferometer;","export default __webpack_public_path__ + \"static/media/xrtl_team.519a843e.png\";","import styles from \"./InfoWindowContent.module.css\"\r\nimport bgTeam from \"../media/images/xrtl_team.png\"\r\n\r\nconst InfoWindowContent = (props) => {\r\n  return (\r\n    <div className={styles.mainWrapper}\r\n      style={{ backgroundImage: \"url(\\\"\" + bgTeam + \"\\\")\" }}\r\n    >\r\n      Remote labs are a trendsetting way of teaching, communicating, and experiencing science as well as enabling collaborative work. Unfortunately, the implementation of remote access involves a cost-intensive development or at least requires a certain technical skillset. To establish remote labs across disciplines, especially outside the field of IT and engineering, the technical access threshold must be low enough to support a self-contained implementation by researchers, assistants, and technical staff. Hereby, we are developing the open-source toolbox XR Twin Lab for the research field of Photonics. XR Twin Lab (XRTL) provides a modular way of building a web-based application to control optical experimental setups with the integration of VR and AR endpoints.\r\n      <p>\r\n        This Project is currently developed within the DAAD-funded project \"digiPhoton\" and BMBF-funded project \"Lichtwerkstatt\" at the Abbe School of Photonics / Institute of Applied Physics / Friedrich Schiller University in Jena. Feel free to follow our <a href=\"https://github.com/Lichtwerkstatt/XRTL_SPA\">Git Repo</a> or <a href=\"mailto:team@lichtwerkstatt-jena.de\">Contact us.</a>\r\n      </p>\r\n      <p>\r\n        Best! Clara, Falko, Jari and Johannes\r\n      </p>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default InfoWindowContent;","import { useAppContext } from \"../../services/AppContext\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport InfoWindowContent from \"./InfoWindowContent\";\r\n\r\nconst InfoWindow = (props) => {\r\n    const appCtx = useAppContext();\r\n\r\n    const handleCloseWindow = () => {\r\n        appCtx.toggleShowInfoWindow();\r\n    };\r\n\r\n    return (\r\n        <Window\r\n            header=\"About XR TwinLab\"\r\n            top=\"250\"\r\n            left=\"200\"\r\n\r\n            width=\"600px\"\r\n            onClose={handleCloseWindow}\r\n        >\r\n            <InfoWindowContent />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;","import { useSocketContext } from '../../services/SocketContext'\r\nimport { useEffect } from 'react';\r\n\r\nconst ViewCam = (props) => {\r\n    const socketCtx = useSocketContext();\r\n\r\n    useEffect(() => {\r\n        var peerConnection;\r\n        \r\n        const offer = (payload) => {\r\n            peerConnection = props.peer;\r\n            peerConnection\r\n            .setRemoteDescription(payload.data)\r\n            .then(() => peerConnection.createAnswer())\r\n            .then((sdp) => peerConnection.setLocalDescription(sdp))\r\n            .then(() => socketCtx.socket.emit('answer', { id: payload.id, data: peerConnection.localDescription }))\r\n            \r\n            peerConnection.ontrack = (event) => {\r\n                document.getElementById('video').srcObject = event.streams[0];\r\n            }\r\n            \r\n            peerConnection.onicecandidate = (event) => {\r\n                if (event.candidate) {\r\n                    socketCtx.socket.emit('candidate', { id: payload.id, data: event.candidate })\r\n                }\r\n            }\r\n        }\r\n        \r\n        const candidate = (payload) => {\r\n            peerConnection\r\n                .addIceCandidate(new RTCIceCandidate(payload.data))\r\n                .catch(e => console.error(e))\r\n        }\r\n\r\n        document.getElementById('video').setAttribute('style', 'transform: rotate(180deg)')\r\n\r\n        socketCtx.socket.emit('viewer', props.component)\r\n\r\n        socketCtx.socket.on('offer', offer)\r\n\r\n        socketCtx.socket.on('candidate', candidate)\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('offer', offer)\r\n            socketCtx.socket.removeAllListeners('candidate', candidate)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <video className=\"video\" id='video' autoPlay playsInline width=\"640px\" height=\"480px\" ></video>\r\n        </div>\r\n    );\r\n};\r\nexport default ViewCam;\r\n","import { useSocketContext } from \"../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport ViewCam from \"../Chat/ViewCamStream\";\r\nimport { useState } from \"react\";\r\n\r\nconst InfoWindow = (props) => {\r\n    const [lastChange, setLastChange] = useState(['', '', '']);\r\n    const [alertType, setAlertType] = useState('info');\r\n    const [footer, setFooter] = useState(props.footer);\r\n    var [alert, setAlert] = useState(false);\r\n\r\n    const socketCtx = useSocketContext();\r\n    const popupCtx = usePopUpContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const config = { iceServers: [{ urls: [\"stun:stun.l.google.com:19302\"] }] } //stun:stun.stunprotocol.org\r\n    var peerConnection = new RTCPeerConnection(config);\r\n\r\n    const handleCloseWindow = () => {\r\n        //appCtx.toggleSelectedComp(props.id);\r\n        appCtx.toggleCam();\r\n        peerConnection.close();\r\n        socketCtx.socket.emit('watcher disconnect')\r\n    };\r\n    const handleChangeFooter = (newFooter) => {\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n        setFooter(newFooter);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        peerConnection.close();\r\n    }\r\n\r\n    const handleInfo = () => {\r\n        var timeNow = new Date();\r\n        let difH, difMin, difSec = 0;\r\n        alert = '';\r\n\r\n        timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n        if (lastChange[0] === '') {\r\n            alert = 'No last change detected!'\r\n        } else if (timeNow[0] > lastChange[0]) {\r\n            difH = timeNow[0] - lastChange[0];\r\n            alert = 'Last change is more than ' + difH + ' h ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n            difSec = timeNow[2] - lastChange[2]\r\n            alert = 'Last change is ' + difSec + ' s ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n            difMin = timeNow[1] - lastChange[1]\r\n            alert = 'Last change is more than ' + difMin + ' min ago!'\r\n        } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n            alert = 'Last change is more than 24 h ago!'\r\n        } else {\r\n            alert = 'No last change detected!'\r\n        }\r\n\r\n        setAlert(alert);\r\n        setAlertType('info');\r\n        popupCtx.toggleShowPopUp(alert, alertType);\r\n    }\r\n\r\n    return (\r\n        <Window\r\n            header=\"Cam_1\"\r\n            top=\"200\"\r\n            left=\"250\"\r\n            title=\"Cam_1\"\r\n            id=\"Cam_1\"\r\n            footer={footer}\r\n            width=\"600px\"\r\n            onClose={handleCloseWindow}\r\n            onReset={handleReset}\r\n            onInfo={handleInfo}\r\n            newStatus={handleChangeFooter}\r\n        >\r\n            <ViewCam\r\n                title=\"Cam_1\"\r\n                component=\"Cam_1\"\r\n                peer ={peerConnection}\r\n                footer={footer}\r\n                newStatus={handleChangeFooter}\r\n            />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;","import MichelsonInterferometer from \"../../experiment/MichelsonInterferometer/MichelsonInterferometer\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useEffect, useState, Fragment } from \"react\";\r\nimport InfoWindow from \"../../windows/InfoWindow\";\r\nimport CamWindow from \"../../windows/CamWindow\";\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from \"react\"\r\n\r\nconst ExperimentUILayer = () => {\r\n  var [connection, setConnection] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const auth = (color) => {\r\n      popupCtx.toggleShowPopUp('Connection successful!', 'success');\r\n      socketCtx.setNewFont(color);\r\n      setConnection(true);\r\n    }\r\n    socketCtx.socket.on('AuthFailed', () => {\r\n      popupCtx.toggleShowPopUp('To many user are connected right now!', 'warning');\r\n    })\r\n\r\n    socketCtx.socket.on('Auth', auth);\r\n\r\n    if (!connection) {\r\n      popupCtx.toggleShowPopUp('No server connection!', 'error');\r\n      setConnection('');\r\n    }\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('Auth', auth)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {appCtx.showInfoWindow && <InfoWindow />}\r\n      {appCtx.showCam && <CamWindow />}\r\n      <MichelsonInterferometer\r\n        toggleSelect={appCtx.toggleSelectedComp}\r\n        selected={appCtx.selectedComps}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default memo(ExperimentUILayer, isEqual);","import { Html } from '@react-three/drei';\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from 'react'\r\n\r\nconst DescriptiveTag = (props) => {\r\n  const wrapperStyle = {\r\n    color: 'white',\r\n    width: '200px',\r\n    height: '30px',\r\n  };\r\n  return <Html position={props.position} style={wrapperStyle} zIndexRange={[0, 10]} >\r\n\r\n    <div\r\n      style={{\r\n        height: '150px',\r\n        width: '0px',\r\n        borderLeft: '2px solid white',\r\n        float: 'left',\r\n      }}\r\n    ></div>\r\n\r\n    <div style={{ 'marginLeft': '12px' }}>\r\n      <span>\r\n        <b>{props.title}</b>\r\n      </span>\r\n      <br />\r\n      {props.description}\r\n      <br />\r\n      {props.status}\r\n    </div>\r\n  </Html>\r\n\r\n};\r\n\r\nexport default memo(DescriptiveTag, isEqual);\r\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, memo } from \"react\";\r\nimport { useGLTF, Box, Cylinder } from \"@react-three/drei\";\r\nimport DescriptiveTag from \"../../UI/experimentUI/DescriptiveTag\";\r\nimport { isEqual } from 'lodash';\r\n\r\nfunction Model({ ...props }) {\r\n  const group = useRef();\r\n  const { nodes, materials } = useGLTF(\"/model/MI_110422.glb\");\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group name=\"Scene\">\r\n        <group name=\"Optical elements\">\r\n          {/* BeamSplitter and Lens*/}\r\n          <Box\r\n            position={[-0.55, 0.66, -0.1]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.25, 0.25, 0.25]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          <Cylinder\r\n            position={[0.7, 0.67, -0.13]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, 0, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n        </group>\r\n        <group\r\n          name=\"Mirror1\"\r\n          position={[-0.53, 0.67, 0.94]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"KM100_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Reference Mirror\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"SideMirrorMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"KM100_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"SideMirrorMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n          <mesh\r\n            name=\"SideMirrorMesh_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"TranslateMirror\"\r\n          position={[-1.71, 0.67, -0.12]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"linear_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Transtlate Mirror\" description=\"Linear Stage\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"linear_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n          <mesh\r\n            name=\"TranslateMirrorMesh_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"Schirm\"\r\n          position={[-0.37, 0.86, -1.22]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"screen\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.5, 0]} title=\"Screen\" description=\"Screen with Interference Pattern\" />}\r\n          <mesh\r\n            name=\"PlaneMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh.geometry}\r\n          >\r\n            {props.selected.has(\"screen\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#eeeeee\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"PlaneMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh_1.geometry}\r\n            material={materials.BlackParts}\r\n          />\r\n        </group>\r\n        <group name=\"Base\">\r\n          {props.showTags && <DescriptiveTag position={[-0.5, 2, -0.1]} title=\"Beam Splitter\" description=\"50/50 Beam Splitter\" />}\r\n          {props.showTags && <DescriptiveTag position={[0.6, 2, -0.1]} title=\"Lens\" description=\"Lens for Beam Widening\" />}\r\n          <mesh\r\n            name=\"BaseMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.BaseMesh.geometry}\r\n            material={materials.BlackParts}\r\n          />\r\n          <mesh\r\n            name=\"BaseMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.BaseMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"Laser\"\r\n          position={[1.56, 0.67, 0.14]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaser_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.2, -0.2]} title=\"Laser Alignment\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"LaserMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"greenlaser_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"LaserMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        <mesh\r\n          name=\"SD5\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.SD5.geometry}\r\n          material={materials.BlackParts}\r\n          position={[1.61, 0.25, -0.9]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaserPower_1\")\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Power Supply\" description=\"5V Laser Power Supply\" />}\r\n          {props.selected.has(\"greenlaserPower_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        {props.showBeam &&\r\n          <mesh\r\n            name=\"LaserBeam\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserBeam.geometry}\r\n            material={materials.Laser}\r\n            position={[-0.3, 0.66, -0.15]}\r\n          />}\r\n      </group>\r\n    </group>\r\n  );\r\n}\r\n\r\nuseGLTF.preload(\"/model/MI_110422.glb\");\r\nexport default memo(Model, isEqual);\r\n","import MI_110422 from '../../experiment/MichelsonInterferometer/MI_110422';\r\nimport { OrbitControls, Environment } from '@react-three/drei';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { Suspense } from 'react';\r\n\r\nconst VirtualLayer = () => {\r\n  const appCtx = useAppContext();\r\n\r\n  if (appCtx.showVirtualLayer) {\r\n    return (\r\n      <Canvas\r\n        style={{\r\n          position: 'absolute',\r\n          background: 'linear-gradient(Teal, Black)',\r\n          width: '100%',\r\n          height: '100%',\r\n        }}\r\n        colorManagement\r\n        softShadows\r\n        camera={{ position: [0, 3, 5], fov: 40 }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          <Environment files='../hdri/autoshop.hdr' />\r\n          <OrbitControls autoRotate={appCtx.autoRotate} />\r\n          <MI_110422\r\n            toggleSelect={appCtx.toggleSelectedComp}\r\n            selected={appCtx.selectedComps}\r\n            showTags={appCtx.showTags}\r\n            showBeam={appCtx.showBeam}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    );\r\n  } else {\r\n    // Hier kommt die Camera hin!\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default VirtualLayer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);","import { useState, useContext, createContext } from \"react\";\r\nimport { useSocketContext } from \"./SocketContext\";\r\nimport { Alert, Snackbar } from '@mui/material';\r\nimport styles from \"./PopUp.module.css\";\r\n\r\nconst PopUpContext = createContext();\r\n\r\nexport function usePopUpContext() {\r\n    return useContext(PopUpContext);\r\n}\r\n\r\nexport function PopUpContextProvider({ children }) {\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [type, setType] = useState('info');\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    socketCtx.socket.on('error', error => {\r\n        setShowPopUp(true);\r\n        setText(error.errmsg);\r\n        setType('error');\r\n    })\r\n\r\n    socketCtx.socket.on('newUserInfo', (payload) => {\r\n        toggleShowPopUp(payload + ' has joined the experiment!', 'info')\r\n    })\r\n\r\n    const toggleShowPopUp = (newText, newType) => {\r\n        setText(newText);\r\n        setType(newType);\r\n        setShowPopUp(!showPopUp);\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setShowPopUp(false);\r\n    };\r\n\r\n    return (\r\n        <PopUpContext.Provider\r\n            value={{\r\n                showPopUp,\r\n                toggleShowPopUp\r\n            }}\r\n        >\r\n            <Snackbar open={showPopUp} autoHideDuration={2000} onClose={handleClose} >\r\n                <div className={styles.popUp}>\r\n                    <Alert variant=\"filled\" severity={type} onClose={() => { setShowPopUp(false) }}>{text}</Alert>\r\n                </div>\r\n            </Snackbar>\r\n            {children}\r\n        </PopUpContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__26qIN\",\"chatMain\":\"Chat_chatMain__1zSUi\",\"msgForm\":\"Chat_msgForm__3zrhr\",\"chatHandler\":\"Chat_chatHandler__2wAbt\",\"openChat\":\"Chat_openChat__3kAnz\",\"closeChat\":\"Chat_closeChat__a-LQe\",\"buttonBlink\":\"Chat_buttonBlink__juA-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"consoleContainer\":\"Console_consoleContainer__1dDWk\",\"consoleMain\":\"Console_consoleMain__SxxQK\",\"consoleHandler\":\"Console_consoleHandler__2f7jk\",\"openConsole\":\"Console_openConsole__1E2CK\",\"closeConsole\":\"Console_closeConsole__1Gp8h\"};"],"sourceRoot":""}