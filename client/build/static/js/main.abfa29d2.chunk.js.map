{"version":3,"sources":["components/UI/CSS/Window.module.css","components/UI/CSS/RotaryCtrl.module.css","components/Login/Login.module.css","components/UI/CSS/NavBar.module.css","components/UI/CSS/Settings.module.css","components/assembly/Stream.module.css","services/SocketContext.js","App.js","components/UI/experimentUI/NavBar.js","components/Console/Console.js","components/Chat/Chat.js","components/Login/Login.js","services/PopUp.module.css","services/AppContext.js","components/windows/InfoWindowContent.module.css","components/UI/templates/Switch.js","components/UI/CtrlUnits/LaserCtrl.js","components/UI/experimentUI/Window.js","components/assembly/Laser.js","components/UI/templates/LeftRightCtrl.js","components/UI/templates/UpDownCtrl.js","components/UI/templates/SliderCtrl.js","components/UI/templates/SelectItem.js","components/UI/templates/Select.js","components/UI/CtrlUnits/Settings.js","components/assembly/ESPCamStream.js","components/assembly/media/km100_outline.png","components/UI/CtrlUnits/RotaryCtrl.js","components/assembly/KM100.js","components/assembly/media/linear_outline.png","components/assembly/SM1ZP.js","components/UI/CtrlUnits/BeamSplitterCtrl.js","components/assembly/BeamSplitter.js","components/experiment/MichelsonInterferometer/MichelsonInterferometer.js","components/media/images/xrtl_team.png","components/windows/InfoWindowContent.js","components/windows/InfoWindow.js","components/Chat/ViewCamStream.js","components/windows/CamWindow.js","components/UI/experimentUI/ExperimentUILayer.js","components/UI/experimentUI/DescriptiveTag.js","components/experiment/MichelsonInterferometer/MI_110422.js","components/UI/experimentUI/VirtualLayer.js","index.js","services/PopUpContext.js","components/Chat/CSS/Chat.module.css","components/Console/Console.module.css"],"names":["module","exports","manager","Manager","autoConnect","socket","SocketContext","createContext","jwt","require","useSocketContext","useContext","SocketContextProvider","children","useState","connected","setConnected","username","setUsername","URL","setURL","fontColor","setFontColor","appCtx","useAppContext","useEffect","Auth","color","emit","connect","e","addLog","disconnect","on","lastClosedComponent","controlId","userId","toogleLastComp","removeAllListeners","setNewURL","newURL","Provider","value","toggleConnection","close","payload","sub","component","iat","Date","now","exp","token","sign","auth","setNewFont","newFont","helperEmit","event","App","process","title","NavBar","socketCtx","connectionStatusColor","autoRotateColor","autoRotate","showTagsColor","showTags","cameraStatusColor","showCam","showBeamColor","showBeam","showInfoWindowColor","showInfoWindow","id","className","styles","navbar","navMenu","onClick","toggleLogin","size","toggleShowBeam","toggleAutoRotate","toggleShowTags","toggleCam","toggleShowInfoWindow","memo","isEqual","Console","props","showConsole","setShowConsole","animation","setAnimation","consoleContainer","consoleMain","logs","map","index","consoleHandler","closeConsole","openConsole","Chat","showChat","setShowChat","message","setMessage","chat","setChat","chatContainer","chatMain","style","msgForm","onSubmit","preventDefault","type","name","placeholder","onChange","target","required","chatHandler","closeChat","openChat","Login","connection","setConnection","filter","createFilterOptions","theme","createTheme","palette","mode","primary","light","main","dark","contrastText","spacing","handleLogin","String","error","showLogin","popupWindow","popupInner","fontSize","container","columnSpacing","md","item","xs","autoFocus","variant","label","onKeyPress","key","marginLeft","width","helperText","sx","m","freeSolo","renderInput","params","newValue","inputValue","filterOptions","options","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","renderOption","endIcon","height","marginTop","AppContext","React","AppContextProvider","setLastClosedComponent","showVirtualLayer","setShowVirtualLayer","Set","selectedComps","setSelectedComps","setShowInfoWindow","setAutoRotate","setShowLogin","setShowBeam","setShowTags","setShowCam","setLogs","toggleSelectedComp","compId","has","prev","x","add","toggleShowVirtualLayer","log","SwiitchCtrl","switchValue","setSwitchValue","icon","switchStatus","Box","FormGroup","Stack","direction","alignItems","Typography","start","Switch","checked","status","inputProps","disabled","online","end","LaserCtrl","switchIsOn","setSwitch","onlineStatus","setOnlineStatus","isOn","footer","newStatus","getFooter","getStatus","ThemeProvider","led","document","getElementById","vertical-align","Window","handle","window","top","left","windowHeader","display","cursor","float","header","onReset","onClose","windowContent","background","undefined","windowFooter","onInfo","windowInfo","Laser","lastChange","setLastChange","alertType","setAlertType","setFooter","alert","setAlert","popupCtx","usePopUpContext","handleChangeFooter","newFooter","time","getHours","getMinutes","getSeconds","getDay","getMonth","reset","difH","difMin","timeNow","difSec","toggleShowPopUp","LED","LeftRightCtrl","handleCtrl","negativ","IconButton","UpDownCtrl","SliderCtrl","sliderValue","sliderPos","setSliderPos","marks","parseInt","min","max","handleSettingChanges","text","gutterBottom","mb","Slider","aria-label","valueLabelDisplay","step","onChangeCommitted","SelectItem","selectValue","setSelectValue","Select","MenuItem","SelectCtrl","FormControl","fullWidth","InputLabel","command","Settings","setSwitchStatus","contrast","setContrast","exposure","setExposure","gray","brightness","console","UpDown","LeftRight","ESPCamStream","data","uint8Arr","Uint8Array","binary","i","length","fromCharCode","base64String","btoa","img","Image","onload","canvas","getContext","drawImage","this","src","Canvas","RotaryCtrl","enteredRotation","setEnteredRotation","rotation","setRotation","absolute","busy","rotCW_Handler","Number","control","move","rotaryCtrl","CtrlLeft","CtrlRight","KM100","KM100_Background","controlIdBottom","controlIdTop","rotationTop","rotationBottom","SM1ZP","SM1ZP_bg","BeamSplitterCtrl","mx","BeamSplitter","MichelsonInterferometer","zero","innerHeight","innerWidth","halfWidth","topHigh","topHighMiddle","topMiddle","leftLeft","leftMiddle","leftRight","leftMiddleRight","leftCam","selected","InfoWindowContent","mainWrapper","backgroundImage","bgTeam","href","InfoWindow","ViewCam","peerConnection","offer","peer","setRemoteDescription","then","createAnswer","sdp","setLocalDescription","localDescription","ontrack","srcObject","streams","onicecandidate","candidate","addIceCandidate","RTCIceCandidate","catch","setAttribute","autoPlay","playsInline","RTCPeerConnection","iceServers","urls","ExperimentUILayer","CamWindow","toggleSelect","DescriptiveTag","Html","position","zIndexRange","borderLeft","description","Model","group","useRef","useGLTF","nodes","materials","ref","dispose","args","scale","thickness","roughness","transmission","clearcoat","clearcoatRoughness","ior","envMapIntensity","attenuationColor","attenuationDistance","Math","PI","onPointerDown","stopPropagation","castShadow","receiveShadow","geometry","SideMirrorMesh","material","BlackParts","transparent","opacity","SideMirrorMesh_1","ShinyParts","SideMirrorMesh_2","Mirror","TranslateMirrorMesh","TranslateMirrorMesh_1","TranslateMirrorMesh_2","PlaneMesh","PlaneMesh_1","BaseMesh","BaseMesh_1","LaserMesh","LaserMesh_1","SD5","LaserBeam","preload","VirtualLayer","colorManagement","softShadows","camera","fov","fallback","Environment","files","OrbitControls","MI_110422","ReactDOM","render","PopUpContext","PopUpContextProvider","showPopUp","setShowPopUp","setText","setType","errmsg","newText","newType","open","autoHideDuration","reason","popUp","severity"],"mappings":"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","file":"static/js/main.abfa29d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"Window_window__eoZ4W\",\"windowHeader\":\"Window_windowHeader__2vHd6\",\"windowFooter\":\"Window_windowFooter__3xtgO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rotaryCtrl\":\"RotaryCtrl_rotaryCtrl__1dFJs\",\"CtrlLeft\":\"RotaryCtrl_CtrlLeft__1Oq_0\",\"CtrlRight\":\"RotaryCtrl_CtrlRight__RbI2j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1DZpm\",\"close\":\"Login_close__jc06k\",\"popupWindow\":\"Login_popupWindow__2XsJg\",\"popupInner\":\"Login_popupInner__1U9Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__2NK8m\",\"navMenu\":\"NavBar_navMenu__DRNeT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UpDown\":\"Settings_UpDown__1XZ21\",\"LeftRight\":\"Settings_LeftRight__NUQR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"Stream_Canvas__pCA10\",\"Settings\":\"Stream_Settings__2Zsif\"};","import { useState, useContext, useEffect, createContext } from \"react\";\r\nimport { useAppContext } from \"./AppContext\";\r\nimport { Manager } from \"socket.io-client\";\r\n\r\nvar manager = new Manager(\"\", { autoConnect: false });\r\nvar socket = manager.socket(\"/\");\r\nvar SocketContext = createContext();\r\nvar jwt = require('jsonwebtoken');\r\n\r\nexport function useSocketContext() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\nexport function SocketContextProvider({ children }) {\r\n  const [connected, setConnected] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [URL, setURL] = useState('');\r\n  const [fontColor, setFontColor] = useState('white');\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const Auth = (color) => {\r\n      setFontColor(color);\r\n      socket.emit('newUserInfo', username)\r\n    }\r\n\r\n    const connect = (e) => {\r\n      setConnected(true)\r\n      appCtx.addLog(\"Server : Client connected to \" + URL)\r\n    }\r\n\r\n    const disconnect = (e) => {\r\n      setConnected(false)\r\n      appCtx.addLog(\"Server : Client disconnect.\")\r\n    }\r\n\r\n    socket.on('connect', connect);\r\n\r\n    socket.on('disconnect', disconnect)\r\n\r\n    socket.on('Auth', Auth);\r\n\r\n    if (appCtx.lastClosedComponent === 'screen') {\r\n      socket.emit(\"leave stream room\", { controlId: 'screen', userId: username });\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    if (appCtx.lastClosedComponent === 'Cam_1') {\r\n      socket.emit('watcher disconnect');\r\n      appCtx.toogleLastComp();\r\n    }\r\n\r\n    return (() => {\r\n      socket.removeAllListeners('Auth', Auth)\r\n      socket.removeAllListeners('connect', connect)\r\n      socket.removeAllListeners('disconnect', disconnect)\r\n    })\r\n  })\r\n\r\n  const helperEmit = (event, payload) => {\r\n    socket.emit(event, payload)\r\n  }\r\n\r\n  const setNewURL = (newURL, username) => {\r\n    socket.disconnect();\r\n    manager = new Manager(newURL, { autoConnect: false });\r\n    socket = manager.socket(\"/\");\r\n    SocketContext = createContext();\r\n    setURL(newURL);\r\n    setUsername(username);\r\n  }\r\n\r\n  const setNewFont = (newFont) => {\r\n    setFontColor(newFont);\r\n  }\r\n\r\n  const toggleConnection = (username) => {\r\n    if (!connected) {\r\n      var payload = {\r\n        sub: username,\r\n        component: 'client',\r\n        iat: Date.now(),\r\n        exp: Date.now() + 1800000,\r\n      }\r\n\r\n      var token = jwt.sign(payload, \"keysecret\");\r\n      socket.auth = { token: token }\r\n      //secure: true, rejectUnauthorized: false}\r\n      socket.connect();\r\n\r\n      setConnected(true)\r\n      appCtx.addLog(\"Client connected by choice.\")\r\n    } else {\r\n      setConnected(false)\r\n      setUsername(\"\");\r\n      setNewURL(\"\");\r\n      socket.close();\r\n      appCtx.addLog(\"Client disconnected by choice.\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket, connected, toggleConnection, setNewURL, setNewFont, username, fontColor, helperEmit }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n}\r\n","import NavBar from \"./components/UI/experimentUI/NavBar\";\r\nimport Console from \"./components/Console/Console\";\r\nimport Chat from \"./components/Chat/Chat\";\r\nimport Login from \"./components/Login/Login\";\r\nimport VirtualLayer from \"./components/UI/experimentUI/VirtualLayer\";\r\nimport { SocketContextProvider } from \"./services/SocketContext\";\r\nimport { AppContextProvider } from \"./services/AppContext\";\r\nimport ExperimentUILayer from \"./components/UI/experimentUI/ExperimentUILayer\";\r\nimport {PopUpContextProvider} from \"./services/PopUpContext\"\r\n\r\nconst App = () => {\r\n  process.title = 'XRTLApp';\r\n  return (\r\n    <AppContextProvider>\r\n      <SocketContextProvider>\r\n          <VirtualLayer />\r\n        <PopUpContextProvider>\r\n          <ExperimentUILayer />\r\n          <Console />\r\n          <Chat />\r\n          <NavBar />\r\n          <Login />\r\n        </PopUpContextProvider>\r\n      </SocketContextProvider>\r\n    </AppContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;","\r\nimport { MdOutlineScreenRotation, MdInfoOutline } from 'react-icons/md'\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext'\r\nimport { GiLaserWarning } from 'react-icons/gi'\r\nimport { ImConnection } from 'react-icons/im'\r\nimport styles from '../CSS/NavBar.module.css'\r\nimport Tooltip from '@mui/material/Tooltip'\r\nimport { BsCamera } from 'react-icons/bs'\r\nimport { FaTags } from 'react-icons/fa'\r\n//import { BsBox } from 'react-icons/bs'\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from 'react'\r\n\r\nconst NavBar = () => {\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    let connectionStatusColor = '';\r\n    if (socketCtx.connected) { connectionStatusColor = 'white' }\r\n    let autoRotateColor = '';\r\n    if (appCtx.autoRotate) { autoRotateColor = 'white' }\r\n    let showTagsColor = '';\r\n    if (appCtx.showTags) { showTagsColor = 'white' }\r\n    let cameraStatusColor = '';\r\n    if (appCtx.showCam) { cameraStatusColor = 'white' }\r\n    let showBeamColor = '';\r\n    if (appCtx.showBeam) { showBeamColor = 'white' }\r\n    let showInfoWindowColor = '';\r\n    if (appCtx.showInfoWindow) { showInfoWindowColor = 'white' }\r\n\r\n    return <div id='navbar' className={styles.navbar} >\r\n        <h1>XR TwinLab</h1>\r\n        <div className={styles.navMenu}>\r\n            <ul>\r\n                <Tooltip title='Connnection'>\r\n                    <li onClick={() => { (socketCtx.connected) ? socketCtx.toggleConnection() : appCtx.toggleLogin(); }}><ImConnection size={29} color={connectionStatusColor} /></li>\r\n                </Tooltip>\r\n\r\n           {/*      <Tooltip title='2D model'>\r\n                    <li onClick={appCtx.toggleShowVirtualLayer}><BsBox size={26} /></li>\r\n                </Tooltip> */}\r\n\r\n                <Tooltip title='Laser beam'>\r\n                    <li onClick={appCtx.toggleShowBeam}><GiLaserWarning size={29} color={showBeamColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Rotation'>\r\n                    <li onClick={appCtx.toggleAutoRotate}><MdOutlineScreenRotation size={26} color={autoRotateColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Labels'>\r\n                    <li onClick={appCtx.toggleShowTags}><FaTags size={25} color={showTagsColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Webcam'>\r\n                    <li onClick={appCtx.toggleCam}><BsCamera size={26} color={cameraStatusColor} /></li>\r\n                </Tooltip>\r\n\r\n                <Tooltip title='Information'>\r\n                    <li onClick={appCtx.toggleShowInfoWindow}><MdInfoOutline size={26} color={showInfoWindowColor} /></li>\r\n                </Tooltip>\r\n\r\n            </ul>\r\n        </div>\r\n    </div>\r\n}\r\nexport default memo(NavBar, isEqual)","import { useAppContext } from '../../services/AppContext'\r\nimport { RiTerminalBoxFill } from 'react-icons/ri'\r\nimport styles from './Console.module.css'\r\nimport { useState, memo } from 'react'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Console = (props) => {\r\n  const [showConsole, setShowConsole] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const appCtx = useAppContext();\r\n\r\n  const showConsoleHandler = () => {\r\n    setAnimation(showConsole ? styles.closeConsole : styles.openConsole)\r\n    setShowConsole(!showConsole)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.consoleContainer + ' ' + animation}>\r\n      <div className={styles.consoleMain}>\r\n        {appCtx.logs.map((payload, index) => {\r\n          return (<span key={index}>{payload}<br /></span>)\r\n        })}\r\n      </div>\r\n      <div className={styles.consoleHandler}>\r\n        <span>\r\n          <RiTerminalBoxFill size={35} onClick={showConsoleHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Console, isEqual);\r\n","import { useSocketContext } from '../../services/SocketContext';\r\nimport { useEffect, useState, memo } from 'react'\r\nimport styles from './CSS/Chat.module.css'\r\nimport { ImBubble } from 'react-icons/im'\r\nimport { MdSend } from 'react-icons/md'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Chat = () => {\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [animation, setAnimation] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [chat, setChat] = useState([]);\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const message = (payload) => {\r\n      setChat([...chat, payload]);\r\n    }\r\n\r\n    socketCtx.socket.on('message', message);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('message', message);\r\n    }\r\n  }, [socketCtx, chat])\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n    socketCtx.socket.emit('message', { userId: socketCtx.username, message: message, color: socketCtx.fontColor });\r\n    setMessage('');\r\n  }\r\n\r\n  const showChatHandler = () => {\r\n    setAnimation(showChat ? styles.closeChat : styles.openChat);\r\n    setShowChat(!showChat);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={styles.chatContainer + ' ' + animation}\r\n    >\r\n      <div className={styles.chatMain}>\r\n        {chat.map((payload, index) => {\r\n          return (\r\n            <b key={index} >\r\n              <span style={{ color: payload.color }}> {payload.userId}:</span> <span >{payload.message}</span>\r\n              <br />\r\n            </b>\r\n          )\r\n        })}\r\n      </div>\r\n      <form className={styles.msgForm} onSubmit={sendMessage}>\r\n        <input\r\n          type='text'\r\n          name='message'\r\n          placeholder='Type message here...'\r\n          value={message}\r\n          onChange={(e) => {\r\n            setMessage(e.target.value)\r\n          }}\r\n          required\r\n        />\r\n        <button type='submit'><MdSend size={25} /></button>\r\n      </form>\r\n      <div className={styles.chatHandler + ' ' + animation}>\r\n        <span>\r\n          <ImBubble size={35} onClick={showChatHandler} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default memo(Chat, isEqual);","import { Grid, Autocomplete, Box, TextField, createTheme, ThemeProvider, Button, IconButton } from '@mui/material';\r\nimport HighlightOffOutlinedIcon from '@mui/icons-material/HighlightOffOutlined';\r\nimport { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport { useSocketContext } from '../../services/SocketContext'\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport React, { useState, memo } from 'react';\r\nimport styles from './Login.module.css'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Login = (props) => {\r\n    const connectionOption = [{ title: 'http://localhost:3000' }, { title: 'http://10.232.37.41:3000' }];\r\n    const [connection, setConnection] = useState(null);\r\n    const [username, setUsername] = useState('');\r\n    const filter = createFilterOptions();\r\n\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#fff',\r\n            },\r\n        },\r\n        spacing: 2,\r\n    })\r\n\r\n    const handleLogin = () => {\r\n        if (username !== '') {\r\n            try {\r\n                socketCtx.setNewURL(String(connection.title), String(username));\r\n                socketCtx.toggleConnection(String(username));\r\n                appCtx.toggleLogin();\r\n            }\r\n            catch (error) { }\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    const autoCompleteHandle = (event, newValue) => {\r\n        if (typeof newValue === 'string') {\r\n            setConnection({ title: newValue, });\r\n        } else if (newValue && newValue.inputValue) {\r\n            setConnection({ title: newValue.inputValue, });\r\n        } else {\r\n            setConnection(newValue);\r\n        }\r\n    }\r\n\r\n    const filterOption = (options, params) => {\r\n        const filtered = filter(options, params);\r\n        const { inputValue } = params;\r\n        const isExisting = options.some((option) => inputValue === option.title);\r\n        if (inputValue !== '' && !isExisting) {\r\n            filtered.push({ inputValue, title: `Add '${inputValue}'`, });\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    const getLabel = (option) => {\r\n        if (typeof option === 'string') {\r\n            return option;\r\n        }\r\n        if (option.inputValue) {\r\n            return option.inputValue;\r\n        }\r\n        return option.title;\r\n    }\r\n\r\n    if (appCtx.showLogin) {\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <div className={styles.popupWindow}>\r\n                </div>\r\n                <div className={styles.popupInner} >\r\n                    <h3 title='settings'>Settings</h3>\r\n                    <div className={styles.close}>\r\n                        <IconButton onClick={(e) => {\r\n                            appCtx.toggleLogin();\r\n                        }} >\r\n                            <HighlightOffOutlinedIcon fontSize='large' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Grid container columnSpacing={{ md: 95 }}>\r\n                        <Grid item xs={6}>\r\n                            <TextField\r\n                                autoFocus\r\n                                variant='outlined'\r\n                                label='Username '\r\n                                value={username}\r\n                                onChange={handleChange}\r\n                                onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                                style={{ marginLeft: 17, width: 250 }}\r\n                                error={username === ''}\r\n                                helperText={username === '' ? 'Please enter your username!' : ' '}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box sx={{ m: 8, width: 250 }} >\r\n                        <Autocomplete\r\n                            value={connection}\r\n                            freeSolo\r\n                            renderInput={(params) => (\r\n                                <TextField {...params} label='Choose server address ' />)}\r\n                            onChange={autoCompleteHandle}\r\n                            onKeyPress={(e) => { if (e.key === 'Enter') { handleLogin(); } }}\r\n                            filterOptions={filterOption}\r\n                            selectOnFocus\r\n                            clearOnBlur\r\n                            handleHomeEndKeys\r\n                            options={connectionOption}\r\n                            getOptionLabel={getLabel}\r\n                            renderOption={(props, option) => <li {...props}>{option.title}</li>}\r\n                        />\r\n                    </Box>\r\n\r\n                    <Button size='small' type='submit' variant='contained'\r\n                        onClick={handleLogin}\r\n                        endIcon={<SendIcon />}\r\n                        style={{ width: 90, height: 30, marginTop: -3, marginLeft: 270 }}\r\n                    >Login</Button>\r\n\r\n                </div>\r\n            </ThemeProvider>\r\n        );\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default memo(Login, isEqual);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popUp\":\"PopUp_popUp__IolRq\"};","import React, { useState, useContext } from \"react\";\r\n\r\nconst AppContext = React.createContext()\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n\r\nexport function AppContextProvider({ children }) {\r\n  const [lastClosedComponent, setLastClosedComponent] = useState('');\r\n  const [showVirtualLayer, setShowVirtualLayer] = useState(true);\r\n  const [selectedComps, setSelectedComps] = useState(new Set());\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [autoRotate, setAutoRotate] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showBeam, setShowBeam] = useState(false);\r\n  const [showTags, setShowTags] = useState(true);\r\n  const [showCam, setShowCam] = useState(false);\r\n  const [logs, setLogs] = useState([]);\r\n\r\n\r\n  const toggleSelectedComp = compId => {\r\n    if (!selectedComps.has(compId)) {\r\n      setSelectedComps(prev => new Set(prev.add(compId)));\r\n    } else {\r\n      setSelectedComps(prev => new Set([...prev].filter(x => x !== compId)));\r\n      setLastClosedComponent(compId);\r\n    }\r\n  };\r\n\r\n  const toogleLastComp = () => {\r\n    setLastClosedComponent('');\r\n  }\r\n\r\n  const toggleAutoRotate = () => {\r\n    setAutoRotate(!autoRotate);\r\n  };\r\n\r\n  const toggleShowVirtualLayer = () => {\r\n    setShowVirtualLayer(!showVirtualLayer);\r\n  };\r\n\r\n  const toggleShowTags = () => {\r\n    setShowTags(!showTags)\r\n  }\r\n\r\n  const addLog = (log) => {\r\n    setLogs(prev => [log, ...prev])\r\n  };\r\n\r\n  const toggleShowBeam = () => {\r\n    setShowBeam(!showBeam);\r\n  }\r\n\r\n  const toggleShowInfoWindow = () => {\r\n    setShowInfoWindow(!showInfoWindow);\r\n  }\r\n\r\n  const toggleLogin = () => {\r\n    setShowLogin(!showLogin);\r\n  }\r\n\r\n  const toggleCam = () => {\r\n    setShowCam(!showCam);\r\n    toggleSelectedComp('Cam_1')\r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        autoRotate,\r\n        toggleAutoRotate,\r\n        showVirtualLayer,\r\n        toggleShowVirtualLayer,\r\n        selectedComps,\r\n        toggleSelectedComp,\r\n        logs,\r\n        addLog,\r\n        showTags,\r\n        toggleShowTags,\r\n        showBeam,\r\n        toggleShowBeam,\r\n        showLogin,\r\n        setShowLogin,\r\n        showInfoWindow,\r\n        toggleShowInfoWindow,\r\n        toggleLogin,\r\n        toggleCam,\r\n        showCam,\r\n        lastClosedComponent,\r\n        toogleLastComp\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"InfoWindowContent_mainWrapper__345Fv\"};","import { Switch, Box, Typography, FormGroup, Stack } from '@mui/material';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SwiitchCtrl = (props) => {\r\n    const [switchValue, setSwitchValue] = useState(false);\r\n    const appCtx = useAppContext();\r\n    const socketCtx = useSocketContext();\r\n\r\n    try {\r\n        props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\r\n    } catch (error) { }\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSwitchValue(newValue);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue,\r\n\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set switch on \" + props.component + \" to \" + switchValue)\r\n\r\n        try {\r\n            props.icon.style.color = (props.switchStatus !== true) ? 'grey' : 'white';\r\n        } catch (error) { }\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: 250, m: 2 }}>\r\n            <FormGroup>\r\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                    <Typography>{props.start}</Typography>\r\n                    <Switch checked={props.switchStatus}\r\n                        onChange={handleSettingChanges}\r\n                        inputProps={{ 'aria-label': 'controlled' }}\r\n                        disabled={(socketCtx.connected && props.online) ? false : true} />\r\n                    <Typography>{props.end}</Typography>\r\n                </Stack>\r\n            </FormGroup>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SwiitchCtrl;\r\n","import { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { GiLaserWarning } from \"react-icons/gi\"\r\nimport { Box } from '@mui/material';\r\nimport Switch from '../templates/Switch';\r\n\r\nconst LaserCtrl = (props) => {\r\n  const [switchIsOn, setSwitch] = useState(false);\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: 'dark',\r\n      primary: {\r\n        light: '#01bd7d',\r\n        main: '#01bd7d',\r\n        dark: '#01bd7d',\r\n        contrastText: '#fff',\r\n      },\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setSwitch(payload.status.isOn)\r\n      }\r\n    }\r\n    const footer = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    const getFooter = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(true)\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    })\r\n\r\n    socketCtx.socket.emit('getFooter', props.component)\r\n\r\n    socketCtx.socket.on(\"status\", status);\r\n\r\n    socketCtx.socket.on('footer', footer)\r\n\r\n    socketCtx.socket.on('getFooter', getFooter);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n      socketCtx.socket.removeAllListeners('footer', footer)\r\n      socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket])\r\n\r\n\r\n  return (\r\n    <div className=\"switchOnOff\">\r\n      <ThemeProvider theme={theme} >\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n          <Switch component={props.component} led={props.led} icon={document.getElementById(\"icon\")} online={onlineStatus} switchStatus={switchIsOn} start='Off' end='On' option=\"switch\" />\r\n          <GiLaserWarning id=\"icon\" size={100} vertical-align=\"middle\" color=\"grey\" />\r\n        </Box>\r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}\r\nexport default LaserCtrl\r\n","import { IoReloadOutline, IoInformationCircleOutline } from 'react-icons/io5'\r\nimport { CgCloseO } from 'react-icons/cg'\r\nimport styles from '../CSS/Window.module.css'\r\nimport Draggable from 'react-draggable'\r\nimport { memo } from 'react'\r\nimport { isEqual } from 'lodash';\r\n\r\nconst Window = (props) => {\r\n  return (\r\n    <Draggable handle='.draggableHandler'>\r\n      <div\r\n        className={styles.window}\r\n        style={{ top: props.top + 'px', left: props.left + 'px' }}\r\n      >\r\n        <div className={styles.windowHeader}>\r\n          <span\r\n            className='draggableHandler' //FIXME draggable doesnt seem to work with inline JSX classes. \r\n            style={{\r\n              display: 'block',\r\n              width: 'calc(100% - 50px)',\r\n              cursor: 'move',\r\n              float: 'left'\r\n            }}\r\n          >\r\n            {props.header}\r\n          </span>\r\n          <span onClick={props.onReset} > <IoReloadOutline size={20} />        </span>\r\n          <span onClick={props.onClose}><CgCloseO size={20} /></span>\r\n        </div>\r\n        <div\r\n          className={styles.windowContent}\r\n          style={{\r\n            height: props.height,\r\n            width: props.width,\r\n            background: 'url(' + props.background + ')',\r\n          }}\r\n        >\r\n          {props.children}\r\n        </div>\r\n        {props.footer !== undefined && (\r\n          <div className={styles.windowFooter}>\r\n            <span onClick={props.onInfo}> <IoInformationCircleOutline size={25} /></span>\r\n            <label>{props.footer}</label>\r\n          </div>\r\n        )}\r\n        <div className={styles.windowInfo}>\r\n        </div>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n}\r\nexport default memo(Window, isEqual);\r\n","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport LaserCtrl from '../UI/CtrlUnits/LaserCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useState } from 'react';\r\n\r\nconst Laser = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState(props.footer);\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='200px'\r\n      width='300px'\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      newStatus={handleChangeFooter}\r\n      footer={footer}\r\n    >\r\n      <LaserCtrl\r\n        component={props.controlId}\r\n        top='0'\r\n        left='0'\r\n        newStatus={handleChangeFooter}\r\n        led={props.LED}\r\n        footer={footer}\r\n      />\r\n    </Window>\r\n  )\r\n}\r\nexport default Laser;","import Right from '@mui/icons-material/ArrowCircleRightOutlined';\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport Left from '@mui/icons-material/ArrowCircleLeftOutlined';\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst LeftRightCtrl = (props) => {\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleCtrl = (direction, negativ) => (event) => {\r\n        event.preventDefault();\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: negativ ? 15 : -15\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User changed the position on \" + props.component)\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <IconButton onClick={handleCtrl(\"virtualPan\", false)} disabled={(socketCtx.connected && props.online) ? false : true}  >\r\n                <Left />\r\n            </IconButton>\r\n            <IconButton onClick={handleCtrl(\"virtualPan\", true)} disabled={(socketCtx.connected && props.online) ? false : true}  >\r\n                <Right />\r\n            </IconButton>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LeftRightCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { Stack, IconButton } from '@mui/material';\r\nimport Up from '@mui/icons-material/ArrowCircleUpOutlined';\r\nimport Down from '@mui/icons-material/ArrowCircleDownOutlined';\r\n\r\nconst UpDownCtrl = (props) => {\r\n  const socketCtx = useSocketContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCtrl = (direction, negativ) => (event) => {\r\n    event.preventDefault();\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      [props.option]: negativ ? 15 : -15\r\n    })\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: \"Last change by: \" + socketCtx.username,\r\n      controlId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User changed the position on \" + props.component)\r\n  }\r\n\r\n  return (\r\n    <Stack >\r\n      <IconButton onClick={handleCtrl(\"virtualTilt\", true)} disabled={(socketCtx.connected && props.online) ? false : true} >\r\n        <Up />\r\n      </IconButton>\r\n      <IconButton onClick={handleCtrl(\"virtualTilt\", false)} disabled={(socketCtx.connected && props.online) ? false : true}  >\r\n        <Down />\r\n      </IconButton>\r\n    </Stack>\r\n  )\r\n}\r\nexport default UpDownCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { Box, Stack, Typography, Slider } from \"@mui/material\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst SliderCtrl = (props) => {\r\n  const [sliderPos, setSliderPos] = useState(props.sliderValue);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  const marks = [\r\n    { value: parseInt(props.min), label: props.min, },\r\n    { value: 0, label: '0', },\r\n    { value: parseInt(props.max), label: props.max, },\r\n  ]\r\n\r\n  const handleSettingChanges = (event, newValue) => {\r\n    setSliderPos(newValue)\r\n    socketCtx.socket.emit(\"command\", {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      [props.option]: newValue\r\n    })\r\n\r\n    socketCtx.socket.emit(\"footer\", {\r\n      status: \"Last change by: \" + socketCtx.username,\r\n      controlId: props.component\r\n    })\r\n\r\n    appCtx.addLog(\"User set position on \" + props.component + \" to \" + sliderPos)\r\n  }\r\n\r\n  if (props.text) {\r\n    return (\r\n      <Box sx={{ width: 250, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={props.text}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  } else {\r\n    return (\r\n      <Box sx={{ width: 250, m: 2 }}>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n          <Slider aria-label=\"Temperature\"\r\n            id=\"brightnessSlider\"\r\n\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            min={props.min}\r\n            max={props.max}\r\n            value={props.sliderValue}\r\n            onChangeCommitted={handleSettingChanges}\r\n            marks={marks}\r\n            disabled={(socketCtx.connected && props.online) ? false : true}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\nexport default SliderCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { MenuItem, Select } from '@mui/material';\r\nimport { useState } from \"react\";\r\n\r\nconst SelectItem = (props) => {\r\n    const [selectValue, setSelectValue] = useState('');\r\n    const socketCtx = useSocketContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const handleSettingChanges = (event, newValue) => {\r\n        setSelectValue(newValue.props.value);\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            [props.option]: newValue.props.value\r\n        })\r\n\r\n        socketCtx.socket.emit(\"footer\", {\r\n            status: \"Last change by: \" + socketCtx.username,\r\n            controlId: props.component\r\n        })\r\n\r\n        appCtx.addLog(\"User set selected \" + props.component + \" with \" + selectValue)\r\n    }\r\n    if (props.title === 'Resolution') {\r\n        return (\r\n            <Select\r\n                value={selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={13}>UXGA (1600x1200)</MenuItem>\r\n                <MenuItem value={12}>SXGA (1280x1024)</MenuItem>\r\n                <MenuItem value={10}>XGA (1024x768)</MenuItem>\r\n                <MenuItem value={9}>SVGA (800x600)</MenuItem>\r\n                <MenuItem value={8}>VGA (640x480)</MenuItem>\r\n                <MenuItem value={6}>CIF (400x296)</MenuItem>\r\n                <MenuItem value={5}>QVGA (320x240)</MenuItem>\r\n            </Select>\r\n        )\r\n    }\r\n    else if (props.title === 'Average time (ms)') {\r\n        return (\r\n            <Select\r\n                value={selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={100}>100</MenuItem>\r\n                <MenuItem value={500}>500</MenuItem>\r\n                <MenuItem value={1000}>1000</MenuItem>\r\n                <MenuItem value={2000}>2000</MenuItem>\r\n\r\n            </Select>\r\n        )\r\n    } else if (props.title === 'Update time (s)') {\r\n        return (\r\n            <Select\r\n                value={selectValue}\r\n                label={props.title}\r\n                onChange={handleSettingChanges}\r\n                disabled={(socketCtx.connected && props.online) ? false : true}\r\n            >\r\n                <MenuItem value={1000}>1</MenuItem>\r\n                <MenuItem value={5000}>5</MenuItem>\r\n                <MenuItem value={10000}>10</MenuItem>\r\n            </Select>\r\n        )\r\n    } else {\r\n        return (<div></div>)\r\n    }\r\n}\r\nexport default SelectItem;","\r\nimport { FormControl, InputLabel, Box } from '@mui/material';\r\nimport SelectItem from './SelectItem'\r\n\r\nconst SelectCtrl = (props) => {\r\n    return (\r\n        <Box sx={{ m: 2, width: 250 }}>\r\n            <FormControl fullWidth>\r\n                <InputLabel >{props.title}</InputLabel>\r\n                <SelectItem title={props.title} component={props.component} online={props.online} command={props.command} option={props.option} />\r\n            </FormControl>\r\n        </Box>\r\n    )\r\n}\r\nexport default SelectCtrl;","import { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport LeftRightCtrl from \"../templates/LeftRightCtrl\";\r\nimport styles from \"../CSS/Settings.module.css\"\r\nimport UpDownCtrl from \"../templates/UpDownCtrl\"\r\nimport Slider from \"../templates/SliderCtrl\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Switch from \"../templates/Switch\"\r\nimport Select from \"../templates/Select\";\r\nimport Box from '@mui/material/Box';\r\n\r\nconst Settings = (props) => {\r\n    const [switchIsOn, setSwitchStatus] = useState(false);\r\n    const [contrast, setContrast] = useState(0);\r\n    const [exposure, setExposure] = useState(0);\r\n   // const [brightness, setBrightness] = useState(0);\r\n    const [onlineStatus, setOnlineStatus] = useState(true);\r\n    const socketCtx = useSocketContext();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#01bd7d',\r\n            },\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setSwitchStatus(payload.status.gray)\r\n                setExposure(payload.status.brightness)\r\n                setContrast(payload.status.contrast)\r\n                console.log(\"Status of settings:   \", payload)\r\n            }\r\n        }\r\n\r\n        const footer = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        const getFooter = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(true)\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit(\"command\", {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on(\"status\", status);\r\n\r\n        socketCtx.socket.on('footer', footer)\r\n\r\n        socketCtx.socket.on('getFooter', getFooter);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('footer', footer)\r\n            socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <div className={styles.UpDown}>\r\n                <UpDownCtrl component={props.component} online={onlineStatus} option='virtualTilt' />\r\n            </div>\r\n            <div className={styles.LeftRight}>\r\n                <LeftRightCtrl component={props.component} online={onlineStatus} option='virtualPan' />\r\n            </div>\r\n            <Box sx={{ m: 2, width: 250 }} > <h1>Settings</h1> </Box>\r\n            <Select title=\"Resolution\" component={props.component} online={onlineStatus} option=\"frameSize\" />\r\n            <Switch component={props.component} switchStatus={switchIsOn} online={onlineStatus} start='Color' end='Gray' option=\"gray\" />\r\n            <Slider title=\"Contrast\" component={props.component} online={onlineStatus} sliderValue={contrast} min={-2} max={2} option=\"contrast\" />\r\n            <Slider title=\"Exposure\" component={props.component} online={onlineStatus} sliderValue={exposure} min={0} max={500} option=\"exposure\" />\r\n            {/* <Slider title=\"Brightness\" component={props.component} online={onlineStatus} sliderValue={brightness} min={-2} max={2} option=\"brightness\" /> */}\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default Settings\r\n","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport Settings from '../UI/CtrlUnits/Settings';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useEffect, useState } from 'react';\r\nimport styles from './Stream.module.css';\r\n\r\nconst ESPCamStream = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState(props.footer);\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.controlId);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = (payload) => {\r\n      var uint8Arr = new Uint8Array(payload.data);\r\n      var binary = '';\r\n      for (var i = 0; i < uint8Arr.length; i++) {\r\n        binary += String.fromCharCode(uint8Arr[i]);\r\n      }\r\n      var base64String = window.btoa(binary);\r\n\r\n      var img = new Image();\r\n      img.onload = function () {\r\n        var canvas = document.getElementById('ScreenCanvas');\r\n        if (canvas != null) {\r\n          var ctx = canvas.getContext('2d');\r\n          var x1 = 0,\r\n            y1 = 0,\r\n            x2 = 300,\r\n            y2 = 200;\r\n          ctx.drawImage(this, x1, y1, x2, y2);\r\n        }\r\n      };\r\n      img.src = 'data:image/jpg;base64,' + base64String;\r\n    }\r\n\r\n    socketCtx.socket.on('data', data);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('data', data)\r\n    }\r\n  }, [socketCtx.socket]);\r\n\r\n  useEffect(() => {\r\n    socketCtx.socket.emit('join stream room', { controlId: props.controlId, userId: socketCtx.username });\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='1000px'\r\n      height='430px'\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      footer={footer}\r\n      newStatus={handleChangeFooter}\r\n    >\r\n      <div className={styles.Canvas}>\r\n        <canvas id='ScreenCanvas' />\r\n      </div>\r\n      <div className={styles.Settings}>\r\n        <Settings\r\n          component={props.controlId}\r\n          led={props.LED}\r\n          footer={footer}\r\n          newStatus={handleChangeFooter} />\r\n      </div>\r\n    </Window>\r\n  );\r\n};\r\nexport default ESPCamStream;\r\n","export default __webpack_public_path__ + \"static/media/km100_outline.5cffd463.png\";","import { MdOutlineRotateRight, MdOutlineRotateLeft } from 'react-icons/md';\r\nimport { useSocketContext } from '../../../services/SocketContext'\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport styles from '../CSS/RotaryCtrl.module.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst RotaryCtrl = (props) => {\r\n  const [enteredRotation, setEnteredRotation] = useState(0);\r\n  const [onlineStatus, setOnlineStatus] = useState(false);\r\n  const [rotation, setRotation] = useState(0);\r\n  var direction;\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n\r\n  useEffect(() => {\r\n    const status = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setRotation(payload.status.absolute);\r\n        (payload.status.busy) ? setOnlineStatus(false) : setOnlineStatus(true);\r\n      }\r\n    }\r\n\r\n    const footer = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    const getFooter = (payload) => {\r\n      if (payload.controlId === props.component) {\r\n        setOnlineStatus(payload.online)\r\n        props.newStatus(String(payload.status))\r\n      }\r\n    }\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.component,\r\n      getStatus: true\r\n    });\r\n\r\n    socketCtx.socket.emit('getFooter', props.component);\r\n\r\n    socketCtx.socket.on('getFooter', getFooter);\r\n\r\n    socketCtx.socket.on('footer', footer);\r\n\r\n    socketCtx.socket.on('status', status);\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('status', status)\r\n      socketCtx.socket.removeAllListeners('footer', footer)\r\n      socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  const rotCW_Handler = name => (event) => {\r\n    event.preventDefault();\r\n    direction = 0;\r\n\r\n    (name === 'left') ? direction = -1 * Number(enteredRotation) : direction = Number(enteredRotation);\r\n\r\n    if (direction !== 0) {\r\n      socketCtx.socket.emit('command', {\r\n        userId: socketCtx.username,\r\n        color: socketCtx.fontColor,\r\n        controlId: props.control,\r\n        move: direction\r\n      });\r\n\r\n      socketCtx.socket.emit('footer', {\r\n        status: 'Last change by: ' + socketCtx.username,\r\n        controlId: props.component\r\n      });\r\n    }\r\n    appCtx.addLog('User initiated CW rotation on ' + props.component + ' by ' + enteredRotation + ' steps.');\r\n  };\r\n\r\n  const changeRotationHandler = (event) => {\r\n    setEnteredRotation(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={styles.rotaryCtrl} style={{ top: props.top + 'px', left: props.left + 'px' }}>\r\n      <div className={styles.rotaryCtrl}>\r\n        <span>{Number(rotation)}</span>\r\n        <input\r\n          type='number'\r\n          min='0'\r\n          max='100'\r\n          value={enteredRotation}\r\n          onChange={changeRotationHandler}\r\n        />\r\n      </div>\r\n      <button onClick={rotCW_Handler('left')} className={styles.CtrlLeft} disabled={(socketCtx.connected && onlineStatus) ? false : true}  >\r\n        <MdOutlineRotateLeft size={28} />\r\n      </button>\r\n      <button onClick={rotCW_Handler('right')} className={styles.CtrlRight} disabled={(socketCtx.connected && onlineStatus) ? false : true}>\r\n        <MdOutlineRotateRight size={28} />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default RotaryCtrl;","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport KM100_Background from './media/km100_outline.png'\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useState } from 'react';\r\n\r\nconst KM100 = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState(props.footer);\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n\r\n  //wie handhaben wir das?\r\n  const handleReset = () => {\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlIdBottom,\r\n      reset: true\r\n    })\r\n\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlIdTop,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      footer={footer}\r\n      top={props.top}\r\n      left={props.left}\r\n      height='240px'\r\n      width='250px'\r\n      background={KM100_Background}\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlIdTop}\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n        top='20'\r\n        left='160'\r\n      />\r\n      <RotaryCtrl\r\n        rotation={props.rotationBottom}\r\n        component={props.controlIdBottom}\r\n        newStatus={handleChangeFooter}\r\n        led={props.LED}\r\n        footer={footer}\r\n        top='50'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\nexport default KM100;","export default __webpack_public_path__ + \"static/media/linear_outline.7ac97702.png\";","import { useSocketContext } from '../../services/SocketContext';\r\nimport { usePopUpContext } from '../../services/PopUpContext';\r\nimport { useAppContext } from '../../services/AppContext';\r\nimport RotaryCtrl from '../UI/CtrlUnits/RotaryCtrl';\r\nimport SM1ZP_bg from './media/linear_outline.png';\r\nimport Window from '../UI/experimentUI/Window';\r\nimport { useState } from 'react';\r\n\r\nconst SM1ZP = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [alertType, setAlertType] = useState('info');\r\n  const [footer, setFooter] = useState(props.footer);\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.controlId)\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n    setFooter(newFooter);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      top={props.top}\r\n      left={props.left}\r\n      width='250px'\r\n      height='235px'\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n      background={SM1ZP_bg}\r\n      newStatus={handleChangeFooter}\r\n      footer={footer}\r\n    >\r\n      <RotaryCtrl\r\n        rotation={props.rotation}\r\n        component={props.controlId}\r\n        newStatus={handleChangeFooter}\r\n        footer={footer}\r\n        control='linear'\r\n        top='35'\r\n        left='160'\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default SM1ZP;\r\n","import { useSocketContext } from '../../../services/SocketContext';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useState, useEffect } from 'react';\r\nimport Switch from '../templates/Switch';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst BeamSplitterCtrl = (props) => {\r\n    const [switchIsOn, setSwitchStatus] = useState(false);\r\n    const [onlineStatus, setOnlineStatus] = useState(true);\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n            primary: {\r\n                light: '#01bd7d',\r\n                main: '#01bd7d',\r\n                dark: '#01bd7d',\r\n                contrastText: '#01bd7d',\r\n            },\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        const status = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setSwitchStatus(payload.status)\r\n            }\r\n        }\r\n\r\n        const footer = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        const getFooter = (payload) => {\r\n            if (payload.controlId === props.component) {\r\n                setOnlineStatus(!payload.online)\r\n                props.newStatus(String(payload.status))\r\n            }\r\n        }\r\n\r\n        socketCtx.socket.emit('command', {\r\n            userId: socketCtx.username,\r\n            controlId: props.component,\r\n            getStatus: true\r\n        })\r\n\r\n        socketCtx.socket.emit('getFooter', props.component)\r\n\r\n        socketCtx.socket.on('status', status)\r\n\r\n        socketCtx.socket.on('footer', footer)\r\n\r\n        socketCtx.socket.on('getFooter', getFooter);\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('status', status)\r\n            socketCtx.socket.removeAllListeners('footer', footer)\r\n            socketCtx.socket.removeAllListeners('getFooter', getFooter)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [socketCtx.socket]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box sx={{ mx: 1 }}>\r\n                <Switch component={props.component} led={props.led} switchStatus={switchIsOn} online={onlineStatus} start='Off' end='On' option='binaryCtrl' />\r\n            </Box>\r\n        </ThemeProvider>\r\n    )\r\n}\r\nexport default BeamSplitterCtrl\r\n","import BeamSplitterCtrl from \"../UI/CtrlUnits/BeamSplitterCtrl\";\r\nimport { useSocketContext } from \"../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport { useState } from \"react\";\r\n\r\nconst BeamSplitter = (props) => {\r\n  const [lastChange, setLastChange] = useState(['', '', '']);\r\n  const [footer, setFooter] = useState(props.footer);\r\n  const [alertType, setAlertType] = useState('info');\r\n  var [alert, setAlert] = useState(false);\r\n\r\n  const appCtx = useAppContext();\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n\r\n  const handleCloseWindow = () => {\r\n    appCtx.toggleSelectedComp(props.id)\r\n  }\r\n\r\n  const handleReset = () => {\r\n    socketCtx.socket.emit('command', {\r\n      userId: socketCtx.username,\r\n      controlId: props.controlId,\r\n      reset: true\r\n    })\r\n  }\r\n\r\n  const handleInfo = () => {\r\n    var timeNow = new Date();\r\n    let difH, difMin, difSec = 0;\r\n    alert = '';\r\n\r\n    timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n    if (lastChange[0] === '') {\r\n      alert = 'No last change detected!'\r\n    } else if (timeNow[0] > lastChange[0]) {\r\n      difH = timeNow[0] - lastChange[0];\r\n      alert = 'Last change is more than ' + difH + ' h ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n      difSec = timeNow[2] - lastChange[2]\r\n      alert = 'Last change is ' + difSec + ' s ago!'\r\n    } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n      difMin = timeNow[1] - lastChange[1]\r\n      alert = 'Last change is more than ' + difMin + ' min ago!'\r\n    } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n      alert = 'Last change is more than 24 h ago!'\r\n    } else {\r\n      alert = 'No last change detected!'\r\n    }\r\n\r\n    setAlert(alert);\r\n    setAlertType('info');\r\n    popupCtx.toggleShowPopUp(alert, alertType);\r\n  }\r\n\r\n  const handleChangeFooter = (newFooter) => {\r\n    var time = new Date();\r\n    setFooter(newFooter);\r\n    setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n  };\r\n\r\n  return (\r\n    <Window\r\n      header={props.title}\r\n      footer={footer}\r\n      top={props.top}\r\n      left={props.left}\r\n      height=\"140px\"\r\n      width=\"320px\"\r\n      onClose={handleCloseWindow}\r\n      onReset={handleReset}\r\n      onInfo={handleInfo}\r\n\r\n    >\r\n      <BeamSplitterCtrl\r\n        rotation={props.rotationTop}\r\n        component={props.controlId}\r\n        newStatus={handleChangeFooter}\r\n        led={props.LED}\r\n        footer={footer}\r\n        top=\"20\"\r\n        left=\"160\"\r\n      />\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default BeamSplitter;","import LaserCtrl from \"../../assembly/Laser\";\r\nimport ESPCam from \"../../assembly/ESPCamStream\";\r\nimport KM100 from \"../../assembly/KM100\";\r\nimport SM1ZP from \"../../assembly/SM1ZP\";\r\nimport BeamSplitter from \"../../assembly/BeamSplitter\"\r\n\r\nconst MichelsonInterferometer = (props) => {\r\n  let footer = \"Initializing...\"\r\n  var zero = \"0\"\r\n\r\n  var height = window.innerHeight;\r\n  var width = window.innerWidth;\r\n  var halfWidth = width / 2;\r\n  var topHigh = String(height - (height / 3 * 2.7))\r\n  var topHighMiddle = String(height - (height / 1.4))\r\n  var topMiddle = String(height - (height / 2.15))\r\n  var leftLeft = String(width - (halfWidth * 1.9))\r\n  var leftMiddle = String(width - (halfWidth * 1.8))\r\n  var leftRight = String(width - (halfWidth * 0.47))\r\n  var leftMiddleRight = String(width - (halfWidth * 0.4))\r\n  var leftCam = String(width - (halfWidth * 1.485))\r\n\r\n  return (\r\n    <div>\r\n      {/* KM100 */}\r\n      {props.selected.has('KM100_1') && (\r\n        <KM100\r\n          title=\"Mirror\"\r\n          id={'KM100_1'}\r\n          controlIdTop={'KM100_top_1'}\r\n          controlIdBottom={'KM100_bottom_1'}\r\n          LED={'led_KM100'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftLeft}\r\n        />\r\n      )}\r\n      {/* Linear stage */}\r\n      {props.selected.has('linear_1') && (\r\n        <SM1ZP\r\n          title=\"Mirror Stage\"\r\n          controlId={'linear_1'}\r\n          LED={'led_linear'}\r\n          footer={footer}\r\n          rotation={zero}\r\n          top={topMiddle}\r\n          left={leftMiddle}\r\n        />\r\n      )}\r\n      {/* Laser ctrl */}\r\n      {props.selected.has('greenlaser_1') && (\r\n        <KM100\r\n          title=\"Laser\"\r\n          id={'greenlaser_1'}\r\n          controlIdTop={'greenlaser_top_1'}\r\n          controlIdBottom={'greenlaser_bottom_1'}\r\n          LED={'led_laser'}\r\n          rotationTop={zero}\r\n          rotationBottom={zero}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={leftMiddleRight}\r\n        />\r\n      )}\r\n      {/* Laser power */}\r\n      {props.selected.has('greenlaserPower_1') && (\r\n        <LaserCtrl\r\n          title=\"Power Supply\"\r\n          id={'greenlaserPower_1'}\r\n          controlId={'greenlaser_1'}\r\n          LED={'led_linear'}\r\n          footer={footer}\r\n          top={topHigh}\r\n          left={leftRight}\r\n        />\r\n      )}\r\n      {/* Cam1 */}\r\n      {props.selected.has('screen') && (\r\n        <ESPCam\r\n          title=\"Screen\"\r\n          controlId={'screen'}\r\n          LED={'led_screen'}\r\n          footer={footer}\r\n          top={topHighMiddle}\r\n          left={leftCam}\r\n        />\r\n      )}\r\n\r\n      {/* Beam splitter */}\r\n      {props.selected.has('beamSplitter') && (\r\n        <BeamSplitter\r\n          title=\"Beam splitter\"\r\n          controlId={'beamSplitter'}\r\n          LED={'led_beamSplitter'}\r\n          footer={footer}\r\n          top={topMiddle}\r\n          left={halfWidth}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default MichelsonInterferometer;","export default __webpack_public_path__ + \"static/media/xrtl_team.519a843e.png\";","import styles from \"./InfoWindowContent.module.css\"\r\nimport bgTeam from \"../media/images/xrtl_team.png\"\r\n\r\nconst InfoWindowContent = (props) => {\r\n  return (\r\n    <div className={styles.mainWrapper}\r\n      style={{ backgroundImage: \"url(\\\"\" + bgTeam + \"\\\")\" }}\r\n    >\r\n      Remote labs are a trendsetting way of teaching, communicating, and experiencing science as well as enabling collaborative work. Unfortunately, the implementation of remote access involves a cost-intensive development or at least requires a certain technical skillset. To establish remote labs across disciplines, especially outside the field of IT and engineering, the technical access threshold must be low enough to support a self-contained implementation by researchers, assistants, and technical staff. Hereby, we are developing the open-source toolbox XR Twin Lab for the research field of Photonics. XR Twin Lab (XRTL) provides a modular way of building a web-based application to control optical experimental setups with the integration of VR and AR endpoints.\r\n      <p>\r\n        This Project is currently developed within the DAAD-funded project \"digiPhoton\" and BMBF-funded project \"Lichtwerkstatt\" at the Abbe School of Photonics / Institute of Applied Physics / Friedrich Schiller University in Jena. Feel free to follow our <a href=\"https://github.com/Lichtwerkstatt/XRTL_SPA\">Git Repo</a> or <a href=\"mailto:team@lichtwerkstatt-jena.de\">Contact us.</a>\r\n      </p>\r\n      <p>\r\n        Best! Clara, Falko, Jari and Johannes\r\n      </p>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default InfoWindowContent;","import { useAppContext } from \"../../services/AppContext\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport InfoWindowContent from \"./InfoWindowContent\";\r\n\r\nconst InfoWindow = (props) => {\r\n    const appCtx = useAppContext();\r\n\r\n    const handleCloseWindow = () => {\r\n        appCtx.toggleShowInfoWindow();\r\n    };\r\n\r\n    return (\r\n        <Window\r\n            header=\"About XR TwinLab\"\r\n            top=\"250\"\r\n            left=\"200\"\r\n\r\n            width=\"600px\"\r\n            onClose={handleCloseWindow}\r\n        >\r\n            <InfoWindowContent />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;","import { useSocketContext } from '../../services/SocketContext'\r\nimport { useEffect } from 'react';\r\n\r\nconst ViewCam = (props) => {\r\n    const socketCtx = useSocketContext();\r\n\r\n    useEffect(() => {\r\n        var peerConnection;\r\n        \r\n        const offer = (payload) => {\r\n            peerConnection = props.peer;\r\n            peerConnection\r\n            .setRemoteDescription(payload.data)\r\n            .then(() => peerConnection.createAnswer())\r\n            .then((sdp) => peerConnection.setLocalDescription(sdp))\r\n            .then(() => socketCtx.socket.emit('answer', { id: payload.id, data: peerConnection.localDescription }))\r\n            \r\n            peerConnection.ontrack = (event) => {\r\n                document.getElementById('video').srcObject = event.streams[0];\r\n            }\r\n            \r\n            peerConnection.onicecandidate = (event) => {\r\n                if (event.candidate) {\r\n                    socketCtx.socket.emit('candidate', { id: payload.id, data: event.candidate })\r\n                }\r\n            }\r\n        }\r\n        \r\n        const candidate = (payload) => {\r\n            peerConnection\r\n                .addIceCandidate(new RTCIceCandidate(payload.data))\r\n                .catch(e => console.error(e))\r\n        }\r\n\r\n        document.getElementById('video').setAttribute('style', 'transform: rotate(180deg)')\r\n\r\n        socketCtx.socket.emit('viewer', props.component)\r\n\r\n        socketCtx.socket.on('offer', offer)\r\n\r\n        socketCtx.socket.on('candidate', candidate)\r\n\r\n        return () => {\r\n            socketCtx.socket.removeAllListeners('offer', offer)\r\n            socketCtx.socket.removeAllListeners('candidate', candidate)\r\n        }\r\n        //Comment needed to prevent a warning\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <video className=\"video\" id='video' autoPlay playsInline width=\"640px\" height=\"480px\" ></video>\r\n        </div>\r\n    );\r\n};\r\nexport default ViewCam;\r\n","import { useSocketContext } from \"../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../services/AppContext\";\r\nimport Window from \"../UI/experimentUI/Window\";\r\nimport ViewCam from \"../Chat/ViewCamStream\";\r\nimport { useState } from \"react\";\r\n\r\nconst InfoWindow = (props) => {\r\n    const [lastChange, setLastChange] = useState(['', '', '']);\r\n    const [alertType, setAlertType] = useState('info');\r\n    const [footer, setFooter] = useState(props.footer);\r\n    var [alert, setAlert] = useState(false);\r\n\r\n    const socketCtx = useSocketContext();\r\n    const popupCtx = usePopUpContext();\r\n    const appCtx = useAppContext();\r\n\r\n    const config = { iceServers: [{ urls: [\"stun:stun.l.google.com:19302\"] }] } //stun:stun.stunprotocol.org\r\n    var peerConnection = new RTCPeerConnection(config);\r\n\r\n    const handleCloseWindow = () => {\r\n        //appCtx.toggleSelectedComp(props.id);\r\n        appCtx.toggleCam();\r\n        peerConnection.close();\r\n        socketCtx.socket.emit('watcher disconnect')\r\n    };\r\n    const handleChangeFooter = (newFooter) => {\r\n        var time = new Date();\r\n        setLastChange([time.getHours(), time.getMinutes(), time.getSeconds(), time.getDay(), time.getMonth()])\r\n        setFooter(newFooter);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        peerConnection.close();\r\n    }\r\n\r\n    const handleInfo = () => {\r\n        var timeNow = new Date();\r\n        let difH, difMin, difSec = 0;\r\n        alert = '';\r\n\r\n        timeNow = [timeNow.getHours(), timeNow.getMinutes(), timeNow.getSeconds(), timeNow.getDay(), timeNow.getMonth()]\r\n        if (lastChange[0] === '') {\r\n            alert = 'No last change detected!'\r\n        } else if (timeNow[0] > lastChange[0]) {\r\n            difH = timeNow[0] - lastChange[0];\r\n            alert = 'Last change is more than ' + difH + ' h ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] === lastChange[1] && timeNow[2] > lastChange[2]) {\r\n            difSec = timeNow[2] - lastChange[2]\r\n            alert = 'Last change is ' + difSec + ' s ago!'\r\n        } else if (timeNow[0] === lastChange[0] && timeNow[1] > lastChange[1]) {\r\n            difMin = timeNow[1] - lastChange[1]\r\n            alert = 'Last change is more than ' + difMin + ' min ago!'\r\n        } else if (timeNow[3] > lastChange[3] || timeNow[4] > lastChange[4]) {\r\n            alert = 'Last change is more than 24 h ago!'\r\n        } else {\r\n            alert = 'No last change detected!'\r\n        }\r\n\r\n        setAlert(alert);\r\n        setAlertType('info');\r\n        popupCtx.toggleShowPopUp(alert, alertType);\r\n    }\r\n\r\n    return (\r\n        <Window\r\n            header=\"Cam_1\"\r\n            top=\"200\"\r\n            left=\"250\"\r\n            title=\"Cam_1\"\r\n            id=\"Cam_1\"\r\n            footer={footer}\r\n            width=\"600px\"\r\n            onClose={handleCloseWindow}\r\n            onReset={handleReset}\r\n            onInfo={handleInfo}\r\n            newStatus={handleChangeFooter}\r\n        >\r\n            <ViewCam\r\n                title=\"Cam_1\"\r\n                component=\"Cam_1\"\r\n                peer ={peerConnection}\r\n                footer={footer}\r\n                newStatus={handleChangeFooter}\r\n            />\r\n        </Window>\r\n    );\r\n};\r\nexport default InfoWindow;","import MichelsonInterferometer from \"../../experiment/MichelsonInterferometer/MichelsonInterferometer\";\r\nimport { useSocketContext } from \"../../../services/SocketContext\";\r\nimport { usePopUpContext } from \"../../../services/PopUpContext\";\r\nimport { useAppContext } from \"../../../services/AppContext\";\r\nimport { useEffect, useState, Fragment } from \"react\";\r\nimport InfoWindow from \"../../windows/InfoWindow\";\r\nimport CamWindow from \"../../windows/CamWindow\";\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from \"react\"\r\n\r\nconst ExperimentUILayer = () => {\r\n  var [connection, setConnection] = useState(false);\r\n  const socketCtx = useSocketContext();\r\n  const popupCtx = usePopUpContext();\r\n  const appCtx = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const auth = (color) => {\r\n      popupCtx.toggleShowPopUp('Connection successful!', 'success');\r\n      socketCtx.setNewFont(color);\r\n      setConnection(true);\r\n    }\r\n    socketCtx.socket.on('AuthFailed', () => {\r\n      popupCtx.toggleShowPopUp('To many user are connected right now!', 'warning');\r\n    })\r\n\r\n    socketCtx.socket.on('Auth', auth);\r\n\r\n    if (!connection) {\r\n      popupCtx.toggleShowPopUp('No server connection!', 'error');\r\n      setConnection('');\r\n    }\r\n\r\n    return () => {\r\n      socketCtx.socket.removeAllListeners('Auth', auth)\r\n    }\r\n    //Comment needed to prevent a warning\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [socketCtx.socket]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {appCtx.showInfoWindow && <InfoWindow />}\r\n      {appCtx.showCam && <CamWindow />}\r\n      <MichelsonInterferometer\r\n        toggleSelect={appCtx.toggleSelectedComp}\r\n        selected={appCtx.selectedComps}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default memo(ExperimentUILayer, isEqual);","import { Html } from '@react-three/drei';\r\nimport { isEqual } from 'lodash';\r\nimport { memo } from 'react'\r\n\r\nconst DescriptiveTag = (props) => {\r\n  const wrapperStyle = {\r\n    color: 'white',\r\n    width: '200px',\r\n    height: '30px',\r\n  };\r\n  return <Html position={props.position} style={wrapperStyle} zIndexRange={[0, 10]} >\r\n\r\n    <div\r\n      style={{\r\n        height: '150px',\r\n        width: '0px',\r\n        borderLeft: '2px solid white',\r\n        float: 'left',\r\n      }}\r\n    ></div>\r\n\r\n    <div style={{ 'marginLeft': '12px' }}>\r\n      <span>\r\n        <b>{props.title}</b>\r\n      </span>\r\n      <br />\r\n      {props.description}\r\n      <br />\r\n      {props.status}\r\n    </div>\r\n  </Html>\r\n\r\n};\r\n\r\nexport default memo(DescriptiveTag, isEqual);\r\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, memo } from \"react\";\r\nimport { useGLTF, Box, Cylinder } from \"@react-three/drei\";\r\nimport DescriptiveTag from \"../../UI/experimentUI/DescriptiveTag\";\r\nimport { isEqual } from 'lodash';\r\n\r\nfunction Model({ ...props }) {\r\n  const group = useRef();\r\n  const { nodes, materials } = useGLTF(\"/model/MI_110422.glb\");\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group name=\"Scene\">\r\n        <group name=\"Optical elements\">\r\n          {/* BeamSplitter and Lens*/}\r\n          <Box\r\n            position={[-0.55, 0.66, -0.1]}\r\n            args={[1, 1, 1]}\r\n            scale={[0.25, 0.25, 0.25]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Box>\r\n          <Cylinder\r\n            position={[0.7, 0.67, -0.13]}\r\n            args={[1, 1, 1]}\r\n            rotation={[0, 0, Math.PI / 2]}\r\n            scale={[0.14, 0.05, 0.14]}\r\n          >\r\n            <meshPhysicalMaterial\r\n              thickness={1}\r\n              roughness={0.1}\r\n              transmission={1}\r\n              clearcoat={0.5}\r\n              clearcoatRoughness={0}\r\n              ior={1.1}\r\n              envMapIntensity={25}\r\n              color={\"#ffffff\"}\r\n              attenuationColor={\"#00ffff\"}\r\n              attenuationDistance={5}\r\n            />\r\n          </Cylinder>\r\n        </group>\r\n        <group\r\n          name=\"Mirror1\"\r\n          position={[-0.53, 0.67, 0.94]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"KM100_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Reference Mirror\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"SideMirrorMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"KM100_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"SideMirrorMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n          <mesh\r\n            name=\"SideMirrorMesh_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.SideMirrorMesh_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"TranslateMirror\"\r\n          position={[-1.71, 0.67, -0.12]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"linear_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Transtlate Mirror\" description=\"Linear Stage\" />}\r\n          <mesh\r\n            name=\"TranslateMirrorMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"linear_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"TranslateMirrorMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n          <mesh\r\n            name=\"TranslateMirrorMesh_2\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.TranslateMirrorMesh_2.geometry}\r\n            material={materials.Mirror}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"Schirm\"\r\n          position={[-0.37, 0.86, -1.22]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"screen\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.5, 0]} title=\"Screen\" description=\"Screen with Interference Pattern\" />}\r\n          <mesh\r\n            name=\"PlaneMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh.geometry}\r\n          >\r\n            {props.selected.has(\"screen\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#eeeeee\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"PlaneMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.PlaneMesh_1.geometry}\r\n            material={materials.BlackParts}\r\n          />\r\n        </group>\r\n        <group name=\"Base\">\r\n          {props.showTags && <DescriptiveTag position={[-0.5, 2, -0.1]} title=\"Beam Splitter\" description=\"50/50 Beam Splitter\" />}\r\n          {props.showTags && <DescriptiveTag position={[0.6, 2, -0.1]} title=\"Lens\" description=\"Lens for Beam Widening\" />}\r\n          <mesh\r\n            name=\"BaseMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.BaseMesh.geometry}\r\n            material={materials.BlackParts}\r\n          />\r\n          <mesh\r\n            name=\"BaseMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.BaseMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        <group\r\n          name=\"Laser\"\r\n          position={[1.56, 0.67, 0.14]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaser_1\");\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.2, -0.2]} title=\"Laser Alignment\" description=\"KM100 Double Rotary Control\" />}\r\n          <mesh\r\n            name=\"LaserMesh\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh.geometry}\r\n            material={materials.BlackParts}\r\n          >\r\n            {props.selected.has(\"greenlaser_1\") ? (\r\n              <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n            ) : (\r\n              <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n            )}\r\n          </mesh>\r\n          <mesh\r\n            name=\"LaserMesh_1\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserMesh_1.geometry}\r\n            material={materials.ShinyParts}\r\n          />\r\n        </group>\r\n        <mesh\r\n          name=\"SD5\"\r\n          castShadow\r\n          receiveShadow\r\n          geometry={nodes.SD5.geometry}\r\n          material={materials.BlackParts}\r\n          position={[1.61, 0.25, -0.9]}\r\n          onPointerDown={(e) => {\r\n            e.stopPropagation();\r\n            props.toggleSelect(\"greenlaserPower_1\")\r\n          }}\r\n        >\r\n          {props.showTags && <DescriptiveTag position={[0, 1.3, 0]} title=\"Power Supply\" description=\"5V Laser Power Supply\" />}\r\n          {props.selected.has(\"greenlaserPower_1\") ? (\r\n            <meshStandardMaterial color=\"#00ff00\" transparent opacity={0.7} />\r\n          ) : (\r\n            <meshBasicMaterial color=\"#222222\" opacity={1.0} />\r\n          )}\r\n        </mesh>\r\n        {props.showBeam &&\r\n          <mesh\r\n            name=\"LaserBeam\"\r\n            castShadow\r\n            receiveShadow\r\n            geometry={nodes.LaserBeam.geometry}\r\n            material={materials.Laser}\r\n            position={[-0.3, 0.66, -0.15]}\r\n          />}\r\n      </group>\r\n      <group\r\n        name=\"Beam splitter\"\r\n        position={[3.56, 0.47, 0.14]}\r\n        onPointerDown={(e) => {\r\n          e.stopPropagation();\r\n          props.toggleSelect(\"beamSplitter\");\r\n        }} >\r\n        <Box\r\n          position={[-3.3, 0.1, -0.3]}\r\n          args={[1, 1, 1]}\r\n          scale={[0.25, 0.25, 0.25]}\r\n        >\r\n          <meshPhysicalMaterial\r\n            thickness={1}\r\n            roughness={0.1}\r\n            transmission={1}\r\n            clearcoat={0.5}\r\n            clearcoatRoughness={0}\r\n            ior={1.1}\r\n            envMapIntensity={25}\r\n            color={\"#ffffff\"}\r\n            attenuationColor={\"#00ffff\"}\r\n            attenuationDistance={5}\r\n          />\r\n        </Box>\r\n      </group>\r\n    </group>\r\n  );\r\n}\r\n\r\nuseGLTF.preload(\"/model/MI_110422.glb\");\r\nexport default memo(Model, isEqual);\r\n","import MI_110422 from '../../experiment/MichelsonInterferometer/MI_110422';\r\nimport { OrbitControls, Environment } from '@react-three/drei';\r\nimport { useAppContext } from '../../../services/AppContext';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport { Suspense } from 'react';\r\n\r\nconst VirtualLayer = () => {\r\n  const appCtx = useAppContext();\r\n\r\n  if (appCtx.showVirtualLayer) {\r\n    return (\r\n      <Canvas\r\n        style={{\r\n          position: 'absolute',\r\n          background: 'linear-gradient(Teal, Black)',\r\n          width: '100%',\r\n          height: '100%',\r\n        }}\r\n        colorManagement\r\n        softShadows\r\n        camera={{ position: [0, 3, 5], fov: 40 }}\r\n      >\r\n        <Suspense fallback={null}>\r\n          <Environment files='../hdri/autoshop.hdr' />\r\n          <OrbitControls autoRotate={appCtx.autoRotate} />\r\n          <MI_110422\r\n            toggleSelect={appCtx.toggleSelectedComp}\r\n            selected={appCtx.selectedComps}\r\n            showTags={appCtx.showTags}\r\n            showBeam={appCtx.showBeam}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    );\r\n  } else {\r\n    // Hier kommt die Camera hin!\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default VirtualLayer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(\r\n  <>\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);","import { useState, useContext, createContext } from \"react\";\r\nimport { useSocketContext } from \"./SocketContext\";\r\nimport { Alert, Snackbar } from '@mui/material';\r\nimport styles from \"./PopUp.module.css\";\r\n\r\nconst PopUpContext = createContext();\r\n\r\nexport function usePopUpContext() {\r\n    return useContext(PopUpContext);\r\n}\r\n\r\nexport function PopUpContextProvider({ children }) {\r\n    const [showPopUp, setShowPopUp] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [type, setType] = useState('info');\r\n\r\n    const socketCtx = useSocketContext();\r\n\r\n    socketCtx.socket.on('error', error => {\r\n        setShowPopUp(true);\r\n        setText(error.errmsg);\r\n        setType('error');\r\n    })\r\n\r\n    socketCtx.socket.on('newUserInfo', (payload) => {\r\n        toggleShowPopUp(payload + ' has joined the experiment!', 'info')\r\n    })\r\n\r\n    const toggleShowPopUp = (newText, newType) => {\r\n        setText(newText);\r\n        setType(newType);\r\n        setShowPopUp(!showPopUp);\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setShowPopUp(false);\r\n    };\r\n\r\n    return (\r\n        <PopUpContext.Provider\r\n            value={{\r\n                showPopUp,\r\n                toggleShowPopUp\r\n            }}\r\n        >\r\n            <Snackbar open={showPopUp} autoHideDuration={2000} onClose={handleClose} >\r\n                <div className={styles.popUp}>\r\n                    <Alert variant=\"filled\" severity={type} onClose={() => { setShowPopUp(false) }}>{text}</Alert>\r\n                </div>\r\n            </Snackbar>\r\n            {children}\r\n        </PopUpContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__26qIN\",\"chatMain\":\"Chat_chatMain__1zSUi\",\"msgForm\":\"Chat_msgForm__3zrhr\",\"chatHandler\":\"Chat_chatHandler__2wAbt\",\"openChat\":\"Chat_openChat__3kAnz\",\"closeChat\":\"Chat_closeChat__a-LQe\",\"buttonBlink\":\"Chat_buttonBlink__juA-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"consoleContainer\":\"Console_consoleContainer__1dDWk\",\"consoleMain\":\"Console_consoleMain__SxxQK\",\"consoleHandler\":\"Console_consoleHandler__2f7jk\",\"openConsole\":\"Console_openConsole__1E2CK\",\"closeConsole\":\"Console_closeConsole__1Gp8h\"};"],"sourceRoot":""}