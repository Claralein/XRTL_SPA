/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import {useFrame} from "@react-three/fiber"
import { MeshMatcapMaterial } from "three";

export default function Model({ ...props }) {
  const [mirrorSelected, setMirrorSelected] = useState(false);
  const [translateMirrorSelected, setTranslateMirrorSelected] = useState(false);
  const [planeSelected, setPlaneSelected] = useState(false)
  const [autoRotate,setAutoRotate] = useState(true)
  const group = useRef();
  
  useFrame(() => {
    if (true) {
      group.current.rotation.y += 0.005;
    }
  })

  
  const { nodes, materials } = useGLTF("/MI_0612.glb");

  return (
    <group ref={group} {...props} dispose={null}>
      <group
        position={[-0.64, 0.67, 1.06]}
        rotation={[Math.PI, 0, Math.PI]}
        scale={0.26}
        onClick={(e) => {
          e.stopPropagation();
          setMirrorSelected(!mirrorSelected);
        }}
      >
        <mesh
          geometry={nodes.KM100mesh002.geometry}
          material={nodes.KM100mesh002.material}
        > {mirrorSelected ? <meshStandardMaterial color="#00ff00" transparent opacity={0.7} /> : <meshPhongMaterial />} 
        </mesh>
        <mesh
          geometry={nodes.KM100mesh002_1.geometry}
          material={nodes.KM100mesh002_1.material}
        />
        <mesh
          geometry={nodes.KM100mesh002_2.geometry}
          material={nodes.KM100mesh002_2.material}
        />
      </group>
      <group
        position={[-1.96, 0.67, 0.13]}
        rotation={[0, Math.PI / 2, 0]}
        scale={0.26}
        onClick={(e) => {
          e.stopPropagation();
          setTranslateMirrorSelected(!translateMirrorSelected);
        }}
      >
        <mesh
          geometry={nodes.KM100mesh003.geometry}
          material={nodes.KM100mesh003.material}
        > {translateMirrorSelected ? <meshStandardMaterial color="#00ff00" transparent opacity={0.7} /> : <meshPhongMaterial />} 
        </mesh>
        <mesh
          geometry={nodes.KM100mesh003_1.geometry}
          material={nodes.KM100mesh003_1.material}
        />
        <mesh
          geometry={nodes.KM100mesh003_2.geometry}
          material={nodes.KM100mesh003_2.material}
        />
      </group>
      <group position={[-0.62, 0.86, -1.12]}  onClick={(e) => {
          e.stopPropagation();
          setPlaneSelected(!planeSelected);
        }}>
        <mesh
          geometry={nodes.Cube003.geometry}
          material={materials.WhiteParts}
        >{planeSelected ? <meshStandardMaterial color="#00ff00" transparent opacity={0.7} /> : <meshStandardMaterial opacity={1.0} />} 
        </mesh>
        <mesh
          geometry={nodes.Cube003_1.geometry}
          material={nodes.Cube003_1.material}
        />
      </group>
      <group position={[-0.64, 0.67, 0.14]}>
        <mesh
          geometry={nodes.Cube004.geometry}
          material={nodes.Cube004.material}
        />
        <mesh
          geometry={nodes.Cube004_1.geometry}
          material={nodes.Cube004_1.material}
        />
      </group>
      <group
        position={[1.56, 0.67, 0.14]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={[0.11, 0.05, 0.11]}
      >
        <mesh
          geometry={nodes.Cylinder011.geometry}
          material={nodes.Cylinder011.material}
        />
        <mesh
          geometry={nodes.Cylinder011_1.geometry}
          material={nodes.Cylinder011_1.material}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/MI_0612.glb");
